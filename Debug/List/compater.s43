///////////////////////////////////////////////////////////////////////////////
//                                                                            /
//                                                      26/Nov/2016  11:15:13 /
// IAR C/C++ Compiler V5.50.1.20465/W32, Evaluation edition for MSP430        /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    __rt_version  =  3                                                      /
//    __double_size =  32                                                     /
//    __reg_r4      =  free                                                   /
//    __reg_r5      =  free                                                   /
//    __pic         =  no                                                     /
//    __core        =  430X                                                   /
//    __data_model  =  large                                                  /
//    Source file   =  E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Drivers\sr /
//                     c\compater.c                                           /
//    Command line  =  E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Drivers\sr /
//                     c\compater.c -D DEBUG -D RAM_VECTOR -lA                /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Debug\List /
//                     \ -o E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Debug /
//                     \Obj\ --no_cse --no_unroll --no_inline                 /
//                     --no_code_motion --no_tbaa --debug -D__MSP430F5529__   /
//                     -e --double=32 --dlib_config "D:\Program Files\IAR     /
//                     Systems\Embedded Workbench 6.4                         /
//                     Evaluation\430\LIB\DLIB\dl430xlff.h" -I                /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\ -I        /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Drivers\in /
//                     c\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Driv /
//                     ers\src\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£° /
//                     å\Drivers\src\USB\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C /
//                     °æ\¹¤³ÌÄ£°å\Drivers\src\USB\USB_config\ -I             /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Drivers\sr /
//                     c\USB\USB_User\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\ /
//                     ¹¤³ÌÄ£°å\Drivers\srcUSB\USB_API\USB_CDC_API\ -I        /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Drivers\sr /
//                     c\USB\USB_API\USB_HID_API\ -I                          /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Drivers\sr /
//                     c\USB\USB_API\USB_MSC_API\ -I                          /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\HardWare\  /
//                     -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\HardWar /
//                     e\delay\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£° /
//                     å\HardWare\18b20\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C° /
//                     æ\¹¤³ÌÄ£°å\HardWare\KEY\ -I                            /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\HardWare\L /
//                     ED\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Har /
//                     dWare\12864\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ /
//                     ÌÄ£°å\HardWare\oled\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6 /
//                     \C°æ\¹¤³ÌÄ£°å\HardWare\mpu6050\inc\ -I                 /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\HardWare\m /
//                     pu6050\src\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³Ì /
//                     Ä£°å\HardWare\nokia5110\inc\ -I                        /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\HardWare\n /
//                     okia5110\src\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤ /
//                     ³ÌÄ£°å\HardWare\LQ_1.8_TFT\ -I                         /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\HardWare\L /
//                     CD_API\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å /
//                     \HardWare\2.2TFT\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C° /
//                     æ\¹¤³ÌÄ£°å\HardWare\nrf24l01\ -I                       /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\System\    /
//                     -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\System\ /
//                     inc\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Sy /
//                     stem\src\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£ /
//                     °å\User\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£° /
//                     å\User\USER\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ /
//                     ÌÄ£°å\Lib\UCOSII\CONFIG\ -I                            /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Lib\uCOSII /
//                     \App\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\L /
//                     ib\uCOSII\CONFIHG\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C /
//                     °æ\¹¤³ÌÄ£°å\Lib\uCOSII\PORT\ -I                        /
//                     E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Lib\UCOSII /
//                     \CORE\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\ /
//                     Lib\FatFs\ -I E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ /
//                     £°å\Lib\FatFs\option\ --core=430X --data_model=large   /
//                     -On --multiplier=32 --multiplier_location=4C0          /
//                     --hw_workaround=CPU40                                  /
//    List file     =  E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Debug\List /
//                     \compater.s43                                          /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME compater

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__core", "430X"
        RTMODEL "__data_model", "large"
        RTMODEL "__dlib_file_descriptor", "1"
        RTMODEL "__double_size", "32"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBLIC CB
        PUBLIC CompaterB_ClearITPendingBit
        FUNCTION CompaterB_ClearITPendingBit,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC CompaterB_ExchangeChanel
        FUNCTION CompaterB_ExchangeChanel,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC CompaterB_GetITStatus
        FUNCTION CompaterB_GetITStatus,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC CompaterB_ITConfig
        FUNCTION CompaterB_ITConfig,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC CompaterB_Init
        FUNCTION CompaterB_Init,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 12, STACK
        PUBLIC CompatorB_GetValue
        FUNCTION CompatorB_GetValue,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBWEAK _A_CBCTL2_L
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:20, SP:20, SR:16, R4L:16, R4H:4, R4:20, R5L:16, R5H:4
          CFI Resource R5:20, R6L:16, R6H:4, R6:20, R7L:16, R7H:4, R7:20, R8L:16
          CFI Resource R8H:4, R8:20, R9L:16, R9H:4, R9:20, R10L:16, R10H:4
          CFI Resource R10:20, R11L:16, R11H:4, R11:20, R12L:16, R12H:4, R12:20
          CFI Resource R13L:16, R13H:4, R13:20, R14L:16, R14H:4, R14:20, R15L:16
          CFI Resource R15H:4, R15:20
          CFI ResourceParts R4 R4H, R4L
          CFI ResourceParts R5 R5H, R5L
          CFI ResourceParts R6 R6H, R6L
          CFI ResourceParts R7 R7H, R7L
          CFI ResourceParts R8 R8H, R8L
          CFI ResourceParts R9 R9H, R9L
          CFI ResourceParts R10 R10H, R10L
          CFI ResourceParts R11 R11H, R11L
          CFI ResourceParts R12 R12H, R12L
          CFI ResourceParts R13 R13H, R13L
          CFI ResourceParts R14 R14H, R14L
          CFI ResourceParts R15 R15H, R15L
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L Undefined
          CFI R12H Undefined
          CFI R12 Undefined
          CFI R13L Undefined
          CFI R13H Undefined
          CFI R13 Undefined
          CFI R14L Undefined
          CFI R14H Undefined
          CFI R14 Undefined
          CFI R15L Undefined
          CFI R15H Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
        EXTERN assert_failed
        FUNCTION assert_failed,0202H
        EXTERN GPIO_MultiBits_Init
        FUNCTION GPIO_MultiBits_Init,0202H

// E:\MSP430\MSP430F5529¿âº¯Êý2.6\C°æ\¹¤³ÌÄ£°å\Drivers\src\compater.c
//    1 #include "compater.h"

        ASEGN DATA16_AN:DATA:NOROOT,08c4H
// union <unnamed> __data16 _A_CBCTL2_L
_A_CBCTL2_L:
        DS8 2

        RSEG DATA20_C:CONST:SORT:NOROOT(0)
`?<Constant "E:\\\\MSP430\\\\MSP430F5529...">`:
        DC8 45H, 3AH, 5CH, 4DH, 53H, 50H, 34H, 33H
        DC8 30H, 5CH, 4DH, 53H, 50H, 34H, 33H, 30H
        DC8 46H, 35H, 35H, 32H, 39H, 0BFH, 0E2H, 0BAH
        DC8 0AFH, 0CAH, 0FDH, 32H, 2EH, 36H, 5CH, 43H
        DC8 0B0H, 0E6H, 5CH, 0B9H, 0A4H, 0B3H, 0CCH, 0C4H
        DC8 0A3H, 0B0H, 0E5H, 5CH, 44H, 72H, 69H, 76H
        DC8 65H, 72H, 73H, 5CH, 73H, 72H, 63H, 5CH
        DC8 63H, 6FH, 6DH, 70H, 61H, 74H, 65H, 72H
        DC8 2EH, 63H, 0

        RSEG DATA20_C:CONST:SORT:NOROOT(0)
`?<Constant "CompaterB_Init">`:
        DC8 "CompaterB_Init"

        RSEG DATA20_C:CONST:SORT:NOROOT(0)
`?<Constant "CompaterB\\261\\310\\275\\317\\306\\367\\`:
        DC8 "CompaterB\261\310\275\317\306\367\326\273\304\334\323\320\322\273\270\366\315\250\265\300\312\271\323\303\262\316\277\274\265\347\321\271\243\241\012"
//    2 #include "gpio.h"
//    3 #include "msp430f5529.h"
//    4 #include "msp430f5529MemMap.h"
//    5 

        RSEG DATA20_C:CONST:SORT:NOROOT(1)
//    6 const COMPB_MemMapPtr CB = COMPB_BASE_PTR;
CB:
        DC32 8C0H
//    7 /*******************************************************************************
//    8 *  º¯ÊýÃû³Æ£ºCompaterB_Init(CompaterB_CHn CB0,CompaterB_CHn CB1)
//    9 *  ¹¦ÄÜËµÃ÷£º³õÊ¼»¯±È½ÏÆ÷ÊäÈëÔ´
//   10 *  ²ÎÊýËµÃ÷£ºCompaterB_CHn CB0 :±È½ÏÆ÷ÊäÈëÍ¨µÀ+
//   11              CompaterB_CHn CB1 :±È½ÏÆ÷ÊäÈëÍ¨µÀ-
//   12 *  º¯Êý·µ»Ø£ºÎÞ
//   13 *  ²Î¿¼×ÊÁÏ£ºhttp://www.docin.com/p-676623167.html
//   14 *  Ê¹ÓÃÊ¾Àý£º CompaterB_Init(CB_CH0,CB_VREF_2_0V);    //³õÊ¼»¯±È½ÏÆ÷CB_CH0ÎªÕýÊäÈë¶Ë£¬CB_VREF_2_0VÎª¸ºÊäÈë¶Ë
//   15 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   16 void CompaterB_Init(CompaterB_CHn CB0,CompaterB_CHn CB1)
CompaterB_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function CompaterB_Init
//   17 {
        FUNCALL CompaterB_Init, assert_failed
        LOCFRAME CSTACK, 12, STACK
        FUNCALL CompaterB_Init, GPIO_MultiBits_Init
        LOCFRAME CSTACK, 12, STACK
        FUNCALL CompaterB_Init, GPIO_MultiBits_Init
        LOCFRAME CSTACK, 12, STACK
        PUSHM.A #0x2, R11
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+12
        MOV.B   R12, R11
        MOV.B   R13, R10
//   18   ASSERT((CB0<CB_CH11) || (CB1<CB_CH11),"CompaterB_Init","CompaterB±È½ÏÆ÷Ö»ÄÜÓÐÒ»¸öÍ¨µÀÊ¹ÓÃ²Î¿¼µçÑ¹£¡\n");//Ö»ÄÜÓÐÒ»¸öÍ¨µÀÊ¹ÓÃ²Î¿¼µçÑ¹
        CMP.B   #0xb, R11
        JNC     ??CompaterB_Init_0
        CMP.B   #0xb, R10
        JNC     ??CompaterB_Init_0
        MOVA    #`?<Constant "CompaterB\\261\\310\\275\\317\\306\\367\\`, R15
        MOVA    #`?<Constant "CompaterB_Init">`, R14
        MOV.W   #0x12, R13
        MOVA    #`?<Constant "E:\\\\MSP430\\\\MSP430F5529...">`, R12
        CALLA   #assert_failed
//   19   //ÉèÖÃÒý½Å  
//   20   if(CB0 <= CB_CH11)
??CompaterB_Init_0:
        CMP.B   #0xc, R11
        JC      ??CompaterB_Init_1
//   21   { //³õÊ¼»¯Òý½ÅÎªµÚ¶þ¹¦ÄÜ
//   22     GPIO_Init((CB0 < CB_CH8) ? P6 : P7, (CB0 < CB_CH8) ? CB0 : (CB0-8),GPI|SEL );
        CMP.B   #0x8, R11
        JC      ??CompaterB_Init_2
        MOV.B   #0x1, R14
        JMP     ??CompaterB_Init_3
??CompaterB_Init_2:
        MOV.B   #0x0, R14
??CompaterB_Init_3:
        MOV.W   #0x1, R15
        SUB.B   #0x1, R14
        JN      ??CompaterB_Init_4
        RPT     R14
        RLAX.W  R15
??CompaterB_Init_4:
        ADD.B   #0x1, R14
        CMP.W   #0x0, R15
        JEQ     ??CompaterB_Init_5
        MOV.B   R11, R13
        JMP     ??CompaterB_Init_6
??CompaterB_Init_5:
        MOV.B   R11, R13
        ADD.W   #0xfff8, R13
??CompaterB_Init_6:
        CMP.B   #0x8, R11
        JC      ??CompaterB_Init_7
        MOV.B   #0x5, R12
        JMP     ??CompaterB_Init_8
??CompaterB_Init_7:
        MOV.B   #0x6, R12
??CompaterB_Init_8:
        MOV.W   #0x101, R14
        CALLA   #GPIO_MultiBits_Init
//   23     CB->IPEN = BIT_SET;                 //ÊäÈëÍ¨µÀÊ¹ÄÜ
        MOVA    &CB, R15
        BIS.W   #0x80, 0(R15)
//   24     CB->IPSEL = CB0;                //ÊäÈëÍ¨µÀÑ¡Ôñ
        MOV.B   R11, R15
        AND.W   #0xf, R15
        MOVA    &CB, R14
        MOV.W   #0xfff0, R13
        AND.W   @R14, R13
        BIS.W   R15, R13
        MOVA    &CB, R15
        MOV.W   R13, 0(R15)
//   25     CB->CTL3 |= (1<<CB0);           //¹Ø±ÕÊäÈë»º´æ
        MOVA    &CB, R15
        MOV.W   #0x1, R14
        SUB.B   #0x1, R11
        JN      ??CompaterB_Init_9
        RPT     R11
        RLAX.W  R14
??CompaterB_Init_9:
        ADD.B   #0x1, R11
        BIS.W   R14, 0x6(R15)
        JMP     ??CompaterB_Init_10
//   26   }
//   27   else
//   28   {
//   29     CBCTL2 = 0u;
??CompaterB_Init_1:
        MOV.W   #0x0, &0x8c4
//   30     CB->RSEL = RESET;                   //²Î¿¼µçÑ¹Ó¦ÓÃµ½±È½ÏÆ÷+¶Ë        
        MOVA    &CB, R15
        BIC.W   #0x20, 0x4(R15)
//   31   }
//   32 
//   33   if(CB1 <= CB_CH11)
??CompaterB_Init_10:
        CMP.B   #0xc, R10
        JC      ??CompaterB_Init_11
//   34   { //³õÊ¼»¯Òý½ÅÎªµÚ¶þ¹¦ÄÜ
//   35     GPIO_Init((CB1 < CB_CH8) ? P6 : P7, (CB1 < CB_CH8) ? CB1 : (CB1-8),GPI|SEL );
        CMP.B   #0x8, R10
        JC      ??CompaterB_Init_12
        MOV.B   #0x1, R14
        JMP     ??CompaterB_Init_13
??CompaterB_Init_12:
        MOV.B   #0x0, R14
??CompaterB_Init_13:
        MOV.W   #0x1, R15
        SUB.B   #0x1, R14
        JN      ??CompaterB_Init_14
        RPT     R14
        RLAX.W  R15
??CompaterB_Init_14:
        ADD.B   #0x1, R14
        CMP.W   #0x0, R15
        JEQ     ??CompaterB_Init_15
        MOV.B   R10, R13
        JMP     ??CompaterB_Init_16
??CompaterB_Init_15:
        MOV.B   R10, R13
        ADD.W   #0xfff8, R13
??CompaterB_Init_16:
        CMP.B   #0x8, R10
        JC      ??CompaterB_Init_17
        MOV.B   #0x5, R12
        JMP     ??CompaterB_Init_18
??CompaterB_Init_17:
        MOV.B   #0x6, R12
??CompaterB_Init_18:
        MOV.W   #0x101, R14
        CALLA   #GPIO_MultiBits_Init
//   36     CB->IMEN = BIT_SET;                 //ÊäÈëÍ¨µÀÊ¹ÄÜ
        MOVA    &CB, R15
        BIS.W   #0x8000, 0(R15)
//   37     CB->IMSEL = CB1;                //ÊäÈëÍ¨µÀÑ¡Ôñ
        MOV.B   R10, R15
        AND.W   #0xff, R15
        SWPB    R15
        AND.W   #0xf00, R15
        MOVA    &CB, R14
        MOV.W   #0xf0ff, R13
        AND.W   @R14, R13
        BIS.W   R15, R13
        MOVA    &CB, R15
        MOV.W   R13, 0(R15)
//   38     CB->CTL3 |= (1<<CB1);           //¹Ø±ÕÊäÈë»º´æ
        MOVA    &CB, R15
        MOV.W   #0x1, R14
        SUB.B   #0x1, R10
        JN      ??CompaterB_Init_19
        RPT     R10
        RLAX.W  R14
??CompaterB_Init_19:
        ADD.B   #0x1, R10
        BIS.W   R14, 0x6(R15)
        JMP     ??CompaterB_Init_20
//   39   }
//   40   else
//   41   {
//   42     CB->RSEL = BIT_SET;                   //²Î¿¼µçÑ¹Ó¦ÓÃµ½±È½ÏÆ÷-¶Ë
??CompaterB_Init_11:
        MOVA    &CB, R15
        BIS.W   #0x20, 0x4(R15)
//   43   }
//   44 
//   45   if((CB0>=CB_VREF_1_5V) || (CB1>=CB_VREF_1_5V))  //Èç¹ûÓÐÒ»¶ËÊ¹ÓÃ²Î¿¼µçÑ¹
??CompaterB_Init_20:
        CMP.B   #0xc, R11
        JC      ??CompaterB_Init_21
        CMP.B   #0xc, R10
        JNC     ??CompaterB_Init_22
//   46   {
//   47     CB->MRVS = 0;
??CompaterB_Init_21:
        MOVA    &CB, R15
        BIC.W   #0x1000, 0x2(R15)
//   48     if((CB0==CB_VREF_VCC) || (CB1==CB_VREF_VCC))
        CMP.B   #0xf, R11
        JEQ     ??CompaterB_Init_23
        CMP.B   #0xf, R10
        JNE     ??CompaterB_Init_24
//   49     {
//   50       CB->REFL = 0;
??CompaterB_Init_23:
        MOVA    &CB, R15
        AND.W   #0x9fff, 0x4(R15)
//   51       CB->RS = 1;                                                    //Íâ²¿²Î¿¼µçÑ¹½ûÖ¹,Ê¹ÓÃVcc×÷Îª²Î¿¼µçÑ¹Ô´
        MOVA    &CB, R15
        MOV.W   0x4(R15), R15
        AND.W   #0xff3f, R15
        BIS.W   #0x40, R15
        MOVA    &CB, R14
        MOV.W   R15, 0x4(R14)
        JMP     ??CompaterB_Init_25
//   52     }
//   53     else if((CB0==CB_VREF_1_5V) || (CB1==CB_VREF_1_5V)) //
??CompaterB_Init_24:
        CMP.B   #0xc, R11
        JEQ     ??CompaterB_Init_26
        CMP.B   #0xc, R10
        JNE     ??CompaterB_Init_27
//   54     {
//   55       CB->REFL = 1;
??CompaterB_Init_26:
        MOVA    &CB, R15
        MOV.W   0x4(R15), R15
        AND.W   #0x9fff, R15
        BIS.W   #0x2000, R15
        MOVA    &CB, R14
        MOV.W   R15, 0x4(R14)
//   56       CB->RS = 3;
        MOVA    &CB, R15
        BIS.W   #0xc0, 0x4(R15)
//   57       CB->REFACC = RESET;                                                //²Î¿¼µçÑ¹Îª1.5v,Ê¹ÓÃÍâ²¿²Î¿¼µçÑ¹·ÖÑ¹
        MOVA    &CB, R15
        BIC.W   #0x8000, 0x4(R15)
        JMP     ??CompaterB_Init_25
//   58     }
//   59     else if((CB0==CB_VREF_2_0V) || (CB1==CB_VREF_2_0V)) //
??CompaterB_Init_27:
        CMP.B   #0xd, R11
        JEQ     ??CompaterB_Init_28
        CMP.B   #0xd, R10
        JNE     ??CompaterB_Init_29
//   60     {
//   61       CB->REFL = 2;
??CompaterB_Init_28:
        MOVA    &CB, R15
        MOV.W   0x4(R15), R15
        AND.W   #0x9fff, R15
        BIS.W   #0x4000, R15
        MOVA    &CB, R14
        MOV.W   R15, 0x4(R14)
//   62       CB->RS = 3;
        MOVA    &CB, R15
        BIS.W   #0xc0, 0x4(R15)
//   63       CB->REFACC = RESET;                                                //²Î¿¼µçÑ¹Îª2.0v,Ê¹ÓÃÍâ²¿²Î¿¼µçÑ¹·ÖÑ¹
        MOVA    &CB, R15
        BIC.W   #0x8000, 0x4(R15)
        JMP     ??CompaterB_Init_25
//   64     }
//   65     else if((CB0==CB_VREF_2_5V) || (CB1==CB_VREF_2_5V)) //
??CompaterB_Init_29:
        CMP.B   #0xe, R11
        JEQ     ??CompaterB_Init_30
        CMP.B   #0xe, R10
        JNE     ??CompaterB_Init_25
//   66     {
//   67       CB->REFL = 3;
??CompaterB_Init_30:
        MOVA    &CB, R15
        BIS.W   #0x6000, 0x4(R15)
//   68       CB->RS = 3;
        MOVA    &CB, R15
        BIS.W   #0xc0, 0x4(R15)
//   69       CB->REFACC = RESET;                                               //²Î¿¼µçÑ¹Îª2.5v,Ê¹ÓÃÍâ²¿²Î¿¼µçÑ¹·ÖÑ¹
        MOVA    &CB, R15
        BIC.W   #0x8000, 0x4(R15)
//   70     }
//   71     CB->REF0 = 31;
??CompaterB_Init_25:
        MOVA    &CB, R15
        BIS.W   #0x1f, 0x4(R15)
//   72     CB->REF1 = 31;
        MOVA    &CB, R15
        BIS.W   #0x1f00, 0x4(R15)
//   73   }
//   74 
//   75   CB->PWRMD = 1;                             //Õý³£µçÔ´Ä£Ê½ 
??CompaterB_Init_22:
        MOVA    &CB, R15
        MOV.W   0x2(R15), R15
        AND.W   #0xfcff, R15
        BIS.W   #0x100, R15
        MOVA    &CB, R14
        MOV.W   R15, 0x2(R14)
//   76   CB->ON = BIT_SET;                              // ´ò¿ª±È½ÏÆ÷B  
        MOVA    &CB, R15
        BIS.W   #0x400, 0x2(R15)
//   77 }
        POPM.A  #0x2, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock0
        REQUIRE _A_CBCTL2_L
//   78 /*******************************************************************************
//   79 *  º¯ÊýÃû³Æ: CompaterB_ExchangeChanel(STATUS status)  
//   80 *  ¹¦ÄÜËµÃ÷£º½»»»ÊäÈëÍ¨µÀ¼«ÐÔ
//   81 *  ²ÎÊýËµÃ÷£ºSTATUS status£ºÊÇ·ñ½»»»¼«ÐÔ
//   82 *  º¯Êý·µ»Ø£ºÎÞ
//   83 *  Ê¹ÓÃÊ¾Àý£ºCompaterB_ExchangeChanel(DISABLE);   //½ûÖ¹½»»»±È½ÏÆ÷ÊäÈëÍ¨µÀ   
//   84 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   85 void  CompaterB_ExchangeChanel(STATUS status)                                      
CompaterB_ExchangeChanel:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function CompaterB_ExchangeChanel
//   86 {
//   87   CB->EX = status;
        MOV.B   R12, R12
        MOVA    &CB, R15
        BIT.B   #0x1, R12
        JC      ??CompaterB_ExchangeChanel_0
        BIC.W   #0x20, 0x2(R15)
        RETA
??CompaterB_ExchangeChanel_0:
        BIS.W   #0x20, 0x2(R15)
//   88 }
        RETA
          CFI EndBlock cfiBlock1
//   89 /*******************************************************************************
//   90 *  º¯ÊýÃû³Æ£ºCompatorB_GetValue(void)
//   91 *  ¹¦ÄÜËµÃ÷£º¶ÁÈ¡±È½ÏµÄ½á¹û
//   92 *  ²ÎÊýËµÃ÷£ºÎÞ
//   93 *  º¯Êý·µ»Ø£ºSTATUS :BIT_SET ÕýÊäÈë¶ËµçÑ¹´óÓÚ¸ºÊäÈë¶ËµçÑ¹£¬RESET ÕýÊäÈë¶ËµçÑ¹Ð¡ÓÚÓÚ¸ºÊäÈë¶ËµçÑ¹
//   94 *  Ê¹ÓÃÊ¾Àý£º
//   95 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   96 STATUS CompatorB_GetValue(void)
CompatorB_GetValue:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function CompatorB_GetValue
//   97 {
//   98   return ((CB->CB_OUT) ? BIT_SET : RESET);
        MOVA    &CB, R15
        MOV.W   0x2(R15), R12
        AND.W   #0x1, R12
        RETA
          CFI EndBlock cfiBlock2
//   99 }
//  100 /*******************************************************************************
//  101 *  º¯ÊýÃû³Æ: CompaterB_ITConfig (CompaterB_IRQn irqn, STATUS ITState)
//  102 *  ¹¦ÄÜËµÃ÷£ºÉèÖÃÖÐ¶ÏÊÇ·ñÊ¹ÄÜ²¢ÅäÖÃÖÐ¶Ï´¥·¢ÑØ
//  103 *  ²ÎÊýËµÃ÷£ºCompaterB_IRQn irqn:Ñ¡ÔñÎªÉÏÉýÑØ»¹ÊÇÏÂ½µÑØÖÐ¶Ï
//  104              BOOL ITState       :ÊÇ·ñÊ¹ÄÜÖÐ¶Ï
//  105 *  º¯Êý·µ»Ø£ºÎÞ
//  106 *  Ê¹ÓÃÊ¾Àý£ºCompaterB_ITConfig (CB_RaisingIRQn, ENABLE);  //±È½ÏÆ÷ÉèÖÃÎªÉÏÉýÑØÖÐ¶Ï£¬²¢Ê¹ÄÜÖÐ¶Ï
//  107 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//  108 void CompaterB_ITConfig (CompaterB_IRQn irqn, STATUS ITState)
CompaterB_ITConfig:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function CompaterB_ITConfig
//  109 {
//  110   CB->IES = RESET;                 //ÉÏÉýÑØCBIFG£¬ÏÂ½µÑØCBIIFG
        MOVA    &CB, R15
        BIC.W   #0x8, 0x2(R15)
//  111   if(ITState != DISABLE)//ÉèÖÃÊÇ·ñÔÊÐíÖÐ¶Ï
        CMP.B   #0x0, R13
        JEQ     ??CompaterB_ITConfig_0
//  112   {
//  113     CB->CB_IFG &=~irqn;              //ÇåÖÐ¶Ï±êÖ¾Î»
        MOVA    &CB, R15
        BIC.B   R12, 0xc(R15)
//  114     CB->CB_IE  |= irqn;
        MOVA    &CB, R15
        BIS.B   R12, 0xd(R15)
        RETA
//  115   }
//  116   else
//  117   {
//  118     CB->CB_IE  &=~irqn;
??CompaterB_ITConfig_0:
        MOVA    &CB, R15
        BIC.B   R12, 0xd(R15)
//  119   }                      
//  120 }
        RETA
          CFI EndBlock cfiBlock3
//  121 /*******************************************************************************
//  122 *  º¯ÊýÃû³Æ£ºCompaterB_GetITStatus(CompaterB_IRQn irqn)
//  123 *  ¹¦ÄÜËµÃ÷£º¶ÁÈ¡±È½ÏÖÐ¶Ï±êÖ¾×´Ì¬
//  124 *  ²ÎÊýËµÃ÷£ºCompaterB_IRQn irqn:Ñ¡ÔñÎªÉÏÉýÑØ»¹ÊÇÏÂ½µÑØÖÐ¶Ï±êÖ¾
//  125 *  º¯Êý·µ»Ø£ºSTATUS £ºÖÐ¶Ï±êÖ¾ÊÇ·ñÖÃÎ»
//  126 *  Ê¹ÓÃÊ¾Àý£ºif(TRUE == CompaterB_GetITStatus(CB_RaisingIRQn)){...} //ÅÐ¶ÏÖÐ¶Ï±êÖ¾ÊÇ·ñÖÃÎ»
//  127 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//  128 STATUS  CompaterB_GetITStatus(CompaterB_IRQn irqn)
CompaterB_GetITStatus:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function CompaterB_GetITStatus
//  129 {
//  130   return ((CB->CB_IFG & irqn) ? TRUE : FALSE);
        MOVA    &CB, R15
        BIT.B   R12, 0xc(R15)
        JEQ     ??CompaterB_GetITStatus_0
        MOV.B   #0x1, R12
        RETA
??CompaterB_GetITStatus_0:
        MOV.B   #0x0, R12
        RETA
          CFI EndBlock cfiBlock4
//  131 }
//  132 /*******************************************************************************
//  133 *  º¯ÊýÃû³Æ£ºCompaterB_ClearITPendingBit(CompaterB_IRQn irqn)
//  134 *  ¹¦ÄÜËµÃ÷£ºÇå³ý±È½ÏÖÐ¶Ï±êÖ¾Î»
//  135 *  ²ÎÊýËµÃ÷£ºCompaterB_IRQn irqn:Ñ¡ÔñÎªÉÏÉýÑØ»¹ÊÇÏÂ½µÑØÖÐ¶Ï±êÖ¾
//  136 *  º¯Êý·µ»Ø£ºÎÞ
//  137 *  Ê¹ÓÃÊ¾Àý£ºCompaterB_ClearITPendingBit(CB_RaisingIRQn);   //Çå³ýÉÏÉýÑØÖÐ¶Ï±êÖ¾
//  138 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//  139 void  CompaterB_ClearITPendingBit(CompaterB_IRQn irqn)
CompaterB_ClearITPendingBit:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function CompaterB_ClearITPendingBit
//  140 {
//  141   CB->CB_IFG &=~ irqn;
        MOVA    &CB, R15
        BIC.B   R12, 0xc(R15)
//  142 }
        RETA
          CFI EndBlock cfiBlock5

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
// 
// 704 bytes in segment CODE
//   2 bytes in segment DATA16_AN
// 131 bytes in segment DATA20_C
// 
// 704 bytes of CODE  memory
// 131 bytes of CONST memory
//   0 bytes of DATA  memory (+ 2 bytes shared)
//
//Errors: none
//Warnings: none
