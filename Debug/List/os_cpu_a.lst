###############################################################################
#                                                                             #
#     IAR Assembler V5.50.1.50465/W32  for MSP430 17/Nov/2016  09:07:13       #
#     Copyright 1996-2012 IAR Systems AB.                                     #
#                                                                             #
#           Target option =  MSP430X                                          #
#           Source file   =  E:\MSP430\MSP430F5529库函数2.6\C版\工程模板\Lib\UCOSII\PORT\os_cpu_a.s43#
#           List file     =  E:\MSP430\MSP430F5529库函数2.6\C版\工程模板\Debug\List\os_cpu_a.lst#
#           Object file   =  E:\MSP430\MSP430F5529库函数2.6\C版\工程模板\Debug\Obj\os_cpu_a.r43#
#           Command line  =  E:\MSP430\MSP430F5529库函数2.6\C版\工程模板\Lib\UCOSII\PORT\os_cpu_a.s43 #
#                            -OE:\MSP430\MSP430F5529库函数2.6\C版\工程模板\Debug\Obj\ #
#                            -s+ -M<> -w+                                     #
#                            -LE:\MSP430\MSP430F5529库函数2.6\C版\工程模板\Debug\List\ #
#                            -cAOM -i -B -t8 -x -r -D__MSP430F5529__ -v1      #
#                            -ID:\Program Files\IAR Systems\Embedded Workbench 6.4 Evaluation\430\INC\ #
#                                                                             #
###############################################################################

      1    000000              ;***********************************************
                               ************************************************
                               *********
      2    000000              ;                                              
                                uC/OS-II
      3    000000              ;                                         The
                                Real-Time Kernel
      4    000000              ;
      5    000000              ;                              (c) Copyright
                                2002, Micrium, Inc., Weston, FL
      6    000000              ;                                          All
                                Rights Reserved
      7    000000              ;
      8    000000              ;                                              
                                TI MSP430
      9    000000              ;
     10    000000              ;
     11    000000              ; File         : OS_CPU_A.S43
     12    000000              ; By           : Jian Chen (yenger@hotmail.com)
     13    000000              ;                Jean J. Labrosse
     14    000000              ;***********************************************
                               ************************************************
                               *********
     15    000000              
     16    000000              #include   <msp430f5529.h>
      1    000000              /***********************************************
                               *********************
      2    000000              *
      3    000000              * Standard register and bit definitions for the
                                Texas Instruments
      4    000000              * MSP430 microcontroller.
      5    000000              *
      6    000000              * This file supports assembler and C development
                                for
      7    000000              * MSP430F5529 devices.
      8    000000              *
      9    000000              * Texas Instruments, Version 1.4
     10    000000              *
     11    000000              * Rev. 1.0, Setup
     12    000000              * Rev. 1.1, Fixed Error in DMA Trigger
                                Definitons
     13    000000              * Rev. 1.2, fixed SYSUNIV_BUSIFG definition
     14    000000              *           fixed wrong bit definition in
                                PM5CTL0 (LOCKLPM5)
     15    000000              * Rev. 1.3, Changed access type of DMAxSZ
                                registers to word only
     16    000000              * Rev. 1.4  Changed access type of TimerA/B
                                registers to word only
     17    000000              *
     18    000000              ************************************************
                               ********************/
     19    000000              
     20    000000              #ifndef __MSP430F5529
     21    000000              #define __MSP430F5529
     22    000000              
     23    000000              #define __MSP430_HEADER_VERSION__ 1065      /*
                                Beta-Build-Tag: #0023 */
     24    000000              
     25    000000              #ifdef  __IAR_SYSTEMS_ICC__
     26    000000              #ifndef _SYSTEM_BUILD
     27    000000              #pragma system_include
     28    000000              #endif
     29    000000              #endif
     30    000000              
     31    000000              #if (((__TID__ >> 8) & 0x7F) != 0x2b)     /*
                                0x2b = 43 dec */
     32    000000              #error msp430f5529.h file for use with
                                ICC430/A430 only
     33    000000              #endif
     34    000000              
     35    000000              
     36    000000              #ifdef __IAR_SYSTEMS_ICC__
     37    000000              #include "in430.h"
     38    000000              #pragma language=extended
     40    000000              #define DEFC(name, address) __no_init volatile
                                unsigned char name @ address;
     41    000000              #define DEFW(name, address) __no_init volatile
                                unsigned short name @ address;
     43    000000              #define DEFCW(name, address) __no_init union
                                \
     53    000000              #define READ_ONLY_DEFCW(name, address) __no_init
                                union \
     64    000000              #if __REGISTER_MODEL__ == __REGISTER_MODEL_REG20
                               __
     65    000000              #define __ACCESS_20BIT_REG__  void __data20 *
                                volatile
     66    000000              #else
     67    000000              #define __ACCESS_20BIT_REG__  volatile unsigned
                                short  /* only short access from C is allowed
                                in small memory model */
     68    000000              #endif
     70    000000              #define DEFA(name, address) __no_init union
                                \
     85    000000              #endif  /* __IAR_SYSTEMS_ICC__  */
     86    000000              
     87    000000              
     88    000000              #ifdef __IAR_SYSTEMS_ASM__
     89    000000              #define DEFC(name, address) sfrb name =
                                address;
     90    000000              #define DEFW(name, address) sfrw name =
                                address;
     91    000000              
     92    000000              #define DEFCW(name, address) sfrbw name,
                                name##_L, name##_H, address;
     93    000000              sfrbw macro name, name_L, name_H, address;
     94    000000              sfrb name_L = address;
     95    000000              sfrb name_H = address+1;
     96    000000              sfrw name   = address;
     97    000000                    endm
     98    000000              
     99    000000              #define READ_ONLY_DEFCW(name, address)
                                const_sfrbw name, name##_L, name##_H,
                                address;
    100    000000              const_sfrbw macro name, name_L, name_H,
                                address;
    101    000000              const sfrb name_L = address;
    102    000000              const sfrb name_H = address+1;
    103    000000              const sfrw name   = address;
    104    000000                    endm
    105    000000              
    106    000000              #define DEFA(name, address) sfrba name, name##L,
                                name##H, name##_L, name##_H, address;
    107    000000              sfrba macro name, nameL, nameH, name_L, name_H,
                                address;
    108    000000              sfrb name_L = address;
    109    000000              sfrb name_H = address+1;
    110    000000              sfrw nameL  = address;
    111    000000              sfrw nameH  = address+2;
    112    000000              sfrl name   = address;
    113    000000                    endm
    114    000000              
    115    000000              #endif /* __IAR_SYSTEMS_ASM__*/
    116    000000              
    117    000000              #ifdef __cplusplus
    118    000000              #define READ_ONLY
    119    000000              #else
    120    000000              #define READ_ONLY const
    121    000000              #endif
    122    000000              
    123    000000              /***********************************************
                               *************
    124    000000              * STANDARD BITS
    125    000000              ************************************************
                               ************/
    126    000000              
    127    000000              #define BIT0                (0x0001u)
    128    000000              #define BIT1                (0x0002u)
    129    000000              #define BIT2                (0x0004u)
    130    000000              #define BIT3                (0x0008u)
    131    000000              #define BIT4                (0x0010u)
    132    000000              #define BIT5                (0x0020u)
    133    000000              #define BIT6                (0x0040u)
    134    000000              #define BIT7                (0x0080u)
    135    000000              #define BIT8                (0x0100u)
    136    000000              #define BIT9                (0x0200u)
    137    000000              #define BITA                (0x0400u)
    138    000000              #define BITB                (0x0800u)
    139    000000              #define BITC                (0x1000u)
    140    000000              #define BITD                (0x2000u)
    141    000000              #define BITE                (0x4000u)
    142    000000              #define BITF                (0x8000u)
    143    000000              
    144    000000              /***********************************************
                               *************
    145    000000              * STATUS REGISTER BITS
    146    000000              ************************************************
                               ************/
    147    000000              
    148    000000              #define C                   (0x0001u)
    149    000000              #define Z                   (0x0002u)
    150    000000              #define N                   (0x0004u)
    151    000000              #define V                   (0x0100u)
    152    000000              #define GIE                 (0x0008u)
    153    000000              #define CPUOFF              (0x0010u)
    154    000000              #define OSCOFF              (0x0020u)
    155    000000              #define SCG0                (0x0040u)
    156    000000              #define SCG1                (0x0080u)
    157    000000              
    158    000000              /* Low Power Modes coded with Bits 4-7 in SR
                                */
    159    000000              
    160    000000              #ifndef __IAR_SYSTEMS_ICC__ /* Begin #defines
                                for assembler */
    161    000000              #define LPM0                (CPUOFF)
    162    000000              #define LPM1                (SCG0+CPUOFF)
    163    000000              #define LPM2                (SCG1+CPUOFF)
    164    000000              #define LPM3                (SCG1+SCG0+CPUOFF)
    165    000000              #define LPM4                (SCG1+SCG0+OSCOFF+CP
                               UOFF)
    166    000000              /* End #defines for assembler */
    167    000000              
    168    000000              #else /* Begin #defines for C */
    169    000000              #define LPM0_bits           (CPUOFF)
    170    000000              #define LPM1_bits           (SCG0+CPUOFF)
    171    000000              #define LPM2_bits           (SCG1+CPUOFF)
    172    000000              #define LPM3_bits           (SCG1+SCG0+CPUOFF)
    173    000000              #define LPM4_bits           (SCG1+SCG0+OSCOFF+CP
                               UOFF)
    175    000000              #include "in430.h"
    177    000000              #define LPM0      _BIS_SR(LPM0_bits)     /*
                                Enter Low Power Mode 0 */
    178    000000              #define LPM0_EXIT _BIC_SR_IRQ(LPM0_bits) /* Exit
                                Low Power Mode 0 */
    179    000000              #define LPM1      _BIS_SR(LPM1_bits)     /*
                                Enter Low Power Mode 1 */
    180    000000              #define LPM1_EXIT _BIC_SR_IRQ(LPM1_bits) /* Exit
                                Low Power Mode 1 */
    181    000000              #define LPM2      _BIS_SR(LPM2_bits)     /*
                                Enter Low Power Mode 2 */
    182    000000              #define LPM2_EXIT _BIC_SR_IRQ(LPM2_bits) /* Exit
                                Low Power Mode 2 */
    183    000000              #define LPM3      _BIS_SR(LPM3_bits)     /*
                                Enter Low Power Mode 3 */
    184    000000              #define LPM3_EXIT _BIC_SR_IRQ(LPM3_bits) /* Exit
                                Low Power Mode 3 */
    185    000000              #define LPM4      _BIS_SR(LPM4_bits)     /*
                                Enter Low Power Mode 4 */
    186    000000              #define LPM4_EXIT _BIC_SR_IRQ(LPM4_bits) /* Exit
                                Low Power Mode 4 */
    187    000000              #endif /* End #defines for C */
    188    000000              
    189    000000              /***********************************************
                               *************
    190    000000              * CPU
    191    000000              ************************************************
                               ************/
    192    000000              #define __MSP430_HAS_MSP430XV2_CPU__  /*
                                Definition to show that it has MSP430XV2 CPU
                                */
    193    000000              
    194    000000              /***********************************************
                               *************
    195    000000              * PERIPHERAL FILE MAP
    196    000000              ************************************************
                               ************/
    197    000000              
    198    000000              /***********************************************
                               *************
    199    000000              * ADC12 PLUS
    200    000000              ************************************************
                               ************/
    201    000000              #define __MSP430_HAS_ADC12_PLUS__     /*
                                Definition to show that Module is available
                                */
    202    000000              #define __MSP430_BASEADDRESS_ADC12_PLUS__
                                0x0700
    203    000000              
    204    000000              #define  ADC12CTL0_          (0x0700u)  /*
                                ADC12+ Control 0 */
    205    000000              DEFCW(   ADC12CTL0         , ADC12CTL0_)
    205.1  000000              sfrb ADC12CTL0_L = (0x0700u);
    205.2  000000              sfrb ADC12CTL0_H = (0x0700u)+1;
    205.3  000000              sfrw ADC12CTL0   = (0x0700u);
    205.4  000000                    endm
    206    000000              #define  ADC12CTL1_          (0x0702u)  /*
                                ADC12+ Control 1 */
    207    000000              DEFCW(   ADC12CTL1         , ADC12CTL1_)
    207.1  000000              sfrb ADC12CTL1_L = (0x0702u);
    207.2  000000              sfrb ADC12CTL1_H = (0x0702u)+1;
    207.3  000000              sfrw ADC12CTL1   = (0x0702u);
    207.4  000000                    endm
    208    000000              #define  ADC12CTL2_          (0x0704u)  /*
                                ADC12+ Control 2 */
    209    000000              DEFCW(   ADC12CTL2         , ADC12CTL2_)
    209.1  000000              sfrb ADC12CTL2_L = (0x0704u);
    209.2  000000              sfrb ADC12CTL2_H = (0x0704u)+1;
    209.3  000000              sfrw ADC12CTL2   = (0x0704u);
    209.4  000000                    endm
    210    000000              #define  ADC12IFG_           (0x070Au)  /*
                                ADC12+ Interrupt Flag */
    211    000000              DEFCW(   ADC12IFG          , ADC12IFG_)
    211.1  000000              sfrb ADC12IFG_L = (0x070Au);
    211.2  000000              sfrb ADC12IFG_H = (0x070Au)+1;
    211.3  000000              sfrw ADC12IFG   = (0x070Au);
    211.4  000000                    endm
    212    000000              #define  ADC12IE_            (0x070Cu)  /*
                                ADC12+ Interrupt Enable */
    213    000000              DEFCW(   ADC12IE           , ADC12IE_)
    213.1  000000              sfrb ADC12IE_L = (0x070Cu);
    213.2  000000              sfrb ADC12IE_H = (0x070Cu)+1;
    213.3  000000              sfrw ADC12IE   = (0x070Cu);
    213.4  000000                    endm
    214    000000              #define  ADC12IV_            (0x070Eu)  /*
                                ADC12+ Interrupt Vector Word */
    215    000000              DEFCW(   ADC12IV           , ADC12IV_)
    215.1  000000              sfrb ADC12IV_L = (0x070Eu);
    215.2  000000              sfrb ADC12IV_H = (0x070Eu)+1;
    215.3  000000              sfrw ADC12IV   = (0x070Eu);
    215.4  000000                    endm
    216    000000              
    217    000000              #define  ADC12MEM0_          (0x0720u)  /* ADC12
                                Conversion Memory 0 */
    218    000000              DEFCW(   ADC12MEM0         , ADC12MEM0_)
    218.1  000000              sfrb ADC12MEM0_L = (0x0720u);
    218.2  000000              sfrb ADC12MEM0_H = (0x0720u)+1;
    218.3  000000              sfrw ADC12MEM0   = (0x0720u);
    218.4  000000                    endm
    219    000000              #define  ADC12MEM1_          (0x0722u)  /* ADC12
                                Conversion Memory 1 */
    220    000000              DEFCW(   ADC12MEM1         , ADC12MEM1_)
    220.1  000000              sfrb ADC12MEM1_L = (0x0722u);
    220.2  000000              sfrb ADC12MEM1_H = (0x0722u)+1;
    220.3  000000              sfrw ADC12MEM1   = (0x0722u);
    220.4  000000                    endm
    221    000000              #define  ADC12MEM2_          (0x0724u)  /* ADC12
                                Conversion Memory 2 */
    222    000000              DEFCW(   ADC12MEM2         , ADC12MEM2_)
    222.1  000000              sfrb ADC12MEM2_L = (0x0724u);
    222.2  000000              sfrb ADC12MEM2_H = (0x0724u)+1;
    222.3  000000              sfrw ADC12MEM2   = (0x0724u);
    222.4  000000                    endm
    223    000000              #define  ADC12MEM3_          (0x0726u)  /* ADC12
                                Conversion Memory 3 */
    224    000000              DEFCW(   ADC12MEM3         , ADC12MEM3_)
    224.1  000000              sfrb ADC12MEM3_L = (0x0726u);
    224.2  000000              sfrb ADC12MEM3_H = (0x0726u)+1;
    224.3  000000              sfrw ADC12MEM3   = (0x0726u);
    224.4  000000                    endm
    225    000000              #define  ADC12MEM4_          (0x0728u)  /* ADC12
                                Conversion Memory 4 */
    226    000000              DEFCW(   ADC12MEM4         , ADC12MEM4_)
    226.1  000000              sfrb ADC12MEM4_L = (0x0728u);
    226.2  000000              sfrb ADC12MEM4_H = (0x0728u)+1;
    226.3  000000              sfrw ADC12MEM4   = (0x0728u);
    226.4  000000                    endm
    227    000000              #define  ADC12MEM5_          (0x072Au)  /* ADC12
                                Conversion Memory 5 */
    228    000000              DEFCW(   ADC12MEM5         , ADC12MEM5_)
    228.1  000000              sfrb ADC12MEM5_L = (0x072Au);
    228.2  000000              sfrb ADC12MEM5_H = (0x072Au)+1;
    228.3  000000              sfrw ADC12MEM5   = (0x072Au);
    228.4  000000                    endm
    229    000000              #define  ADC12MEM6_          (0x072Cu)  /* ADC12
                                Conversion Memory 6 */
    230    000000              DEFCW(   ADC12MEM6         , ADC12MEM6_)
    230.1  000000              sfrb ADC12MEM6_L = (0x072Cu);
    230.2  000000              sfrb ADC12MEM6_H = (0x072Cu)+1;
    230.3  000000              sfrw ADC12MEM6   = (0x072Cu);
    230.4  000000                    endm
    231    000000              #define  ADC12MEM7_          (0x072Eu)  /* ADC12
                                Conversion Memory 7 */
    232    000000              DEFCW(   ADC12MEM7         , ADC12MEM7_)
    232.1  000000              sfrb ADC12MEM7_L = (0x072Eu);
    232.2  000000              sfrb ADC12MEM7_H = (0x072Eu)+1;
    232.3  000000              sfrw ADC12MEM7   = (0x072Eu);
    232.4  000000                    endm
    233    000000              #define  ADC12MEM8_          (0x0730u)  /* ADC12
                                Conversion Memory 8 */
    234    000000              DEFCW(   ADC12MEM8         , ADC12MEM8_)
    234.1  000000              sfrb ADC12MEM8_L = (0x0730u);
    234.2  000000              sfrb ADC12MEM8_H = (0x0730u)+1;
    234.3  000000              sfrw ADC12MEM8   = (0x0730u);
    234.4  000000                    endm
    235    000000              #define  ADC12MEM9_          (0x0732u)  /* ADC12
                                Conversion Memory 9 */
    236    000000              DEFCW(   ADC12MEM9         , ADC12MEM9_)
    236.1  000000              sfrb ADC12MEM9_L = (0x0732u);
    236.2  000000              sfrb ADC12MEM9_H = (0x0732u)+1;
    236.3  000000              sfrw ADC12MEM9   = (0x0732u);
    236.4  000000                    endm
    237    000000              #define  ADC12MEM10_         (0x0734u)  /* ADC12
                                Conversion Memory 10 */
    238    000000              DEFCW(   ADC12MEM10        , ADC12MEM10_)
    238.1  000000              sfrb ADC12MEM10_L = (0x0734u);
    238.2  000000              sfrb ADC12MEM10_H = (0x0734u)+1;
    238.3  000000              sfrw ADC12MEM10   = (0x0734u);
    238.4  000000                    endm
    239    000000              #define  ADC12MEM11_         (0x0736u)  /* ADC12
                                Conversion Memory 11 */
    240    000000              DEFCW(   ADC12MEM11        , ADC12MEM11_)
    240.1  000000              sfrb ADC12MEM11_L = (0x0736u);
    240.2  000000              sfrb ADC12MEM11_H = (0x0736u)+1;
    240.3  000000              sfrw ADC12MEM11   = (0x0736u);
    240.4  000000                    endm
    241    000000              #define  ADC12MEM12_         (0x0738u)  /* ADC12
                                Conversion Memory 12 */
    242    000000              DEFCW(   ADC12MEM12        , ADC12MEM12_)
    242.1  000000              sfrb ADC12MEM12_L = (0x0738u);
    242.2  000000              sfrb ADC12MEM12_H = (0x0738u)+1;
    242.3  000000              sfrw ADC12MEM12   = (0x0738u);
    242.4  000000                    endm
    243    000000              #define  ADC12MEM13_         (0x073Au)  /* ADC12
                                Conversion Memory 13 */
    244    000000              DEFCW(   ADC12MEM13        , ADC12MEM13_)
    244.1  000000              sfrb ADC12MEM13_L = (0x073Au);
    244.2  000000              sfrb ADC12MEM13_H = (0x073Au)+1;
    244.3  000000              sfrw ADC12MEM13   = (0x073Au);
    244.4  000000                    endm
    245    000000              #define  ADC12MEM14_         (0x073Cu)  /* ADC12
                                Conversion Memory 14 */
    246    000000              DEFCW(   ADC12MEM14        , ADC12MEM14_)
    246.1  000000              sfrb ADC12MEM14_L = (0x073Cu);
    246.2  000000              sfrb ADC12MEM14_H = (0x073Cu)+1;
    246.3  000000              sfrw ADC12MEM14   = (0x073Cu);
    246.4  000000                    endm
    247    000000              #define  ADC12MEM15_         (0x073Eu)  /* ADC12
                                Conversion Memory 15 */
    248    000000              DEFCW(   ADC12MEM15        , ADC12MEM15_)
    248.1  000000              sfrb ADC12MEM15_L = (0x073Eu);
    248.2  000000              sfrb ADC12MEM15_H = (0x073Eu)+1;
    248.3  000000              sfrw ADC12MEM15   = (0x073Eu);
    248.4  000000                    endm
    249    000000              #define ADC12MEM_           ADC12MEM  /* ADC12
                                Conversion Memory */
    250    000000              #ifndef __IAR_SYSTEMS_ICC__
    251    000000              #define ADC12MEM            ADC12MEM0 /* ADC12
                                Conversion Memory (for assembler) */
    252    000000              #else
    253    000000              #define ADC12MEM            ((int*) &ADC12MEM0)
                                /* ADC12 Conversion Memory (for C) */
    254    000000              #endif
    255    000000              
    256    000000              #define ADC12MCTL0_         (0x0710u)  /* ADC12
                                Memory Control 0 */
    257    000000              DEFC(   ADC12MCTL0        , ADC12MCTL0_)
    258    000000              #define ADC12MCTL1_         (0x0711u)  /* ADC12
                                Memory Control 1 */
    259    000000              DEFC(   ADC12MCTL1        , ADC12MCTL1_)
    260    000000              #define ADC12MCTL2_         (0x0712u)  /* ADC12
                                Memory Control 2 */
    261    000000              DEFC(   ADC12MCTL2        , ADC12MCTL2_)
    262    000000              #define ADC12MCTL3_         (0x0713u)  /* ADC12
                                Memory Control 3 */
    263    000000              DEFC(   ADC12MCTL3        , ADC12MCTL3_)
    264    000000              #define ADC12MCTL4_         (0x0714u)  /* ADC12
                                Memory Control 4 */
    265    000000              DEFC(   ADC12MCTL4        , ADC12MCTL4_)
    266    000000              #define ADC12MCTL5_         (0x0715u)  /* ADC12
                                Memory Control 5 */
    267    000000              DEFC(   ADC12MCTL5        , ADC12MCTL5_)
    268    000000              #define ADC12MCTL6_         (0x0716u)  /* ADC12
                                Memory Control 6 */
    269    000000              DEFC(   ADC12MCTL6        , ADC12MCTL6_)
    270    000000              #define ADC12MCTL7_         (0x0717u)  /* ADC12
                                Memory Control 7 */
    271    000000              DEFC(   ADC12MCTL7        , ADC12MCTL7_)
    272    000000              #define ADC12MCTL8_         (0x0718u)  /* ADC12
                                Memory Control 8 */
    273    000000              DEFC(   ADC12MCTL8        , ADC12MCTL8_)
    274    000000              #define ADC12MCTL9_         (0x0719u)  /* ADC12
                                Memory Control 9 */
    275    000000              DEFC(   ADC12MCTL9        , ADC12MCTL9_)
    276    000000              #define ADC12MCTL10_        (0x071Au)  /* ADC12
                                Memory Control 10 */
    277    000000              DEFC(   ADC12MCTL10       , ADC12MCTL10_)
    278    000000              #define ADC12MCTL11_        (0x071Bu)  /* ADC12
                                Memory Control 11 */
    279    000000              DEFC(   ADC12MCTL11       , ADC12MCTL11_)
    280    000000              #define ADC12MCTL12_        (0x071Cu)  /* ADC12
                                Memory Control 12 */
    281    000000              DEFC(   ADC12MCTL12       , ADC12MCTL12_)
    282    000000              #define ADC12MCTL13_        (0x071Du)  /* ADC12
                                Memory Control 13 */
    283    000000              DEFC(   ADC12MCTL13       , ADC12MCTL13_)
    284    000000              #define ADC12MCTL14_        (0x071Eu)  /* ADC12
                                Memory Control 14 */
    285    000000              DEFC(   ADC12MCTL14       , ADC12MCTL14_)
    286    000000              #define ADC12MCTL15_        (0x071Fu)  /* ADC12
                                Memory Control 15 */
    287    000000              DEFC(   ADC12MCTL15       , ADC12MCTL15_)
    288    000000              #define ADC12MCTL_          ADC12MCTL /* ADC12
                                Memory Control */
    289    000000              #ifndef __IAR_SYSTEMS_ICC__
    290    000000              #define ADC12MCTL           ADC12MCTL0 /* ADC12
                                Memory Control (for assembler) */
    291    000000              #else
    292    000000              #define ADC12MCTL           ((char*) &ADC12MCTL0
                               ) /* ADC12 Memory Control (for C) */
    293    000000              #endif
    294    000000              
    295    000000              /* ADC12CTL0 Control Bits */
    296    000000              #define ADC12SC             (0x0001u)  /* ADC12
                                Start Conversion */
    297    000000              #define ADC12ENC            (0x0002u)  /* ADC12
                                Enable Conversion */
    298    000000              #define ADC12TOVIE          (0x0004u)  /* ADC12
                                Timer Overflow interrupt enable */
    299    000000              #define ADC12OVIE           (0x0008u)  /* ADC12
                                Overflow interrupt enable */
    300    000000              #define ADC12ON             (0x0010u)  /* ADC12
                                On/enable */
    301    000000              #define ADC12REFON          (0x0020u)  /* ADC12
                                Reference on */
    302    000000              #define ADC12REF2_5V        (0x0040u)  /* ADC12
                                Ref 0:1.5V / 1:2.5V */
    303    000000              #define ADC12MSC            (0x0080u)  /* ADC12
                                Multiple SampleConversion */
    304    000000              #define ADC12SHT00          (0x0100u)  /* ADC12
                                Sample Hold 0 Select Bit: 0 */
    305    000000              #define ADC12SHT01          (0x0200u)  /* ADC12
                                Sample Hold 0 Select Bit: 1 */
    306    000000              #define ADC12SHT02          (0x0400u)  /* ADC12
                                Sample Hold 0 Select Bit: 2 */
    307    000000              #define ADC12SHT03          (0x0800u)  /* ADC12
                                Sample Hold 0 Select Bit: 3 */
    308    000000              #define ADC12SHT10          (0x1000u)  /* ADC12
                                Sample Hold 1 Select Bit: 0 */
    309    000000              #define ADC12SHT11          (0x2000u)  /* ADC12
                                Sample Hold 1 Select Bit: 1 */
    310    000000              #define ADC12SHT12          (0x4000u)  /* ADC12
                                Sample Hold 1 Select Bit: 2 */
    311    000000              #define ADC12SHT13          (0x8000u)  /* ADC12
                                Sample Hold 1 Select Bit: 3 */
    312    000000              
    313    000000              /* ADC12CTL0 Control Bits */
    314    000000              #define ADC12SC_L           (0x0001u)  /* ADC12
                                Start Conversion */
    315    000000              #define ADC12ENC_L          (0x0002u)  /* ADC12
                                Enable Conversion */
    316    000000              #define ADC12TOVIE_L        (0x0004u)  /* ADC12
                                Timer Overflow interrupt enable */
    317    000000              #define ADC12OVIE_L         (0x0008u)  /* ADC12
                                Overflow interrupt enable */
    318    000000              #define ADC12ON_L           (0x0010u)  /* ADC12
                                On/enable */
    319    000000              #define ADC12REFON_L        (0x0020u)  /* ADC12
                                Reference on */
    320    000000              #define ADC12REF2_5V_L      (0x0040u)  /* ADC12
                                Ref 0:1.5V / 1:2.5V */
    321    000000              #define ADC12MSC_L          (0x0080u)  /* ADC12
                                Multiple SampleConversion */
    322    000000              
    323    000000              /* ADC12CTL0 Control Bits */
    324    000000              #define ADC12SHT00_H        (0x0001u)  /* ADC12
                                Sample Hold 0 Select Bit: 0 */
    325    000000              #define ADC12SHT01_H        (0x0002u)  /* ADC12
                                Sample Hold 0 Select Bit: 1 */
    326    000000              #define ADC12SHT02_H        (0x0004u)  /* ADC12
                                Sample Hold 0 Select Bit: 2 */
    327    000000              #define ADC12SHT03_H        (0x0008u)  /* ADC12
                                Sample Hold 0 Select Bit: 3 */
    328    000000              #define ADC12SHT10_H        (0x0010u)  /* ADC12
                                Sample Hold 1 Select Bit: 0 */
    329    000000              #define ADC12SHT11_H        (0x0020u)  /* ADC12
                                Sample Hold 1 Select Bit: 1 */
    330    000000              #define ADC12SHT12_H        (0x0040u)  /* ADC12
                                Sample Hold 1 Select Bit: 2 */
    331    000000              #define ADC12SHT13_H        (0x0080u)  /* ADC12
                                Sample Hold 1 Select Bit: 3 */
    332    000000              
    333    000000              #define ADC12SHT0_0         (0*0x100u)  /* ADC12
                                Sample Hold 0 Select Bit: 0 */
    334    000000              #define ADC12SHT0_1         (1*0x100u)  /* ADC12
                                Sample Hold 0 Select Bit: 1 */
    335    000000              #define ADC12SHT0_2         (2*0x100u)  /* ADC12
                                Sample Hold 0 Select Bit: 2 */
    336    000000              #define ADC12SHT0_3         (3*0x100u)  /* ADC12
                                Sample Hold 0 Select Bit: 3 */
    337    000000              #define ADC12SHT0_4         (4*0x100u)  /* ADC12
                                Sample Hold 0 Select Bit: 4 */
    338    000000              #define ADC12SHT0_5         (5*0x100u)  /* ADC12
                                Sample Hold 0 Select Bit: 5 */
    339    000000              #define ADC12SHT0_6         (6*0x100u)  /* ADC12
                                Sample Hold 0 Select Bit: 6 */
    340    000000              #define ADC12SHT0_7         (7*0x100u)  /* ADC12
                                Sample Hold 0 Select Bit: 7 */
    341    000000              #define ADC12SHT0_8         (8*0x100u)  /* ADC12
                                Sample Hold 0 Select Bit: 8 */
    342    000000              #define ADC12SHT0_9         (9*0x100u)  /* ADC12
                                Sample Hold 0 Select Bit: 9 */
    343    000000              #define ADC12SHT0_10        (10*0x100u) /* ADC12
                                Sample Hold 0 Select Bit: 10 */
    344    000000              #define ADC12SHT0_11        (11*0x100u) /* ADC12
                                Sample Hold 0 Select Bit: 11 */
    345    000000              #define ADC12SHT0_12        (12*0x100u) /* ADC12
                                Sample Hold 0 Select Bit: 12 */
    346    000000              #define ADC12SHT0_13        (13*0x100u) /* ADC12
                                Sample Hold 0 Select Bit: 13 */
    347    000000              #define ADC12SHT0_14        (14*0x100u) /* ADC12
                                Sample Hold 0 Select Bit: 14 */
    348    000000              #define ADC12SHT0_15        (15*0x100u) /* ADC12
                                Sample Hold 0 Select Bit: 15 */
    349    000000              
    350    000000              #define ADC12SHT1_0         (0*0x1000u)  /*
                                ADC12 Sample Hold 1 Select Bit: 0 */
    351    000000              #define ADC12SHT1_1         (1*0x1000u)  /*
                                ADC12 Sample Hold 1 Select Bit: 1 */
    352    000000              #define ADC12SHT1_2         (2*0x1000u)  /*
                                ADC12 Sample Hold 1 Select Bit: 2 */
    353    000000              #define ADC12SHT1_3         (3*0x1000u)  /*
                                ADC12 Sample Hold 1 Select Bit: 3 */
    354    000000              #define ADC12SHT1_4         (4*0x1000u)  /*
                                ADC12 Sample Hold 1 Select Bit: 4 */
    355    000000              #define ADC12SHT1_5         (5*0x1000u)  /*
                                ADC12 Sample Hold 1 Select Bit: 5 */
    356    000000              #define ADC12SHT1_6         (6*0x1000u)  /*
                                ADC12 Sample Hold 1 Select Bit: 6 */
    357    000000              #define ADC12SHT1_7         (7*0x1000u)  /*
                                ADC12 Sample Hold 1 Select Bit: 7 */
    358    000000              #define ADC12SHT1_8         (8*0x1000u)  /*
                                ADC12 Sample Hold 1 Select Bit: 8 */
    359    000000              #define ADC12SHT1_9         (9*0x1000u)  /*
                                ADC12 Sample Hold 1 Select Bit: 9 */
    360    000000              #define ADC12SHT1_10        (10*0x1000u) /*
                                ADC12 Sample Hold 1 Select Bit: 10 */
    361    000000              #define ADC12SHT1_11        (11*0x1000u) /*
                                ADC12 Sample Hold 1 Select Bit: 11 */
    362    000000              #define ADC12SHT1_12        (12*0x1000u) /*
                                ADC12 Sample Hold 1 Select Bit: 12 */
    363    000000              #define ADC12SHT1_13        (13*0x1000u) /*
                                ADC12 Sample Hold 1 Select Bit: 13 */
    364    000000              #define ADC12SHT1_14        (14*0x1000u) /*
                                ADC12 Sample Hold 1 Select Bit: 14 */
    365    000000              #define ADC12SHT1_15        (15*0x1000u) /*
                                ADC12 Sample Hold 1 Select Bit: 15 */
    366    000000              
    367    000000              /* ADC12CTL1 Control Bits */
    368    000000              #define ADC12BUSY           (0x0001u)    /*
                                ADC12 Busy */
    369    000000              #define ADC12CONSEQ0        (0x0002u)    /*
                                ADC12 Conversion Sequence Select Bit: 0
                                */
    370    000000              #define ADC12CONSEQ1        (0x0004u)    /*
                                ADC12 Conversion Sequence Select Bit: 1
                                */
    371    000000              #define ADC12SSEL0          (0x0008u)    /*
                                ADC12 Clock Source Select Bit: 0 */
    372    000000              #define ADC12SSEL1          (0x0010u)    /*
                                ADC12 Clock Source Select Bit: 1 */
    373    000000              #define ADC12DIV0           (0x0020u)    /*
                                ADC12 Clock Divider Select Bit: 0 */
    374    000000              #define ADC12DIV1           (0x0040u)    /*
                                ADC12 Clock Divider Select Bit: 1 */
    375    000000              #define ADC12DIV2           (0x0080u)    /*
                                ADC12 Clock Divider Select Bit: 2 */
    376    000000              #define ADC12ISSH           (0x0100u)    /*
                                ADC12 Invert Sample Hold Signal */
    377    000000              #define ADC12SHP            (0x0200u)    /*
                                ADC12 Sample/Hold Pulse Mode */
    378    000000              #define ADC12SHS0           (0x0400u)    /*
                                ADC12 Sample/Hold Source Bit: 0 */
    379    000000              #define ADC12SHS1           (0x0800u)    /*
                                ADC12 Sample/Hold Source Bit: 1 */
    380    000000              #define ADC12CSTARTADD0     (0x1000u)    /*
                                ADC12 Conversion Start Address Bit: 0
                                */
    381    000000              #define ADC12CSTARTADD1     (0x2000u)    /*
                                ADC12 Conversion Start Address Bit: 1
                                */
    382    000000              #define ADC12CSTARTADD2     (0x4000u)    /*
                                ADC12 Conversion Start Address Bit: 2
                                */
    383    000000              #define ADC12CSTARTADD3     (0x8000u)    /*
                                ADC12 Conversion Start Address Bit: 3
                                */
    384    000000              
    385    000000              /* ADC12CTL1 Control Bits */
    386    000000              #define ADC12BUSY_L         (0x0001u)    /*
                                ADC12 Busy */
    387    000000              #define ADC12CONSEQ0_L      (0x0002u)    /*
                                ADC12 Conversion Sequence Select Bit: 0
                                */
    388    000000              #define ADC12CONSEQ1_L      (0x0004u)    /*
                                ADC12 Conversion Sequence Select Bit: 1
                                */
    389    000000              #define ADC12SSEL0_L        (0x0008u)    /*
                                ADC12 Clock Source Select Bit: 0 */
    390    000000              #define ADC12SSEL1_L        (0x0010u)    /*
                                ADC12 Clock Source Select Bit: 1 */
    391    000000              #define ADC12DIV0_L         (0x0020u)    /*
                                ADC12 Clock Divider Select Bit: 0 */
    392    000000              #define ADC12DIV1_L         (0x0040u)    /*
                                ADC12 Clock Divider Select Bit: 1 */
    393    000000              #define ADC12DIV2_L         (0x0080u)    /*
                                ADC12 Clock Divider Select Bit: 2 */
    394    000000              
    395    000000              /* ADC12CTL1 Control Bits */
    396    000000              #define ADC12ISSH_H         (0x0001u)    /*
                                ADC12 Invert Sample Hold Signal */
    397    000000              #define ADC12SHP_H          (0x0002u)    /*
                                ADC12 Sample/Hold Pulse Mode */
    398    000000              #define ADC12SHS0_H         (0x0004u)    /*
                                ADC12 Sample/Hold Source Bit: 0 */
    399    000000              #define ADC12SHS1_H         (0x0008u)    /*
                                ADC12 Sample/Hold Source Bit: 1 */
    400    000000              #define ADC12CSTARTADD0_H   (0x0010u)    /*
                                ADC12 Conversion Start Address Bit: 0
                                */
    401    000000              #define ADC12CSTARTADD1_H   (0x0020u)    /*
                                ADC12 Conversion Start Address Bit: 1
                                */
    402    000000              #define ADC12CSTARTADD2_H   (0x0040u)    /*
                                ADC12 Conversion Start Address Bit: 2
                                */
    403    000000              #define ADC12CSTARTADD3_H   (0x0080u)    /*
                                ADC12 Conversion Start Address Bit: 3
                                */
    404    000000              
    405    000000              #define ADC12CONSEQ_0        (0*2u)      /*
                                ADC12 Conversion Sequence Select: 0 */
    406    000000              #define ADC12CONSEQ_1        (1*2u)      /*
                                ADC12 Conversion Sequence Select: 1 */
    407    000000              #define ADC12CONSEQ_2        (2*2u)      /*
                                ADC12 Conversion Sequence Select: 2 */
    408    000000              #define ADC12CONSEQ_3        (3*2u)      /*
                                ADC12 Conversion Sequence Select: 3 */
    409    000000              
    410    000000              #define ADC12SSEL_0          (0*8u)      /*
                                ADC12 Clock Source Select: 0 */
    411    000000              #define ADC12SSEL_1          (1*8u)      /*
                                ADC12 Clock Source Select: 1 */
    412    000000              #define ADC12SSEL_2          (2*8u)      /*
                                ADC12 Clock Source Select: 2 */
    413    000000              #define ADC12SSEL_3          (3*8u)      /*
                                ADC12 Clock Source Select: 3 */
    414    000000              
    415    000000              #define ADC12DIV_0           (0*0x20u)   /*
                                ADC12 Clock Divider Select: 0 */
    416    000000              #define ADC12DIV_1           (1*0x20u)   /*
                                ADC12 Clock Divider Select: 1 */
    417    000000              #define ADC12DIV_2           (2*0x20u)   /*
                                ADC12 Clock Divider Select: 2 */
    418    000000              #define ADC12DIV_3           (3*0x20u)   /*
                                ADC12 Clock Divider Select: 3 */
    419    000000              #define ADC12DIV_4           (4*0x20u)   /*
                                ADC12 Clock Divider Select: 4 */
    420    000000              #define ADC12DIV_5           (5*0x20u)   /*
                                ADC12 Clock Divider Select: 5 */
    421    000000              #define ADC12DIV_6           (6*0x20u)   /*
                                ADC12 Clock Divider Select: 6 */
    422    000000              #define ADC12DIV_7           (7*0x20u)   /*
                                ADC12 Clock Divider Select: 7 */
    423    000000              
    424    000000              #define ADC12SHS_0           (0*0x400u)  /*
                                ADC12 Sample/Hold Source: 0 */
    425    000000              #define ADC12SHS_1           (1*0x400u)  /*
                                ADC12 Sample/Hold Source: 1 */
    426    000000              #define ADC12SHS_2           (2*0x400u)  /*
                                ADC12 Sample/Hold Source: 2 */
    427    000000              #define ADC12SHS_3           (3*0x400u)  /*
                                ADC12 Sample/Hold Source: 3 */
    428    000000              
    429    000000              #define ADC12CSTARTADD_0     (0*0x1000u) /*
                                ADC12 Conversion Start Address: 0 */
    430    000000              #define ADC12CSTARTADD_1     (1*0x1000u) /*
                                ADC12 Conversion Start Address: 1 */
    431    000000              #define ADC12CSTARTADD_2     (2*0x1000u) /*
                                ADC12 Conversion Start Address: 2 */
    432    000000              #define ADC12CSTARTADD_3     (3*0x1000u) /*
                                ADC12 Conversion Start Address: 3 */
    433    000000              #define ADC12CSTARTADD_4     (4*0x1000u) /*
                                ADC12 Conversion Start Address: 4 */
    434    000000              #define ADC12CSTARTADD_5     (5*0x1000u) /*
                                ADC12 Conversion Start Address: 5 */
    435    000000              #define ADC12CSTARTADD_6     (6*0x1000u) /*
                                ADC12 Conversion Start Address: 6 */
    436    000000              #define ADC12CSTARTADD_7     (7*0x1000u) /*
                                ADC12 Conversion Start Address: 7 */
    437    000000              #define ADC12CSTARTADD_8     (8*0x1000u) /*
                                ADC12 Conversion Start Address: 8 */
    438    000000              #define ADC12CSTARTADD_9     (9*0x1000u) /*
                                ADC12 Conversion Start Address: 9 */
    439    000000              #define ADC12CSTARTADD_10    (10*0x1000u) /*
                                ADC12 Conversion Start Address: 10 */
    440    000000              #define ADC12CSTARTADD_11    (11*0x1000u) /*
                                ADC12 Conversion Start Address: 11 */
    441    000000              #define ADC12CSTARTADD_12    (12*0x1000u) /*
                                ADC12 Conversion Start Address: 12 */
    442    000000              #define ADC12CSTARTADD_13    (13*0x1000u) /*
                                ADC12 Conversion Start Address: 13 */
    443    000000              #define ADC12CSTARTADD_14    (14*0x1000u) /*
                                ADC12 Conversion Start Address: 14 */
    444    000000              #define ADC12CSTARTADD_15    (15*0x1000u) /*
                                ADC12 Conversion Start Address: 15 */
    445    000000              
    446    000000              /* ADC12CTL2 Control Bits */
    447    000000              #define ADC12REFBURST       (0x0001u)    /*
                                ADC12+ Reference Burst */
    448    000000              #define ADC12REFOUT         (0x0002u)    /*
                                ADC12+ Reference Out */
    449    000000              #define ADC12SR             (0x0004u)    /*
                                ADC12+ Sampling Rate */
    450    000000              #define ADC12DF             (0x0008u)    /*
                                ADC12+ Data Format */
    451    000000              #define ADC12RES0           (0x0010u)    /*
                                ADC12+ Resolution Bit: 0 */
    452    000000              #define ADC12RES1           (0x0020u)    /*
                                ADC12+ Resolution Bit: 1 */
    453    000000              #define ADC12TCOFF          (0x0080u)    /*
                                ADC12+ Temperature Sensor Off */
    454    000000              #define ADC12PDIV           (0x0100u)    /*
                                ADC12+ predivider 0:/1   1:/4 */
    455    000000              
    456    000000              /* ADC12CTL2 Control Bits */
    457    000000              #define ADC12REFBURST_L     (0x0001u)    /*
                                ADC12+ Reference Burst */
    458    000000              #define ADC12REFOUT_L       (0x0002u)    /*
                                ADC12+ Reference Out */
    459    000000              #define ADC12SR_L           (0x0004u)    /*
                                ADC12+ Sampling Rate */
    460    000000              #define ADC12DF_L           (0x0008u)    /*
                                ADC12+ Data Format */
    461    000000              #define ADC12RES0_L         (0x0010u)    /*
                                ADC12+ Resolution Bit: 0 */
    462    000000              #define ADC12RES1_L         (0x0020u)    /*
                                ADC12+ Resolution Bit: 1 */
    463    000000              #define ADC12TCOFF_L        (0x0080u)    /*
                                ADC12+ Temperature Sensor Off */
    464    000000              
    465    000000              /* ADC12CTL2 Control Bits */
    466    000000              #define ADC12PDIV_H         (0x0001u)    /*
                                ADC12+ predivider 0:/1   1:/4 */
    467    000000              
    468    000000              #define ADC12RES_0          (0x0000u)    /*
                                ADC12+ Resolution : 8 Bit */
    469    000000              #define ADC12RES_1          (0x0010u)    /*
                                ADC12+ Resolution : 10 Bit */
    470    000000              #define ADC12RES_2          (0x0020u)    /*
                                ADC12+ Resolution : 12 Bit */
    471    000000              #define ADC12RES_3          (0x0030u)    /*
                                ADC12+ Resolution : reserved */
    472    000000              
    473    000000              /* ADC12MCTLx Control Bits */
    474    000000              #define ADC12INCH0          (0x0001u)    /*
                                ADC12 Input Channel Select Bit 0 */
    475    000000              #define ADC12INCH1          (0x0002u)    /*
                                ADC12 Input Channel Select Bit 1 */
    476    000000              #define ADC12INCH2          (0x0004u)    /*
                                ADC12 Input Channel Select Bit 2 */
    477    000000              #define ADC12INCH3          (0x0008u)    /*
                                ADC12 Input Channel Select Bit 3 */
    478    000000              #define ADC12SREF0          (0x0010u)    /*
                                ADC12 Select Reference Bit 0 */
    479    000000              #define ADC12SREF1          (0x0020u)    /*
                                ADC12 Select Reference Bit 1 */
    480    000000              #define ADC12SREF2          (0x0040u)    /*
                                ADC12 Select Reference Bit 2 */
    481    000000              #define ADC12EOS            (0x0080u)    /*
                                ADC12 End of Sequence */
    482    000000              
    483    000000              #define ADC12INCH_0         (0x0000u)    /*
                                ADC12 Input Channel 0 */
    484    000000              #define ADC12INCH_1         (0x0001u)    /*
                                ADC12 Input Channel 1 */
    485    000000              #define ADC12INCH_2         (0x0002u)    /*
                                ADC12 Input Channel 2 */
    486    000000              #define ADC12INCH_3         (0x0003u)    /*
                                ADC12 Input Channel 3 */
    487    000000              #define ADC12INCH_4         (0x0004u)    /*
                                ADC12 Input Channel 4 */
    488    000000              #define ADC12INCH_5         (0x0005u)    /*
                                ADC12 Input Channel 5 */
    489    000000              #define ADC12INCH_6         (0x0006u)    /*
                                ADC12 Input Channel 6 */
    490    000000              #define ADC12INCH_7         (0x0007u)    /*
                                ADC12 Input Channel 7 */
    491    000000              #define ADC12INCH_8         (0x0008u)    /*
                                ADC12 Input Channel 8 */
    492    000000              #define ADC12INCH_9         (0x0009u)    /*
                                ADC12 Input Channel 9 */
    493    000000              #define ADC12INCH_10        (0x000Au)    /*
                                ADC12 Input Channel 10 */
    494    000000              #define ADC12INCH_11        (0x000Bu)    /*
                                ADC12 Input Channel 11 */
    495    000000              #define ADC12INCH_12        (0x000Cu)    /*
                                ADC12 Input Channel 12 */
    496    000000              #define ADC12INCH_13        (0x000Du)    /*
                                ADC12 Input Channel 13 */
    497    000000              #define ADC12INCH_14        (0x000Eu)    /*
                                ADC12 Input Channel 14 */
    498    000000              #define ADC12INCH_15        (0x000Fu)    /*
                                ADC12 Input Channel 15 */
    499    000000              
    500    000000              #define ADC12SREF_0         (0*0x10u)    /*
                                ADC12 Select Reference 0 */
    501    000000              #define ADC12SREF_1         (1*0x10u)    /*
                                ADC12 Select Reference 1 */
    502    000000              #define ADC12SREF_2         (2*0x10u)    /*
                                ADC12 Select Reference 2 */
    503    000000              #define ADC12SREF_3         (3*0x10u)    /*
                                ADC12 Select Reference 3 */
    504    000000              #define ADC12SREF_4         (4*0x10u)    /*
                                ADC12 Select Reference 4 */
    505    000000              #define ADC12SREF_5         (5*0x10u)    /*
                                ADC12 Select Reference 5 */
    506    000000              #define ADC12SREF_6         (6*0x10u)    /*
                                ADC12 Select Reference 6 */
    507    000000              #define ADC12SREF_7         (7*0x10u)    /*
                                ADC12 Select Reference 7 */
    508    000000              
    509    000000              #define ADC12IE0           (0x0001u)  /* ADC12
                                Memory 0      Interrupt Enable */
    510    000000              #define ADC12IE1           (0x0002u)  /* ADC12
                                Memory 1      Interrupt Enable */
    511    000000              #define ADC12IE2           (0x0004u)  /* ADC12
                                Memory 2      Interrupt Enable */
    512    000000              #define ADC12IE3           (0x0008u)  /* ADC12
                                Memory 3      Interrupt Enable */
    513    000000              #define ADC12IE4           (0x0010u)  /* ADC12
                                Memory 4      Interrupt Enable */
    514    000000              #define ADC12IE5           (0x0020u)  /* ADC12
                                Memory 5      Interrupt Enable */
    515    000000              #define ADC12IE6           (0x0040u)  /* ADC12
                                Memory 6      Interrupt Enable */
    516    000000              #define ADC12IE7           (0x0080u)  /* ADC12
                                Memory 7      Interrupt Enable */
    517    000000              #define ADC12IE8           (0x0100u)  /* ADC12
                                Memory 8      Interrupt Enable */
    518    000000              #define ADC12IE9           (0x0200u)  /* ADC12
                                Memory 9      Interrupt Enable */
    519    000000              #define ADC12IE10           (0x0400u)  /* ADC12
                                Memory 10      Interrupt Enable */
    520    000000              #define ADC12IE11           (0x0800u)  /* ADC12
                                Memory 11      Interrupt Enable */
    521    000000              #define ADC12IE12           (0x1000u)  /* ADC12
                                Memory 12      Interrupt Enable */
    522    000000              #define ADC12IE13           (0x2000u)  /* ADC12
                                Memory 13      Interrupt Enable */
    523    000000              #define ADC12IE14           (0x4000u)  /* ADC12
                                Memory 14      Interrupt Enable */
    524    000000              #define ADC12IE15           (0x8000u)  /* ADC12
                                Memory 15      Interrupt Enable */
    525    000000              
    526    000000              #define ADC12IE0_L          (0x0001u)  /* ADC12
                                Memory 0      Interrupt Enable */
    527    000000              #define ADC12IE1_L          (0x0002u)  /* ADC12
                                Memory 1      Interrupt Enable */
    528    000000              #define ADC12IE2_L          (0x0004u)  /* ADC12
                                Memory 2      Interrupt Enable */
    529    000000              #define ADC12IE3_L          (0x0008u)  /* ADC12
                                Memory 3      Interrupt Enable */
    530    000000              #define ADC12IE4_L          (0x0010u)  /* ADC12
                                Memory 4      Interrupt Enable */
    531    000000              #define ADC12IE5_L          (0x0020u)  /* ADC12
                                Memory 5      Interrupt Enable */
    532    000000              #define ADC12IE6_L          (0x0040u)  /* ADC12
                                Memory 6      Interrupt Enable */
    533    000000              #define ADC12IE7_L          (0x0080u)  /* ADC12
                                Memory 7      Interrupt Enable */
    534    000000              
    535    000000              #define ADC12IE8_H          (0x0001u)  /* ADC12
                                Memory 8      Interrupt Enable */
    536    000000              #define ADC12IE9_H          (0x0002u)  /* ADC12
                                Memory 9      Interrupt Enable */
    537    000000              #define ADC12IE10_H         (0x0004u)  /* ADC12
                                Memory 10      Interrupt Enable */
    538    000000              #define ADC12IE11_H         (0x0008u)  /* ADC12
                                Memory 11      Interrupt Enable */
    539    000000              #define ADC12IE12_H         (0x0010u)  /* ADC12
                                Memory 12      Interrupt Enable */
    540    000000              #define ADC12IE13_H         (0x0020u)  /* ADC12
                                Memory 13      Interrupt Enable */
    541    000000              #define ADC12IE14_H         (0x0040u)  /* ADC12
                                Memory 14      Interrupt Enable */
    542    000000              #define ADC12IE15_H         (0x0080u)  /* ADC12
                                Memory 15      Interrupt Enable */
    543    000000              
    544    000000              #define ADC12IFG0          (0x0001u)  /* ADC12
                                Memory 0      Interrupt Flag */
    545    000000              #define ADC12IFG1          (0x0002u)  /* ADC12
                                Memory 1      Interrupt Flag */
    546    000000              #define ADC12IFG2          (0x0004u)  /* ADC12
                                Memory 2      Interrupt Flag */
    547    000000              #define ADC12IFG3          (0x0008u)  /* ADC12
                                Memory 3      Interrupt Flag */
    548    000000              #define ADC12IFG4          (0x0010u)  /* ADC12
                                Memory 4      Interrupt Flag */
    549    000000              #define ADC12IFG5          (0x0020u)  /* ADC12
                                Memory 5      Interrupt Flag */
    550    000000              #define ADC12IFG6          (0x0040u)  /* ADC12
                                Memory 6      Interrupt Flag */
    551    000000              #define ADC12IFG7          (0x0080u)  /* ADC12
                                Memory 7      Interrupt Flag */
    552    000000              #define ADC12IFG8          (0x0100u)  /* ADC12
                                Memory 8      Interrupt Flag */
    553    000000              #define ADC12IFG9          (0x0200u)  /* ADC12
                                Memory 9      Interrupt Flag */
    554    000000              #define ADC12IFG10          (0x0400u)  /* ADC12
                                Memory 10      Interrupt Flag */
    555    000000              #define ADC12IFG11          (0x0800u)  /* ADC12
                                Memory 11      Interrupt Flag */
    556    000000              #define ADC12IFG12          (0x1000u)  /* ADC12
                                Memory 12      Interrupt Flag */
    557    000000              #define ADC12IFG13          (0x2000u)  /* ADC12
                                Memory 13      Interrupt Flag */
    558    000000              #define ADC12IFG14          (0x4000u)  /* ADC12
                                Memory 14      Interrupt Flag */
    559    000000              #define ADC12IFG15          (0x8000u)  /* ADC12
                                Memory 15      Interrupt Flag */
    560    000000              
    561    000000              #define ADC12IFG0_L         (0x0001u)  /* ADC12
                                Memory 0      Interrupt Flag */
    562    000000              #define ADC12IFG1_L         (0x0002u)  /* ADC12
                                Memory 1      Interrupt Flag */
    563    000000              #define ADC12IFG2_L         (0x0004u)  /* ADC12
                                Memory 2      Interrupt Flag */
    564    000000              #define ADC12IFG3_L         (0x0008u)  /* ADC12
                                Memory 3      Interrupt Flag */
    565    000000              #define ADC12IFG4_L         (0x0010u)  /* ADC12
                                Memory 4      Interrupt Flag */
    566    000000              #define ADC12IFG5_L         (0x0020u)  /* ADC12
                                Memory 5      Interrupt Flag */
    567    000000              #define ADC12IFG6_L         (0x0040u)  /* ADC12
                                Memory 6      Interrupt Flag */
    568    000000              #define ADC12IFG7_L         (0x0080u)  /* ADC12
                                Memory 7      Interrupt Flag */
    569    000000              
    570    000000              #define ADC12IFG8_H         (0x0001u)  /* ADC12
                                Memory 8      Interrupt Flag */
    571    000000              #define ADC12IFG9_H         (0x0002u)  /* ADC12
                                Memory 9      Interrupt Flag */
    572    000000              #define ADC12IFG10_H        (0x0004u)  /* ADC12
                                Memory 10      Interrupt Flag */
    573    000000              #define ADC12IFG11_H        (0x0008u)  /* ADC12
                                Memory 11      Interrupt Flag */
    574    000000              #define ADC12IFG12_H        (0x0010u)  /* ADC12
                                Memory 12      Interrupt Flag */
    575    000000              #define ADC12IFG13_H        (0x0020u)  /* ADC12
                                Memory 13      Interrupt Flag */
    576    000000              #define ADC12IFG14_H        (0x0040u)  /* ADC12
                                Memory 14      Interrupt Flag */
    577    000000              #define ADC12IFG15_H        (0x0080u)  /* ADC12
                                Memory 15      Interrupt Flag */
    578    000000              
    579    000000              /* ADC12IV Definitions */
    580    000000              #define ADC12IV_NONE        (0x0000u)    /* No
                                Interrupt pending */
    581    000000              #define ADC12IV_ADC12OVIFG  (0x0002u)    /*
                                ADC12OVIFG */
    582    000000              #define ADC12IV_ADC12TOVIFG (0x0004u)    /*
                                ADC12TOVIFG */
    583    000000              #define ADC12IV_ADC12IFG0   (0x0006u)    /*
                                ADC12IFG0 */
    584    000000              #define ADC12IV_ADC12IFG1   (0x0008u)    /*
                                ADC12IFG1 */
    585    000000              #define ADC12IV_ADC12IFG2   (0x000Au)    /*
                                ADC12IFG2 */
    586    000000              #define ADC12IV_ADC12IFG3   (0x000Cu)    /*
                                ADC12IFG3 */
    587    000000              #define ADC12IV_ADC12IFG4   (0x000Eu)    /*
                                ADC12IFG4 */
    588    000000              #define ADC12IV_ADC12IFG5   (0x0010u)    /*
                                ADC12IFG5 */
    589    000000              #define ADC12IV_ADC12IFG6   (0x0012u)    /*
                                ADC12IFG6 */
    590    000000              #define ADC12IV_ADC12IFG7   (0x0014u)    /*
                                ADC12IFG7 */
    591    000000              #define ADC12IV_ADC12IFG8   (0x0016u)    /*
                                ADC12IFG8 */
    592    000000              #define ADC12IV_ADC12IFG9   (0x0018u)    /*
                                ADC12IFG9 */
    593    000000              #define ADC12IV_ADC12IFG10  (0x001Au)    /*
                                ADC12IFG10 */
    594    000000              #define ADC12IV_ADC12IFG11  (0x001Cu)    /*
                                ADC12IFG11 */
    595    000000              #define ADC12IV_ADC12IFG12  (0x001Eu)    /*
                                ADC12IFG12 */
    596    000000              #define ADC12IV_ADC12IFG13  (0x0020u)    /*
                                ADC12IFG13 */
    597    000000              #define ADC12IV_ADC12IFG14  (0x0022u)    /*
                                ADC12IFG14 */
    598    000000              #define ADC12IV_ADC12IFG15  (0x0024u)    /*
                                ADC12IFG15 */
    599    000000              
    600    000000              /***********************************************
                               *************
    601    000000              * Comparator B
    602    000000              ************************************************
                               ************/
    603    000000              #define __MSP430_HAS_COMPB__          /*
                                Definition to show that Module is available
                                */
    604    000000              #define __MSP430_BASEADDRESS_COMPB__ 0x08C0
    605    000000              
    606    000000              #define  CBCTL0_             (0x08C0u)  /*
                                Comparator B Control Register 0 */
    607    000000              DEFCW(   CBCTL0            , CBCTL0_)
    607.1  000000              sfrb CBCTL0_L = (0x08C0u);
    607.2  000000              sfrb CBCTL0_H = (0x08C0u)+1;
    607.3  000000              sfrw CBCTL0   = (0x08C0u);
    607.4  000000                    endm
    608    000000              #define  CBCTL1_             (0x08C2u)  /*
                                Comparator B Control Register 1 */
    609    000000              DEFCW(   CBCTL1            , CBCTL1_)
    609.1  000000              sfrb CBCTL1_L = (0x08C2u);
    609.2  000000              sfrb CBCTL1_H = (0x08C2u)+1;
    609.3  000000              sfrw CBCTL1   = (0x08C2u);
    609.4  000000                    endm
    610    000000              #define  CBCTL2_             (0x08C4u)  /*
                                Comparator B Control Register 2 */
    611    000000              DEFCW(   CBCTL2            , CBCTL2_)
    611.1  000000              sfrb CBCTL2_L = (0x08C4u);
    611.2  000000              sfrb CBCTL2_H = (0x08C4u)+1;
    611.3  000000              sfrw CBCTL2   = (0x08C4u);
    611.4  000000                    endm
    612    000000              #define  CBCTL3_             (0x08C6u)  /*
                                Comparator B Control Register 3 */
    613    000000              DEFCW(   CBCTL3            , CBCTL3_)
    613.1  000000              sfrb CBCTL3_L = (0x08C6u);
    613.2  000000              sfrb CBCTL3_H = (0x08C6u)+1;
    613.3  000000              sfrw CBCTL3   = (0x08C6u);
    613.4  000000                    endm
    614    000000              #define  CBINT_              (0x08CCu)  /*
                                Comparator B Interrupt Register */
    615    000000              DEFCW(   CBINT             , CBINT_)
    615.1  000000              sfrb CBINT_L = (0x08CCu);
    615.2  000000              sfrb CBINT_H = (0x08CCu)+1;
    615.3  000000              sfrw CBINT   = (0x08CCu);
    615.4  000000                    endm
    616    000000              #define  CBIV_               (0x08CEu)  /*
                                Comparator B Interrupt Vector Word */
    617    000000              DEFW(    CBIV              , CBIV_)
    618    000000              
    619    000000              /* CBCTL0 Control Bits */
    620    000000              #define CBIPSEL0            (0x0001u)  /* Comp.
                                B Pos. Channel Input Select 0 */
    621    000000              #define CBIPSEL1            (0x0002u)  /* Comp.
                                B Pos. Channel Input Select 1 */
    622    000000              #define CBIPSEL2            (0x0004u)  /* Comp.
                                B Pos. Channel Input Select 2 */
    623    000000              #define CBIPSEL3            (0x0008u)  /* Comp.
                                B Pos. Channel Input Select 3 */
    624    000000              //#define RESERVED            (0x0010u)  /*
                                Comp. B */
    625    000000              //#define RESERVED            (0x0020u)  /*
                                Comp. B */
    626    000000              //#define RESERVED            (0x0040u)  /*
                                Comp. B */
    627    000000              #define CBIPEN              (0x0080u)  /* Comp.
                                B Pos. Channel Input Enable */
    628    000000              #define CBIMSEL0            (0x0100u)  /* Comp.
                                B Neg. Channel Input Select 0 */
    629    000000              #define CBIMSEL1            (0x0200u)  /* Comp.
                                B Neg. Channel Input Select 1 */
    630    000000              #define CBIMSEL2            (0x0400u)  /* Comp.
                                B Neg. Channel Input Select 2 */
    631    000000              #define CBIMSEL3            (0x0800u)  /* Comp.
                                B Neg. Channel Input Select 3 */
    632    000000              //#define RESERVED            (0x1000u)  /*
                                Comp. B */
    633    000000              //#define RESERVED            (0x2000u)  /*
                                Comp. B */
    634    000000              //#define RESERVED            (0x4000u)  /*
                                Comp. B */
    635    000000              #define CBIMEN              (0x8000u)  /* Comp.
                                B Neg. Channel Input Enable */
    636    000000              
    637    000000              /* CBCTL0 Control Bits */
    638    000000              #define CBIPSEL0_L          (0x0001u)  /* Comp.
                                B Pos. Channel Input Select 0 */
    639    000000              #define CBIPSEL1_L          (0x0002u)  /* Comp.
                                B Pos. Channel Input Select 1 */
    640    000000              #define CBIPSEL2_L          (0x0004u)  /* Comp.
                                B Pos. Channel Input Select 2 */
    641    000000              #define CBIPSEL3_L          (0x0008u)  /* Comp.
                                B Pos. Channel Input Select 3 */
    642    000000              //#define RESERVED            (0x0010u)  /*
                                Comp. B */
    643    000000              //#define RESERVED            (0x0020u)  /*
                                Comp. B */
    644    000000              //#define RESERVED            (0x0040u)  /*
                                Comp. B */
    645    000000              #define CBIPEN_L            (0x0080u)  /* Comp.
                                B Pos. Channel Input Enable */
    646    000000              //#define RESERVED            (0x1000u)  /*
                                Comp. B */
    647    000000              //#define RESERVED            (0x2000u)  /*
                                Comp. B */
    648    000000              //#define RESERVED            (0x4000u)  /*
                                Comp. B */
    649    000000              
    650    000000              /* CBCTL0 Control Bits */
    651    000000              //#define RESERVED            (0x0010u)  /*
                                Comp. B */
    652    000000              //#define RESERVED            (0x0020u)  /*
                                Comp. B */
    653    000000              //#define RESERVED            (0x0040u)  /*
                                Comp. B */
    654    000000              #define CBIMSEL0_H          (0x0001u)  /* Comp.
                                B Neg. Channel Input Select 0 */
    655    000000              #define CBIMSEL1_H          (0x0002u)  /* Comp.
                                B Neg. Channel Input Select 1 */
    656    000000              #define CBIMSEL2_H          (0x0004u)  /* Comp.
                                B Neg. Channel Input Select 2 */
    657    000000              #define CBIMSEL3_H          (0x0008u)  /* Comp.
                                B Neg. Channel Input Select 3 */
    658    000000              //#define RESERVED            (0x1000u)  /*
                                Comp. B */
    659    000000              //#define RESERVED            (0x2000u)  /*
                                Comp. B */
    660    000000              //#define RESERVED            (0x4000u)  /*
                                Comp. B */
    661    000000              #define CBIMEN_H            (0x0080u)  /* Comp.
                                B Neg. Channel Input Enable */
    662    000000              
    663    000000              #define CBIPSEL_0           (0x0000u)  /* Comp.
                                B V+ terminal Input Select: Channel 0
                                */
    664    000000              #define CBIPSEL_1           (0x0001u)  /* Comp.
                                B V+ terminal Input Select: Channel 1
                                */
    665    000000              #define CBIPSEL_2           (0x0002u)  /* Comp.
                                B V+ terminal Input Select: Channel 2
                                */
    666    000000              #define CBIPSEL_3           (0x0003u)  /* Comp.
                                B V+ terminal Input Select: Channel 3
                                */
    667    000000              #define CBIPSEL_4           (0x0004u)  /* Comp.
                                B V+ terminal Input Select: Channel 4
                                */
    668    000000              #define CBIPSEL_5           (0x0005u)  /* Comp.
                                B V+ terminal Input Select: Channel 5
                                */
    669    000000              #define CBIPSEL_6           (0x0006u)  /* Comp.
                                B V+ terminal Input Select: Channel 6
                                */
    670    000000              #define CBIPSEL_7           (0x0007u)  /* Comp.
                                B V+ terminal Input Select: Channel 7
                                */
    671    000000              #define CBIPSEL_8           (0x0008u)  /* Comp.
                                B V+ terminal Input Select: Channel 8
                                */
    672    000000              #define CBIPSEL_9           (0x0009u)  /* Comp.
                                B V+ terminal Input Select: Channel 9
                                */
    673    000000              #define CBIPSEL_10          (0x000Au)  /* Comp.
                                B V+ terminal Input Select: Channel 10
                                */
    674    000000              #define CBIPSEL_11          (0x000Bu)  /* Comp.
                                B V+ terminal Input Select: Channel 11
                                */
    675    000000              #define CBIPSEL_12          (0x000Cu)  /* Comp.
                                B V+ terminal Input Select: Channel 12
                                */
    676    000000              #define CBIPSEL_13          (0x000Du)  /* Comp.
                                B V+ terminal Input Select: Channel 13
                                */
    677    000000              #define CBIPSEL_14          (0x000Eu)  /* Comp.
                                B V+ terminal Input Select: Channel 14
                                */
    678    000000              #define CBIPSEL_15          (0x000Fu)  /* Comp.
                                B V+ terminal Input Select: Channel 15
                                */
    679    000000              
    680    000000              #define CBIMSEL_0           (0x0000u)  /* Comp.
                                B V- Terminal Input Select: Channel 0
                                */
    681    000000              #define CBIMSEL_1           (0x0100u)  /* Comp.
                                B V- Terminal Input Select: Channel 1
                                */
    682    000000              #define CBIMSEL_2           (0x0200u)  /* Comp.
                                B V- Terminal Input Select: Channel 2
                                */
    683    000000              #define CBIMSEL_3           (0x0300u)  /* Comp.
                                B V- Terminal Input Select: Channel 3
                                */
    684    000000              #define CBIMSEL_4           (0x0400u)  /* Comp.
                                B V- Terminal Input Select: Channel 4
                                */
    685    000000              #define CBIMSEL_5           (0x0500u)  /* Comp.
                                B V- Terminal Input Select: Channel 5
                                */
    686    000000              #define CBIMSEL_6           (0x0600u)  /* Comp.
                                B V- Terminal Input Select: Channel 6
                                */
    687    000000              #define CBIMSEL_7           (0x0700u)  /* Comp.
                                B V- Terminal Input Select: Channel 7
                                */
    688    000000              #define CBIMSEL_8           (0x0800u)  /* Comp.
                                B V- terminal Input Select: Channel 8
                                */
    689    000000              #define CBIMSEL_9           (0x0900u)  /* Comp.
                                B V- terminal Input Select: Channel 9
                                */
    690    000000              #define CBIMSEL_10          (0x0A00u)  /* Comp.
                                B V- terminal Input Select: Channel 10
                                */
    691    000000              #define CBIMSEL_11          (0x0B00u)  /* Comp.
                                B V- terminal Input Select: Channel 11
                                */
    692    000000              #define CBIMSEL_12          (0x0C00u)  /* Comp.
                                B V- terminal Input Select: Channel 12
                                */
    693    000000              #define CBIMSEL_13          (0x0D00u)  /* Comp.
                                B V- terminal Input Select: Channel 13
                                */
    694    000000              #define CBIMSEL_14          (0x0E00u)  /* Comp.
                                B V- terminal Input Select: Channel 14
                                */
    695    000000              #define CBIMSEL_15          (0x0F00u)  /* Comp.
                                B V- terminal Input Select: Channel 15
                                */
    696    000000              
    697    000000              /* CBCTL1 Control Bits */
    698    000000              #define CBOUT               (0x0001u)  /* Comp.
                                B Output */
    699    000000              #define CBOUTPOL            (0x0002u)  /* Comp.
                                B Output Polarity */
    700    000000              #define CBF                 (0x0004u)  /* Comp.
                                B Enable Output Filter */
    701    000000              #define CBIES               (0x0008u)  /* Comp.
                                B Interrupt Edge Select */
    702    000000              #define CBSHORT             (0x0010u)  /* Comp.
                                B Input Short */
    703    000000              #define CBEX                (0x0020u)  /* Comp.
                                B Exchange Inputs */
    704    000000              #define CBFDLY0             (0x0040u)  /* Comp.
                                B Filter delay Bit 0 */
    705    000000              #define CBFDLY1             (0x0080u)  /* Comp.
                                B Filter delay Bit 1 */
    706    000000              #define CBPWRMD0            (0x0100u)  /* Comp.
                                B Power Mode Bit 0 */
    707    000000              #define CBPWRMD1            (0x0200u)  /* Comp.
                                B Power Mode Bit 1 */
    708    000000              #define CBON                (0x0400u)  /* Comp.
                                B enable */
    709    000000              #define CBMRVL              (0x0800u)  /* Comp.
                                B CBMRV Level */
    710    000000              #define CBMRVS              (0x1000u)  /* Comp.
                                B Output selects between VREF0 or VREF1*/
    711    000000              //#define RESERVED            (0x2000u)  /*
                                Comp. B */
    712    000000              //#define RESERVED            (0x4000u)  /*
                                Comp. B */
    713    000000              //#define RESERVED            (0x8000u)  /*
                                Comp. B */
    714    000000              
    715    000000              /* CBCTL1 Control Bits */
    716    000000              #define CBOUT_L             (0x0001u)  /* Comp.
                                B Output */
    717    000000              #define CBOUTPOL_L          (0x0002u)  /* Comp.
                                B Output Polarity */
    718    000000              #define CBF_L               (0x0004u)  /* Comp.
                                B Enable Output Filter */
    719    000000              #define CBIES_L             (0x0008u)  /* Comp.
                                B Interrupt Edge Select */
    720    000000              #define CBSHORT_L           (0x0010u)  /* Comp.
                                B Input Short */
    721    000000              #define CBEX_L              (0x0020u)  /* Comp.
                                B Exchange Inputs */
    722    000000              #define CBFDLY0_L           (0x0040u)  /* Comp.
                                B Filter delay Bit 0 */
    723    000000              #define CBFDLY1_L           (0x0080u)  /* Comp.
                                B Filter delay Bit 1 */
    724    000000              //#define RESERVED            (0x2000u)  /*
                                Comp. B */
    725    000000              //#define RESERVED            (0x4000u)  /*
                                Comp. B */
    726    000000              //#define RESERVED            (0x8000u)  /*
                                Comp. B */
    727    000000              
    728    000000              /* CBCTL1 Control Bits */
    729    000000              #define CBPWRMD0_H          (0x0001u)  /* Comp.
                                B Power Mode Bit 0 */
    730    000000              #define CBPWRMD1_H          (0x0002u)  /* Comp.
                                B Power Mode Bit 1 */
    731    000000              #define CBON_H              (0x0004u)  /* Comp.
                                B enable */
    732    000000              #define CBMRVL_H            (0x0008u)  /* Comp.
                                B CBMRV Level */
    733    000000              #define CBMRVS_H            (0x0010u)  /* Comp.
                                B Output selects between VREF0 or VREF1*/
    734    000000              //#define RESERVED            (0x2000u)  /*
                                Comp. B */
    735    000000              //#define RESERVED            (0x4000u)  /*
                                Comp. B */
    736    000000              //#define RESERVED            (0x8000u)  /*
                                Comp. B */
    737    000000              
    738    000000              #define CBFDLY_0           (0x0000u)  /* Comp. B
                                Filter delay 0 : 450ns */
    739    000000              #define CBFDLY_1           (0x0040u)  /* Comp. B
                                Filter delay 1 : 900ns */
    740    000000              #define CBFDLY_2           (0x0080u)  /* Comp. B
                                Filter delay 2 : 1800ns */
    741    000000              #define CBFDLY_3           (0x00C0u)  /* Comp. B
                                Filter delay 3 : 3600ns */
    742    000000              
    743    000000              #define CBPWRMD_0           (0x0000u)  /* Comp.
                                B Power Mode 0 : High speed */
    744    000000              #define CBPWRMD_1           (0x0100u)  /* Comp.
                                B Power Mode 1 : Normal */
    745    000000              #define CBPWRMD_2           (0x0200u)  /* Comp.
                                B Power Mode 2 : Ultra-Low*/
    746    000000              #define CBPWRMD_3           (0x0300u)  /* Comp.
                                B Power Mode 3 : Reserved */
    747    000000              
    748    000000              /* CBCTL2 Control Bits */
    749    000000              #define CBREF00             (0x0001u)  /* Comp.
                                B Reference 0 Resistor Select Bit : 0
                                */
    750    000000              #define CBREF01             (0x0002u)  /* Comp.
                                B Reference 0 Resistor Select Bit : 1
                                */
    751    000000              #define CBREF02             (0x0004u)  /* Comp.
                                B Reference 0 Resistor Select Bit : 2
                                */
    752    000000              #define CBREF03             (0x0008u)  /* Comp.
                                B Reference 0 Resistor Select Bit : 3
                                */
    753    000000              #define CBREF04             (0x0010u)  /* Comp.
                                B Reference 0 Resistor Select Bit : 4
                                */
    754    000000              #define CBRSEL              (0x0020u)  /* Comp.
                                B Reference select */
    755    000000              #define CBRS0               (0x0040u)  /* Comp.
                                B Reference Source Bit : 0 */
    756    000000              #define CBRS1               (0x0080u)  /* Comp.
                                B Reference Source Bit : 1 */
    757    000000              #define CBREF10             (0x0100u)  /* Comp.
                                B Reference 1 Resistor Select Bit : 0
                                */
    758    000000              #define CBREF11             (0x0200u)  /* Comp.
                                B Reference 1 Resistor Select Bit : 1
                                */
    759    000000              #define CBREF12             (0x0400u)  /* Comp.
                                B Reference 1 Resistor Select Bit : 2
                                */
    760    000000              #define CBREF13             (0x0800u)  /* Comp.
                                B Reference 1 Resistor Select Bit : 3
                                */
    761    000000              #define CBREF14             (0x1000u)  /* Comp.
                                B Reference 1 Resistor Select Bit : 4
                                */
    762    000000              #define CBREFL0             (0x2000u)  /* Comp.
                                B Reference voltage level Bit : 0 */
    763    000000              #define CBREFL1             (0x4000u)  /* Comp.
                                B Reference voltage level Bit : 1 */
    764    000000              #define CBREFACC            (0x8000u)  /* Comp.
                                B Reference Accuracy */
    765    000000              
    766    000000              /* CBCTL2 Control Bits */
    767    000000              #define CBREF00_L           (0x0001u)  /* Comp.
                                B Reference 0 Resistor Select Bit : 0
                                */
    768    000000              #define CBREF01_L           (0x0002u)  /* Comp.
                                B Reference 0 Resistor Select Bit : 1
                                */
    769    000000              #define CBREF02_L           (0x0004u)  /* Comp.
                                B Reference 0 Resistor Select Bit : 2
                                */
    770    000000              #define CBREF03_L           (0x0008u)  /* Comp.
                                B Reference 0 Resistor Select Bit : 3
                                */
    771    000000              #define CBREF04_L           (0x0010u)  /* Comp.
                                B Reference 0 Resistor Select Bit : 4
                                */
    772    000000              #define CBRSEL_L            (0x0020u)  /* Comp.
                                B Reference select */
    773    000000              #define CBRS0_L             (0x0040u)  /* Comp.
                                B Reference Source Bit : 0 */
    774    000000              #define CBRS1_L             (0x0080u)  /* Comp.
                                B Reference Source Bit : 1 */
    775    000000              
    776    000000              /* CBCTL2 Control Bits */
    777    000000              #define CBREF10_H           (0x0001u)  /* Comp.
                                B Reference 1 Resistor Select Bit : 0
                                */
    778    000000              #define CBREF11_H           (0x0002u)  /* Comp.
                                B Reference 1 Resistor Select Bit : 1
                                */
    779    000000              #define CBREF12_H           (0x0004u)  /* Comp.
                                B Reference 1 Resistor Select Bit : 2
                                */
    780    000000              #define CBREF13_H           (0x0008u)  /* Comp.
                                B Reference 1 Resistor Select Bit : 3
                                */
    781    000000              #define CBREF14_H           (0x0010u)  /* Comp.
                                B Reference 1 Resistor Select Bit : 4
                                */
    782    000000              #define CBREFL0_H           (0x0020u)  /* Comp.
                                B Reference voltage level Bit : 0 */
    783    000000              #define CBREFL1_H           (0x0040u)  /* Comp.
                                B Reference voltage level Bit : 1 */
    784    000000              #define CBREFACC_H          (0x0080u)  /* Comp.
                                B Reference Accuracy */
    785    000000              
    786    000000              #define CBREF0_0            (0x0000u)  /* Comp.
                                B Int. Ref.0 Select 0 : 1/32 */
    787    000000              #define CBREF0_1            (0x0001u)  /* Comp.
                                B Int. Ref.0 Select 1 : 2/32 */
    788    000000              #define CBREF0_2            (0x0002u)  /* Comp.
                                B Int. Ref.0 Select 2 : 3/32 */
    789    000000              #define CBREF0_3            (0x0003u)  /* Comp.
                                B Int. Ref.0 Select 3 : 4/32 */
    790    000000              #define CBREF0_4            (0x0004u)  /* Comp.
                                B Int. Ref.0 Select 4 : 5/32 */
    791    000000              #define CBREF0_5            (0x0005u)  /* Comp.
                                B Int. Ref.0 Select 5 : 6/32 */
    792    000000              #define CBREF0_6            (0x0006u)  /* Comp.
                                B Int. Ref.0 Select 6 : 7/32 */
    793    000000              #define CBREF0_7            (0x0007u)  /* Comp.
                                B Int. Ref.0 Select 7 : 8/32 */
    794    000000              #define CBREF0_8            (0x0008u)  /* Comp.
                                B Int. Ref.0 Select 0 : 9/32 */
    795    000000              #define CBREF0_9            (0x0009u)  /* Comp.
                                B Int. Ref.0 Select 1 : 10/32 */
    796    000000              #define CBREF0_10           (0x000Au)  /* Comp.
                                B Int. Ref.0 Select 2 : 11/32 */
    797    000000              #define CBREF0_11           (0x000Bu)  /* Comp.
                                B Int. Ref.0 Select 3 : 12/32 */
    798    000000              #define CBREF0_12           (0x000Cu)  /* Comp.
                                B Int. Ref.0 Select 4 : 13/32 */
    799    000000              #define CBREF0_13           (0x000Du)  /* Comp.
                                B Int. Ref.0 Select 5 : 14/32 */
    800    000000              #define CBREF0_14           (0x000Eu)  /* Comp.
                                B Int. Ref.0 Select 6 : 15/32 */
    801    000000              #define CBREF0_15           (0x000Fu)  /* Comp.
                                B Int. Ref.0 Select 7 : 16/32 */
    802    000000              #define CBREF0_16           (0x0010u)  /* Comp.
                                B Int. Ref.0 Select 0 : 17/32 */
    803    000000              #define CBREF0_17           (0x0011u)  /* Comp.
                                B Int. Ref.0 Select 1 : 18/32 */
    804    000000              #define CBREF0_18           (0x0012u)  /* Comp.
                                B Int. Ref.0 Select 2 : 19/32 */
    805    000000              #define CBREF0_19           (0x0013u)  /* Comp.
                                B Int. Ref.0 Select 3 : 20/32 */
    806    000000              #define CBREF0_20           (0x0014u)  /* Comp.
                                B Int. Ref.0 Select 4 : 21/32 */
    807    000000              #define CBREF0_21           (0x0015u)  /* Comp.
                                B Int. Ref.0 Select 5 : 22/32 */
    808    000000              #define CBREF0_22           (0x0016u)  /* Comp.
                                B Int. Ref.0 Select 6 : 23/32 */
    809    000000              #define CBREF0_23           (0x0017u)  /* Comp.
                                B Int. Ref.0 Select 7 : 24/32 */
    810    000000              #define CBREF0_24           (0x0018u)  /* Comp.
                                B Int. Ref.0 Select 0 : 25/32 */
    811    000000              #define CBREF0_25           (0x0019u)  /* Comp.
                                B Int. Ref.0 Select 1 : 26/32 */
    812    000000              #define CBREF0_26           (0x001Au)  /* Comp.
                                B Int. Ref.0 Select 2 : 27/32 */
    813    000000              #define CBREF0_27           (0x001Bu)  /* Comp.
                                B Int. Ref.0 Select 3 : 28/32 */
    814    000000              #define CBREF0_28           (0x001Cu)  /* Comp.
                                B Int. Ref.0 Select 4 : 29/32 */
    815    000000              #define CBREF0_29           (0x001Du)  /* Comp.
                                B Int. Ref.0 Select 5 : 30/32 */
    816    000000              #define CBREF0_30           (0x001Eu)  /* Comp.
                                B Int. Ref.0 Select 6 : 31/32 */
    817    000000              #define CBREF0_31           (0x001Fu)  /* Comp.
                                B Int. Ref.0 Select 7 : 32/32 */
    818    000000              
    819    000000              #define CBRS_0              (0x0000u)  /* Comp.
                                B Reference Source 0 : Off */
    820    000000              #define CBRS_1              (0x0040u)  /* Comp.
                                B Reference Source 1 : Vcc */
    821    000000              #define CBRS_2              (0x0080u)  /* Comp.
                                B Reference Source 2 : Shared Ref. */
    822    000000              #define CBRS_3              (0x00C0u)  /* Comp.
                                B Reference Source 3 : Shared Ref. / Off
                                */
    823    000000              
    824    000000              #define CBREF1_0            (0x0000u)  /* Comp.
                                B Int. Ref.1 Select 0 : 1/32 */
    825    000000              #define CBREF1_1            (0x0100u)  /* Comp.
                                B Int. Ref.1 Select 1 : 2/32 */
    826    000000              #define CBREF1_2            (0x0200u)  /* Comp.
                                B Int. Ref.1 Select 2 : 3/32 */
    827    000000              #define CBREF1_3            (0x0300u)  /* Comp.
                                B Int. Ref.1 Select 3 : 4/32 */
    828    000000              #define CBREF1_4            (0x0400u)  /* Comp.
                                B Int. Ref.1 Select 4 : 5/32 */
    829    000000              #define CBREF1_5            (0x0500u)  /* Comp.
                                B Int. Ref.1 Select 5 : 6/32 */
    830    000000              #define CBREF1_6            (0x0600u)  /* Comp.
                                B Int. Ref.1 Select 6 : 7/32 */
    831    000000              #define CBREF1_7            (0x0700u)  /* Comp.
                                B Int. Ref.1 Select 7 : 8/32 */
    832    000000              #define CBREF1_8            (0x0800u)  /* Comp.
                                B Int. Ref.1 Select 0 : 9/32 */
    833    000000              #define CBREF1_9            (0x0900u)  /* Comp.
                                B Int. Ref.1 Select 1 : 10/32 */
    834    000000              #define CBREF1_10           (0x0A00u)  /* Comp.
                                B Int. Ref.1 Select 2 : 11/32 */
    835    000000              #define CBREF1_11           (0x0B00u)  /* Comp.
                                B Int. Ref.1 Select 3 : 12/32 */
    836    000000              #define CBREF1_12           (0x0C00u)  /* Comp.
                                B Int. Ref.1 Select 4 : 13/32 */
    837    000000              #define CBREF1_13           (0x0D00u)  /* Comp.
                                B Int. Ref.1 Select 5 : 14/32 */
    838    000000              #define CBREF1_14           (0x0E00u)  /* Comp.
                                B Int. Ref.1 Select 6 : 15/32 */
    839    000000              #define CBREF1_15           (0x0F00u)  /* Comp.
                                B Int. Ref.1 Select 7 : 16/32 */
    840    000000              #define CBREF1_16           (0x1000u)  /* Comp.
                                B Int. Ref.1 Select 0 : 17/32 */
    841    000000              #define CBREF1_17           (0x1100u)  /* Comp.
                                B Int. Ref.1 Select 1 : 18/32 */
    842    000000              #define CBREF1_18           (0x1200u)  /* Comp.
                                B Int. Ref.1 Select 2 : 19/32 */
    843    000000              #define CBREF1_19           (0x1300u)  /* Comp.
                                B Int. Ref.1 Select 3 : 20/32 */
    844    000000              #define CBREF1_20           (0x1400u)  /* Comp.
                                B Int. Ref.1 Select 4 : 21/32 */
    845    000000              #define CBREF1_21           (0x1500u)  /* Comp.
                                B Int. Ref.1 Select 5 : 22/32 */
    846    000000              #define CBREF1_22           (0x1600u)  /* Comp.
                                B Int. Ref.1 Select 6 : 23/32 */
    847    000000              #define CBREF1_23           (0x1700u)  /* Comp.
                                B Int. Ref.1 Select 7 : 24/32 */
    848    000000              #define CBREF1_24           (0x1800u)  /* Comp.
                                B Int. Ref.1 Select 0 : 25/32 */
    849    000000              #define CBREF1_25           (0x1900u)  /* Comp.
                                B Int. Ref.1 Select 1 : 26/32 */
    850    000000              #define CBREF1_26           (0x1A00u)  /* Comp.
                                B Int. Ref.1 Select 2 : 27/32 */
    851    000000              #define CBREF1_27           (0x1B00u)  /* Comp.
                                B Int. Ref.1 Select 3 : 28/32 */
    852    000000              #define CBREF1_28           (0x1C00u)  /* Comp.
                                B Int. Ref.1 Select 4 : 29/32 */
    853    000000              #define CBREF1_29           (0x1D00u)  /* Comp.
                                B Int. Ref.1 Select 5 : 30/32 */
    854    000000              #define CBREF1_30           (0x1E00u)  /* Comp.
                                B Int. Ref.1 Select 6 : 31/32 */
    855    000000              #define CBREF1_31           (0x1F00u)  /* Comp.
                                B Int. Ref.1 Select 7 : 32/32 */
    856    000000              
    857    000000              #define CBREFL_0            (0x0000u)  /* Comp.
                                B Reference voltage level 0 : None */
    858    000000              #define CBREFL_1            (0x2000u)  /* Comp.
                                B Reference voltage level 1 : 1.5V */
    859    000000              #define CBREFL_2            (0x4000u)  /* Comp.
                                B Reference voltage level 2 : 2.0V  */
    860    000000              #define CBREFL_3            (0x6000u)  /* Comp.
                                B Reference voltage level 3 : 2.5V  */
    861    000000              
    862    000000              #define CBPD0               (0x0001u)  /* Comp.
                                B Disable Input Buffer of Port Register .0
                                */
    863    000000              #define CBPD1               (0x0002u)  /* Comp.
                                B Disable Input Buffer of Port Register .1
                                */
    864    000000              #define CBPD2               (0x0004u)  /* Comp.
                                B Disable Input Buffer of Port Register .2
                                */
    865    000000              #define CBPD3               (0x0008u)  /* Comp.
                                B Disable Input Buffer of Port Register .3
                                */
    866    000000              #define CBPD4               (0x0010u)  /* Comp.
                                B Disable Input Buffer of Port Register .4
                                */
    867    000000              #define CBPD5               (0x0020u)  /* Comp.
                                B Disable Input Buffer of Port Register .5
                                */
    868    000000              #define CBPD6               (0x0040u)  /* Comp.
                                B Disable Input Buffer of Port Register .6
                                */
    869    000000              #define CBPD7               (0x0080u)  /* Comp.
                                B Disable Input Buffer of Port Register .7
                                */
    870    000000              #define CBPD8               (0x0100u)  /* Comp.
                                B Disable Input Buffer of Port Register .8
                                */
    871    000000              #define CBPD9               (0x0200u)  /* Comp.
                                B Disable Input Buffer of Port Register .9
                                */
    872    000000              #define CBPD10              (0x0400u)  /* Comp.
                                B Disable Input Buffer of Port Register .10
                                */
    873    000000              #define CBPD11              (0x0800u)  /* Comp.
                                B Disable Input Buffer of Port Register .11
                                */
    874    000000              #define CBPD12              (0x1000u)  /* Comp.
                                B Disable Input Buffer of Port Register .12
                                */
    875    000000              #define CBPD13              (0x2000u)  /* Comp.
                                B Disable Input Buffer of Port Register .13
                                */
    876    000000              #define CBPD14              (0x4000u)  /* Comp.
                                B Disable Input Buffer of Port Register .14
                                */
    877    000000              #define CBPD15              (0x8000u)  /* Comp.
                                B Disable Input Buffer of Port Register .15
                                */
    878    000000              
    879    000000              #define CBPD0_L             (0x0001u)  /* Comp.
                                B Disable Input Buffer of Port Register .0
                                */
    880    000000              #define CBPD1_L             (0x0002u)  /* Comp.
                                B Disable Input Buffer of Port Register .1
                                */
    881    000000              #define CBPD2_L             (0x0004u)  /* Comp.
                                B Disable Input Buffer of Port Register .2
                                */
    882    000000              #define CBPD3_L             (0x0008u)  /* Comp.
                                B Disable Input Buffer of Port Register .3
                                */
    883    000000              #define CBPD4_L             (0x0010u)  /* Comp.
                                B Disable Input Buffer of Port Register .4
                                */
    884    000000              #define CBPD5_L             (0x0020u)  /* Comp.
                                B Disable Input Buffer of Port Register .5
                                */
    885    000000              #define CBPD6_L             (0x0040u)  /* Comp.
                                B Disable Input Buffer of Port Register .6
                                */
    886    000000              #define CBPD7_L             (0x0080u)  /* Comp.
                                B Disable Input Buffer of Port Register .7
                                */
    887    000000              
    888    000000              #define CBPD8_H             (0x0001u)  /* Comp.
                                B Disable Input Buffer of Port Register .8
                                */
    889    000000              #define CBPD9_H             (0x0002u)  /* Comp.
                                B Disable Input Buffer of Port Register .9
                                */
    890    000000              #define CBPD10_H            (0x0004u)  /* Comp.
                                B Disable Input Buffer of Port Register .10
                                */
    891    000000              #define CBPD11_H            (0x0008u)  /* Comp.
                                B Disable Input Buffer of Port Register .11
                                */
    892    000000              #define CBPD12_H            (0x0010u)  /* Comp.
                                B Disable Input Buffer of Port Register .12
                                */
    893    000000              #define CBPD13_H            (0x0020u)  /* Comp.
                                B Disable Input Buffer of Port Register .13
                                */
    894    000000              #define CBPD14_H            (0x0040u)  /* Comp.
                                B Disable Input Buffer of Port Register .14
                                */
    895    000000              #define CBPD15_H            (0x0080u)  /* Comp.
                                B Disable Input Buffer of Port Register .15
                                */
    896    000000              
    897    000000              /* CBINT Control Bits */
    898    000000              #define CBIFG                (0x0001u)  /* Comp.
                                B Interrupt Flag */
    899    000000              #define CBIIFG               (0x0002u)  /* Comp.
                                B Interrupt Flag Inverted Polarity */
    900    000000              //#define RESERVED             (0x0004u)  /*
                                Comp. B */
    901    000000              //#define RESERVED             (0x0008u)  /*
                                Comp. B */
    902    000000              //#define RESERVED             (0x0010u)  /*
                                Comp. B */
    903    000000              //#define RESERVED             (0x0020u)  /*
                                Comp. B */
    904    000000              //#define RESERVED             (0x0040u)  /*
                                Comp. B */
    905    000000              //#define RESERVED             (0x0080u)  /*
                                Comp. B */
    906    000000              #define CBIE                 (0x0100u)  /* Comp.
                                B Interrupt Enable */
    907    000000              #define CBIIE                (0x0200u)  /* Comp.
                                B Interrupt Enable Inverted Polarity */
    908    000000              //#define RESERVED             (0x0400u)  /*
                                Comp. B */
    909    000000              //#define RESERVED             (0x0800u)  /*
                                Comp. B */
    910    000000              //#define RESERVED             (0x1000u)  /*
                                Comp. B */
    911    000000              //#define RESERVED             (0x2000u)  /*
                                Comp. B */
    912    000000              //#define RESERVED             (0x4000u)  /*
                                Comp. B */
    913    000000              //#define RESERVED             (0x8000u)  /*
                                Comp. B */
    914    000000              
    915    000000              /* CBINT Control Bits */
    916    000000              #define CBIFG_L             (0x0001u)  /* Comp.
                                B Interrupt Flag */
    917    000000              #define CBIIFG_L            (0x0002u)  /* Comp.
                                B Interrupt Flag Inverted Polarity */
    918    000000              //#define RESERVED             (0x0004u)  /*
                                Comp. B */
    919    000000              //#define RESERVED             (0x0008u)  /*
                                Comp. B */
    920    000000              //#define RESERVED             (0x0010u)  /*
                                Comp. B */
    921    000000              //#define RESERVED             (0x0020u)  /*
                                Comp. B */
    922    000000              //#define RESERVED             (0x0040u)  /*
                                Comp. B */
    923    000000              //#define RESERVED             (0x0080u)  /*
                                Comp. B */
    924    000000              //#define RESERVED             (0x0400u)  /*
                                Comp. B */
    925    000000              //#define RESERVED             (0x0800u)  /*
                                Comp. B */
    926    000000              //#define RESERVED             (0x1000u)  /*
                                Comp. B */
    927    000000              //#define RESERVED             (0x2000u)  /*
                                Comp. B */
    928    000000              //#define RESERVED             (0x4000u)  /*
                                Comp. B */
    929    000000              //#define RESERVED             (0x8000u)  /*
                                Comp. B */
    930    000000              
    931    000000              /* CBINT Control Bits */
    932    000000              //#define RESERVED             (0x0004u)  /*
                                Comp. B */
    933    000000              //#define RESERVED             (0x0008u)  /*
                                Comp. B */
    934    000000              //#define RESERVED             (0x0010u)  /*
                                Comp. B */
    935    000000              //#define RESERVED             (0x0020u)  /*
                                Comp. B */
    936    000000              //#define RESERVED             (0x0040u)  /*
                                Comp. B */
    937    000000              //#define RESERVED             (0x0080u)  /*
                                Comp. B */
    938    000000              #define CBIE_H              (0x0001u)  /* Comp.
                                B Interrupt Enable */
    939    000000              #define CBIIE_H             (0x0002u)  /* Comp.
                                B Interrupt Enable Inverted Polarity */
    940    000000              //#define RESERVED             (0x0400u)  /*
                                Comp. B */
    941    000000              //#define RESERVED             (0x0800u)  /*
                                Comp. B */
    942    000000              //#define RESERVED             (0x1000u)  /*
                                Comp. B */
    943    000000              //#define RESERVED             (0x2000u)  /*
                                Comp. B */
    944    000000              //#define RESERVED             (0x4000u)  /*
                                Comp. B */
    945    000000              //#define RESERVED             (0x8000u)  /*
                                Comp. B */
    946    000000              
    947    000000              /* CBIV Definitions */
    948    000000              #define CBIV_NONE           (0x0000u)    /* No
                                Interrupt pending */
    949    000000              #define CBIV_CBIFG          (0x0002u)    /*
                                CBIFG */
    950    000000              #define CBIV_CBIIFG         (0x0004u)    /*
                                CBIIFG */
    951    000000              
    952    000000              /***********************************************
                               **************
    953    000000              * CRC Module
    954    000000              ************************************************
                               *************/
    955    000000              #define __MSP430_HAS_CRC__            /*
                                Definition to show that Module is available
                                */
    956    000000              #define __MSP430_BASEADDRESS_CRC__ 0x0150
    957    000000              
    958    000000              #define  CRCDI_              (0x0150u)  /* CRC
                                Data In Register */
    959    000000              DEFCW(   CRCDI             , CRCDI_)
    959.1  000000              sfrb CRCDI_L = (0x0150u);
    959.2  000000              sfrb CRCDI_H = (0x0150u)+1;
    959.3  000000              sfrw CRCDI   = (0x0150u);
    959.4  000000                    endm
    960    000000              #define  CRCDIRB_            (0x0152u)  /* CRC
                                data in reverse byte Register */
    961    000000              DEFCW(   CRCDIRB           , CRCDIRB_)
    961.1  000000              sfrb CRCDIRB_L = (0x0152u);
    961.2  000000              sfrb CRCDIRB_H = (0x0152u)+1;
    961.3  000000              sfrw CRCDIRB   = (0x0152u);
    961.4  000000                    endm
    962    000000              #define  CRCINIRES_          (0x0154u)  /* CRC
                                Initialisation Register and Result Register
                                */
    963    000000              DEFCW(   CRCINIRES         , CRCINIRES_)
    963.1  000000              sfrb CRCINIRES_L = (0x0154u);
    963.2  000000              sfrb CRCINIRES_H = (0x0154u)+1;
    963.3  000000              sfrw CRCINIRES   = (0x0154u);
    963.4  000000                    endm
    964    000000              #define  CRCRESR_            (0x0156u)  /* CRC
                                reverse result Register */
    965    000000              DEFCW(   CRCRESR           , CRCRESR_)
    965.1  000000              sfrb CRCRESR_L = (0x0156u);
    965.2  000000              sfrb CRCRESR_H = (0x0156u)+1;
    965.3  000000              sfrw CRCRESR   = (0x0156u);
    965.4  000000                    endm
    966    000000              
    967    000000              /***********************************************
                               *************
    968    000000              * DMA_X
    969    000000              ************************************************
                               ************/
    970    000000              #define __MSP430_HAS_DMAX_3__           /*
                                Definition to show that Module is available
                                */
    971    000000              #define __MSP430_BASEADDRESS_DMAX_3__ 0x0500
    972    000000              
    973    000000              #define  DMACTL0_            (0x0500u)    /* DMA
                                Module Control 0 */
    974    000000              DEFCW(   DMACTL0           , DMACTL0_)
    974.1  000000              sfrb DMACTL0_L = (0x0500u);
    974.2  000000              sfrb DMACTL0_H = (0x0500u)+1;
    974.3  000000              sfrw DMACTL0   = (0x0500u);
    974.4  000000                    endm
    975    000000              #define  DMACTL1_            (0x0502u)    /* DMA
                                Module Control 1 */
    976    000000              DEFCW(   DMACTL1           , DMACTL1_)
    976.1  000000              sfrb DMACTL1_L = (0x0502u);
    976.2  000000              sfrb DMACTL1_H = (0x0502u)+1;
    976.3  000000              sfrw DMACTL1   = (0x0502u);
    976.4  000000                    endm
    977    000000              #define  DMACTL2_            (0x0504u)    /* DMA
                                Module Control 2 */
    978    000000              DEFCW(   DMACTL2           , DMACTL2_)
    978.1  000000              sfrb DMACTL2_L = (0x0504u);
    978.2  000000              sfrb DMACTL2_H = (0x0504u)+1;
    978.3  000000              sfrw DMACTL2   = (0x0504u);
    978.4  000000                    endm
    979    000000              #define  DMACTL3_            (0x0506u)    /* DMA
                                Module Control 3 */
    980    000000              DEFCW(   DMACTL3           , DMACTL3_)
    980.1  000000              sfrb DMACTL3_L = (0x0506u);
    980.2  000000              sfrb DMACTL3_H = (0x0506u)+1;
    980.3  000000              sfrw DMACTL3   = (0x0506u);
    980.4  000000                    endm
    981    000000              #define  DMACTL4_            (0x0508u)    /* DMA
                                Module Control 4 */
    982    000000              DEFCW(   DMACTL4           , DMACTL4_)
    982.1  000000              sfrb DMACTL4_L = (0x0508u);
    982.2  000000              sfrb DMACTL4_H = (0x0508u)+1;
    982.3  000000              sfrw DMACTL4   = (0x0508u);
    982.4  000000                    endm
    983    000000              #define  DMAIV_              (0x050Eu)    /* DMA
                                Interrupt Vector Word */
    984    000000              DEFCW(   DMAIV             , DMAIV_)
    984.1  000000              sfrb DMAIV_L = (0x050Eu);
    984.2  000000              sfrb DMAIV_H = (0x050Eu)+1;
    984.3  000000              sfrw DMAIV   = (0x050Eu);
    984.4  000000                    endm
    985    000000              
    986    000000              #define  DMA0CTL_            (0x0510u)    /* DMA
                                Channel 0 Control */
    987    000000              DEFCW(   DMA0CTL           , DMA0CTL_)
    987.1  000000              sfrb DMA0CTL_L = (0x0510u);
    987.2  000000              sfrb DMA0CTL_H = (0x0510u)+1;
    987.3  000000              sfrw DMA0CTL   = (0x0510u);
    987.4  000000                    endm
    988    000000              #define  DMA0SA_             (0x0512u)    /* DMA
                                Channel 0 Source Address */
    989    000000              DEFA(    DMA0SA            , DMA0SA_)
    989.1  000000              sfrb DMA0SA_L = (0x0512u);
    989.2  000000              sfrb DMA0SA_H = (0x0512u)+1;
    989.3  000000              sfrw DMA0SAL  = (0x0512u);
    989.4  000000              sfrw DMA0SAH  = (0x0512u)+2;
    989.5  000000              sfrl DMA0SA   = (0x0512u);
    989.6  000000                    endm
    990    000000              #define  DMA0DA_             (0x0516u)    /* DMA
                                Channel 0 Destination Address */
    991    000000              DEFA(    DMA0DA            , DMA0DA_)
    991.1  000000              sfrb DMA0DA_L = (0x0516u);
    991.2  000000              sfrb DMA0DA_H = (0x0516u)+1;
    991.3  000000              sfrw DMA0DAL  = (0x0516u);
    991.4  000000              sfrw DMA0DAH  = (0x0516u)+2;
    991.5  000000              sfrl DMA0DA   = (0x0516u);
    991.6  000000                    endm
    992    000000              #define  DMA0SZ_             (0x051Au)    /* DMA
                                Channel 0 Transfer Size */
    993    000000              DEFW(    DMA0SZ            , DMA0SZ_)
    994    000000              
    995    000000              #define  DMA1CTL_            (0x0520u)    /* DMA
                                Channel 1 Control */
    996    000000              DEFCW(   DMA1CTL           , DMA1CTL_)
    996.1  000000              sfrb DMA1CTL_L = (0x0520u);
    996.2  000000              sfrb DMA1CTL_H = (0x0520u)+1;
    996.3  000000              sfrw DMA1CTL   = (0x0520u);
    996.4  000000                    endm
    997    000000              #define  DMA1SA_             (0x0522u)    /* DMA
                                Channel 1 Source Address */
    998    000000              DEFA(    DMA1SA            , DMA1SA_)
    998.1  000000              sfrb DMA1SA_L = (0x0522u);
    998.2  000000              sfrb DMA1SA_H = (0x0522u)+1;
    998.3  000000              sfrw DMA1SAL  = (0x0522u);
    998.4  000000              sfrw DMA1SAH  = (0x0522u)+2;
    998.5  000000              sfrl DMA1SA   = (0x0522u);
    998.6  000000                    endm
    999    000000              #define  DMA1DA_             (0x0526u)    /* DMA
                                Channel 1 Destination Address */
   1000    000000              DEFA(    DMA1DA            , DMA1DA_)
   1000.1  000000              sfrb DMA1DA_L = (0x0526u);
   1000.2  000000              sfrb DMA1DA_H = (0x0526u)+1;
   1000.3  000000              sfrw DMA1DAL  = (0x0526u);
   1000.4  000000              sfrw DMA1DAH  = (0x0526u)+2;
   1000.5  000000              sfrl DMA1DA   = (0x0526u);
   1000.6  000000                    endm
   1001    000000              #define  DMA1SZ_             (0x052Au)    /* DMA
                                Channel 1 Transfer Size */
   1002    000000              DEFW(    DMA1SZ            , DMA1SZ_)
   1003    000000              
   1004    000000              #define  DMA2CTL_            (0x0530u)    /* DMA
                                Channel 2 Control */
   1005    000000              DEFCW(   DMA2CTL           , DMA2CTL_)
   1005.1  000000              sfrb DMA2CTL_L = (0x0530u);
   1005.2  000000              sfrb DMA2CTL_H = (0x0530u)+1;
   1005.3  000000              sfrw DMA2CTL   = (0x0530u);
   1005.4  000000                    endm
   1006    000000              #define  DMA2SA_             (0x0532u)    /* DMA
                                Channel 2 Source Address */
   1007    000000              DEFA(    DMA2SA            , DMA2SA_)
   1007.1  000000              sfrb DMA2SA_L = (0x0532u);
   1007.2  000000              sfrb DMA2SA_H = (0x0532u)+1;
   1007.3  000000              sfrw DMA2SAL  = (0x0532u);
   1007.4  000000              sfrw DMA2SAH  = (0x0532u)+2;
   1007.5  000000              sfrl DMA2SA   = (0x0532u);
   1007.6  000000                    endm
   1008    000000              #define  DMA2DA_             (0x0536u)    /* DMA
                                Channel 2 Destination Address */
   1009    000000              DEFA(    DMA2DA            , DMA2DA_)
   1009.1  000000              sfrb DMA2DA_L = (0x0536u);
   1009.2  000000              sfrb DMA2DA_H = (0x0536u)+1;
   1009.3  000000              sfrw DMA2DAL  = (0x0536u);
   1009.4  000000              sfrw DMA2DAH  = (0x0536u)+2;
   1009.5  000000              sfrl DMA2DA   = (0x0536u);
   1009.6  000000                    endm
   1010    000000              #define  DMA2SZ_             (0x053Au)    /* DMA
                                Channel 2 Transfer Size */
   1011    000000              DEFW(    DMA2SZ            , DMA2SZ_)
   1012    000000              
   1013    000000              /* DMACTL0 Control Bits */
   1014    000000              #define DMA0TSEL0           (0x0001u)    /* DMA
                                channel 0 transfer select bit 0 */
   1015    000000              #define DMA0TSEL1           (0x0002u)    /* DMA
                                channel 0 transfer select bit 1 */
   1016    000000              #define DMA0TSEL2           (0x0004u)    /* DMA
                                channel 0 transfer select bit 2 */
   1017    000000              #define DMA0TSEL3           (0x0008u)    /* DMA
                                channel 0 transfer select bit 3 */
   1018    000000              #define DMA0TSEL4           (0x0010u)    /* DMA
                                channel 0 transfer select bit 4 */
   1019    000000              #define DMA1TSEL0           (0x0100u)    /* DMA
                                channel 1 transfer select bit 0 */
   1020    000000              #define DMA1TSEL1           (0x0200u)    /* DMA
                                channel 1 transfer select bit 1 */
   1021    000000              #define DMA1TSEL2           (0x0400u)    /* DMA
                                channel 1 transfer select bit 2 */
   1022    000000              #define DMA1TSEL3           (0x0800u)    /* DMA
                                channel 1 transfer select bit 3 */
   1023    000000              #define DMA1TSEL4           (0x1000u)    /* DMA
                                channel 1 transfer select bit 4 */
   1024    000000              
   1025    000000              /* DMACTL0 Control Bits */
   1026    000000              #define DMA0TSEL0_L         (0x0001u)    /* DMA
                                channel 0 transfer select bit 0 */
   1027    000000              #define DMA0TSEL1_L         (0x0002u)    /* DMA
                                channel 0 transfer select bit 1 */
   1028    000000              #define DMA0TSEL2_L         (0x0004u)    /* DMA
                                channel 0 transfer select bit 2 */
   1029    000000              #define DMA0TSEL3_L         (0x0008u)    /* DMA
                                channel 0 transfer select bit 3 */
   1030    000000              #define DMA0TSEL4_L         (0x0010u)    /* DMA
                                channel 0 transfer select bit 4 */
   1031    000000              
   1032    000000              /* DMACTL0 Control Bits */
   1033    000000              #define DMA1TSEL0_H         (0x0001u)    /* DMA
                                channel 1 transfer select bit 0 */
   1034    000000              #define DMA1TSEL1_H         (0x0002u)    /* DMA
                                channel 1 transfer select bit 1 */
   1035    000000              #define DMA1TSEL2_H         (0x0004u)    /* DMA
                                channel 1 transfer select bit 2 */
   1036    000000              #define DMA1TSEL3_H         (0x0008u)    /* DMA
                                channel 1 transfer select bit 3 */
   1037    000000              #define DMA1TSEL4_H         (0x0010u)    /* DMA
                                channel 1 transfer select bit 4 */
   1038    000000              
   1039    000000              /* DMACTL01 Control Bits */
   1040    000000              #define DMA2TSEL0           (0x0001u)    /* DMA
                                channel 2 transfer select bit 0 */
   1041    000000              #define DMA2TSEL1           (0x0002u)    /* DMA
                                channel 2 transfer select bit 1 */
   1042    000000              #define DMA2TSEL2           (0x0004u)    /* DMA
                                channel 2 transfer select bit 2 */
   1043    000000              #define DMA2TSEL3           (0x0008u)    /* DMA
                                channel 2 transfer select bit 3 */
   1044    000000              #define DMA2TSEL4           (0x0010u)    /* DMA
                                channel 2 transfer select bit 4 */
   1045    000000              
   1046    000000              /* DMACTL01 Control Bits */
   1047    000000              #define DMA2TSEL0_L         (0x0001u)    /* DMA
                                channel 2 transfer select bit 0 */
   1048    000000              #define DMA2TSEL1_L         (0x0002u)    /* DMA
                                channel 2 transfer select bit 1 */
   1049    000000              #define DMA2TSEL2_L         (0x0004u)    /* DMA
                                channel 2 transfer select bit 2 */
   1050    000000              #define DMA2TSEL3_L         (0x0008u)    /* DMA
                                channel 2 transfer select bit 3 */
   1051    000000              #define DMA2TSEL4_L         (0x0010u)    /* DMA
                                channel 2 transfer select bit 4 */
   1052    000000              
   1053    000000              /* DMACTL01 Control Bits */
   1054    000000              
   1055    000000              /* DMACTL4 Control Bits */
   1056    000000              #define ENNMI               (0x0001u)    /*
                                Enable NMI interruption of DMA */
   1057    000000              #define ROUNDROBIN          (0x0002u)    /*
                                Round-Robin DMA channel priorities */
   1058    000000              #define DMARMWDIS           (0x0004u)    /*
                                Inhibited DMA transfers during read-modify-writ
                               e CPU operations */
   1059    000000              
   1060    000000              /* DMACTL4 Control Bits */
   1061    000000              #define ENNMI_L             (0x0001u)    /*
                                Enable NMI interruption of DMA */
   1062    000000              #define ROUNDROBIN_L        (0x0002u)    /*
                                Round-Robin DMA channel priorities */
   1063    000000              #define DMARMWDIS_L         (0x0004u)    /*
                                Inhibited DMA transfers during read-modify-writ
                               e CPU operations */
   1064    000000              
   1065    000000              /* DMACTL4 Control Bits */
   1066    000000              
   1067    000000              /* DMAxCTL Control Bits */
   1068    000000              #define DMAREQ              (0x0001u)    /*
                                Initiate DMA transfer with DMATSEL */
   1069    000000              #define DMAABORT            (0x0002u)    /* DMA
                                transfer aborted by NMI */
   1070    000000              #define DMAIE               (0x0004u)    /* DMA
                                interrupt enable */
   1071    000000              #define DMAIFG              (0x0008u)    /* DMA
                                interrupt flag */
   1072    000000              #define DMAEN               (0x0010u)    /* DMA
                                enable */
   1073    000000              #define DMALEVEL            (0x0020u)    /* DMA
                                level sensitive trigger select */
   1074    000000              #define DMASRCBYTE          (0x0040u)    /* DMA
                                source byte */
   1075    000000              #define DMADSTBYTE          (0x0080u)    /* DMA
                                destination byte */
   1076    000000              #define DMASRCINCR0         (0x0100u)    /* DMA
                                source increment bit 0 */
   1077    000000              #define DMASRCINCR1         (0x0200u)    /* DMA
                                source increment bit 1 */
   1078    000000              #define DMADSTINCR0         (0x0400u)    /* DMA
                                destination increment bit 0 */
   1079    000000              #define DMADSTINCR1         (0x0800u)    /* DMA
                                destination increment bit 1 */
   1080    000000              #define DMADT0              (0x1000u)    /* DMA
                                transfer mode bit 0 */
   1081    000000              #define DMADT1              (0x2000u)    /* DMA
                                transfer mode bit 1 */
   1082    000000              #define DMADT2              (0x4000u)    /* DMA
                                transfer mode bit 2 */
   1083    000000              
   1084    000000              /* DMAxCTL Control Bits */
   1085    000000              #define DMAREQ_L            (0x0001u)    /*
                                Initiate DMA transfer with DMATSEL */
   1086    000000              #define DMAABORT_L          (0x0002u)    /* DMA
                                transfer aborted by NMI */
   1087    000000              #define DMAIE_L             (0x0004u)    /* DMA
                                interrupt enable */
   1088    000000              #define DMAIFG_L            (0x0008u)    /* DMA
                                interrupt flag */
   1089    000000              #define DMAEN_L             (0x0010u)    /* DMA
                                enable */
   1090    000000              #define DMALEVEL_L          (0x0020u)    /* DMA
                                level sensitive trigger select */
   1091    000000              #define DMASRCBYTE_L        (0x0040u)    /* DMA
                                source byte */
   1092    000000              #define DMADSTBYTE_L        (0x0080u)    /* DMA
                                destination byte */
   1093    000000              
   1094    000000              /* DMAxCTL Control Bits */
   1095    000000              #define DMASRCINCR0_H       (0x0001u)    /* DMA
                                source increment bit 0 */
   1096    000000              #define DMASRCINCR1_H       (0x0002u)    /* DMA
                                source increment bit 1 */
   1097    000000              #define DMADSTINCR0_H       (0x0004u)    /* DMA
                                destination increment bit 0 */
   1098    000000              #define DMADSTINCR1_H       (0x0008u)    /* DMA
                                destination increment bit 1 */
   1099    000000              #define DMADT0_H            (0x0010u)    /* DMA
                                transfer mode bit 0 */
   1100    000000              #define DMADT1_H            (0x0020u)    /* DMA
                                transfer mode bit 1 */
   1101    000000              #define DMADT2_H            (0x0040u)    /* DMA
                                transfer mode bit 2 */
   1102    000000              
   1103    000000              #define DMASWDW             (0*0x0040u)  /* DMA
                                transfer: source word to destination word
                                */
   1104    000000              #define DMASBDW             (1*0x0040u)  /* DMA
                                transfer: source byte to destination word
                                */
   1105    000000              #define DMASWDB             (2*0x0040u)  /* DMA
                                transfer: source word to destination byte
                                */
   1106    000000              #define DMASBDB             (3*0x0040u)  /* DMA
                                transfer: source byte to destination byte
                                */
   1107    000000              
   1108    000000              #define DMASRCINCR_0        (0*0x0100u)  /* DMA
                                source increment 0: source address unchanged
                                */
   1109    000000              #define DMASRCINCR_1        (1*0x0100u)  /* DMA
                                source increment 1: source address unchanged
                                */
   1110    000000              #define DMASRCINCR_2        (2*0x0100u)  /* DMA
                                source increment 2: source address decremented
                                */
   1111    000000              #define DMASRCINCR_3        (3*0x0100u)  /* DMA
                                source increment 3: source address incremented
                                */
   1112    000000              
   1113    000000              #define DMADSTINCR_0        (0*0x0400u)  /* DMA
                                destination increment 0: destination address
                                unchanged */
   1114    000000              #define DMADSTINCR_1        (1*0x0400u)  /* DMA
                                destination increment 1: destination address
                                unchanged */
   1115    000000              #define DMADSTINCR_2        (2*0x0400u)  /* DMA
                                destination increment 2: destination address
                                decremented */
   1116    000000              #define DMADSTINCR_3        (3*0x0400u)  /* DMA
                                destination increment 3: destination address
                                incremented */
   1117    000000              
   1118    000000              #define DMADT_0             (0*0x1000u)  /* DMA
                                transfer mode 0: Single transfer */
   1119    000000              #define DMADT_1             (1*0x1000u)  /* DMA
                                transfer mode 1: Block transfer */
   1120    000000              #define DMADT_2             (2*0x1000u)  /* DMA
                                transfer mode 2: Burst-Block transfer
                                */
   1121    000000              #define DMADT_3             (3*0x1000u)  /* DMA
                                transfer mode 3: Burst-Block transfer
                                */
   1122    000000              #define DMADT_4             (4*0x1000u)  /* DMA
                                transfer mode 4: Repeated Single transfer
                                */
   1123    000000              #define DMADT_5             (5*0x1000u)  /* DMA
                                transfer mode 5: Repeated Block transfer
                                */
   1124    000000              #define DMADT_6             (6*0x1000u)  /* DMA
                                transfer mode 6: Repeated Burst-Block transfer
                                */
   1125    000000              #define DMADT_7             (7*0x1000u)  /* DMA
                                transfer mode 7: Repeated Burst-Block transfer
                                */
   1126    000000              
   1127    000000              /* DMAIV Definitions */
   1128    000000              #define DMAIV_NONE           (0x0000u)    /* No
                                Interrupt pending */
   1129    000000              #define DMAIV_DMA0IFG        (0x0002u)    /*
                                DMA0IFG*/
   1130    000000              #define DMAIV_DMA1IFG        (0x0004u)    /*
                                DMA1IFG*/
   1131    000000              #define DMAIV_DMA2IFG        (0x0006u)    /*
                                DMA2IFG*/
   1132    000000              
   1133    000000              #define DMA0TSEL_0          (0*0x0001u)  /* DMA
                                channel 0 transfer select 0:  DMA_REQ (sw)
                                */
   1134    000000              #define DMA0TSEL_1          (1*0x0001u)  /* DMA
                                channel 0 transfer select 1:  Timer0_A
                                (TA0CCR0.IFG) */
   1135    000000              #define DMA0TSEL_2          (2*0x0001u)  /* DMA
                                channel 0 transfer select 2:  Timer0_A
                                (TA0CCR2.IFG) */
   1136    000000              #define DMA0TSEL_3          (3*0x0001u)  /* DMA
                                channel 0 transfer select 3:  Timer1_A
                                (TA1CCR0.IFG) */
   1137    000000              #define DMA0TSEL_4          (4*0x0001u)  /* DMA
                                channel 0 transfer select 4:  Timer1_A
                                (TA1CCR2.IFG) */
   1138    000000              #define DMA0TSEL_5          (5*0x0001u)  /* DMA
                                channel 0 transfer select 5:  Timer2_A
                                (TA2CCR0.IFG) */
   1139    000000              #define DMA0TSEL_6          (6*0x0001u)  /* DMA
                                channel 0 transfer select 6:  Timer2_A
                                (TA2CCR2.IFG) */
   1140    000000              #define DMA0TSEL_7          (7*0x0001u)  /* DMA
                                channel 0 transfer select 7:  TimerB (TB0CCR0.I
                               FG) */
   1141    000000              #define DMA0TSEL_8          (8*0x0001u)  /* DMA
                                channel 0 transfer select 8:  TimerB (TB0CCR2.I
                               FG) */
   1142    000000              #define DMA0TSEL_9          (9*0x0001u)  /* DMA
                                channel 0 transfer select 9:  Reserved
                                */
   1143    000000              #define DMA0TSEL_10         (10*0x0001u) /* DMA
                                channel 0 transfer select 10: Reserved
                                */
   1144    000000              #define DMA0TSEL_11         (11*0x0001u) /* DMA
                                channel 0 transfer select 11: Reserved
                                */
   1145    000000              #define DMA0TSEL_12         (12*0x0001u) /* DMA
                                channel 0 transfer select 12: Reserved
                                */
   1146    000000              #define DMA0TSEL_13         (13*0x0001u) /* DMA
                                channel 0 transfer select 13: Reserved
                                */
   1147    000000              #define DMA0TSEL_14         (14*0x0001u) /* DMA
                                channel 0 transfer select 14: Reserved
                                */
   1148    000000              #define DMA0TSEL_15         (15*0x0001u) /* DMA
                                channel 0 transfer select 15: Reserved
                                */
   1149    000000              #define DMA0TSEL_16         (16*0x0001u) /* DMA
                                channel 0 transfer select 16: USCIA0 receive
                                */
   1150    000000              #define DMA0TSEL_17         (17*0x0001u) /* DMA
                                channel 0 transfer select 17: USCIA0 transmit
                                */
   1151    000000              #define DMA0TSEL_18         (18*0x0001u) /* DMA
                                channel 0 transfer select 18: USCIB0 receive
                                */
   1152    000000              #define DMA0TSEL_19         (19*0x0001u) /* DMA
                                channel 0 transfer select 19: USCIB0 transmit
                                */
   1153    000000              #define DMA0TSEL_20         (20*0x0001u) /* DMA
                                channel 0 transfer select 20: USCIA1 receive
                                */
   1154    000000              #define DMA0TSEL_21         (21*0x0001u) /* DMA
                                channel 0 transfer select 21: USCIA1 transmit
                                */
   1155    000000              #define DMA0TSEL_22         (22*0x0001u) /* DMA
                                channel 0 transfer select 22: USCIB1 receive
                                */
   1156    000000              #define DMA0TSEL_23         (23*0x0001u) /* DMA
                                channel 0 transfer select 23: USCIB1 transmit
                                */
   1157    000000              #define DMA0TSEL_24         (24*0x0001u) /* DMA
                                channel 0 transfer select 24: ADC12IFGx
                                */
   1158    000000              #define DMA0TSEL_25         (25*0x0001u) /* DMA
                                channel 0 transfer select 25: Reserved
                                */
   1159    000000              #define DMA0TSEL_26         (26*0x0001u) /* DMA
                                channel 0 transfer select 26: Reserved
                                */
   1160    000000              #define DMA0TSEL_27         (27*0x0001u) /* DMA
                                channel 0 transfer select 27: USB FNRXD
                                */
   1161    000000              #define DMA0TSEL_28         (28*0x0001u) /* DMA
                                channel 0 transfer select 28: USB ready
                                */
   1162    000000              #define DMA0TSEL_29         (29*0x0001u) /* DMA
                                channel 0 transfer select 29: Multiplier ready
                                */
   1163    000000              #define DMA0TSEL_30         (30*0x0001u) /* DMA
                                channel 0 transfer select 30: previous DMA
                                channel DMA2IFG */
   1164    000000              #define DMA0TSEL_31         (31*0x0001u) /* DMA
                                channel 0 transfer select 31: ext. Trigger
                                (DMAE0) */
   1165    000000              
   1166    000000              #define DMA1TSEL_0          (0*0x0100u)  /* DMA
                                channel 1 transfer select 0:  DMA_REQ (sw)
                                */
   1167    000000              #define DMA1TSEL_1          (1*0x0100u)  /* DMA
                                channel 1 transfer select 1:  Timer0_A
                                (TA0CCR0.IFG) */
   1168    000000              #define DMA1TSEL_2          (2*0x0100u)  /* DMA
                                channel 1 transfer select 2:  Timer0_A
                                (TA0CCR2.IFG) */
   1169    000000              #define DMA1TSEL_3          (3*0x0100u)  /* DMA
                                channel 1 transfer select 3:  Timer1_A
                                (TA1CCR0.IFG) */
   1170    000000              #define DMA1TSEL_4          (4*0x0100u)  /* DMA
                                channel 1 transfer select 4:  Timer1_A
                                (TA1CCR2.IFG) */
   1171    000000              #define DMA1TSEL_5          (5*0x0100u)  /* DMA
                                channel 1 transfer select 5:  Timer2_A
                                (TA2CCR0.IFG) */
   1172    000000              #define DMA1TSEL_6          (6*0x0100u)  /* DMA
                                channel 1 transfer select 6:  Timer2_A
                                (TA2CCR2.IFG) */
   1173    000000              #define DMA1TSEL_7          (7*0x0100u)  /* DMA
                                channel 1 transfer select 7:  TimerB (TB0CCR0.I
                               FG) */
   1174    000000              #define DMA1TSEL_8          (8*0x0100u)  /* DMA
                                channel 1 transfer select 8:  TimerB (TB0CCR2.I
                               FG) */
   1175    000000              #define DMA1TSEL_9          (9*0x0100u)  /* DMA
                                channel 1 transfer select 9:  Reserved
                                */
   1176    000000              #define DMA1TSEL_10         (10*0x0100u) /* DMA
                                channel 1 transfer select 10: Reserved
                                */
   1177    000000              #define DMA1TSEL_11         (11*0x0100u) /* DMA
                                channel 1 transfer select 11: Reserved
                                */
   1178    000000              #define DMA1TSEL_12         (12*0x0100u) /* DMA
                                channel 1 transfer select 12: Reserved
                                */
   1179    000000              #define DMA1TSEL_13         (13*0x0100u) /* DMA
                                channel 1 transfer select 13: Reserved
                                */
   1180    000000              #define DMA1TSEL_14         (14*0x0100u) /* DMA
                                channel 1 transfer select 14: Reserved
                                */
   1181    000000              #define DMA1TSEL_15         (15*0x0100u) /* DMA
                                channel 1 transfer select 15: Reserved
                                */
   1182    000000              #define DMA1TSEL_16         (16*0x0100u) /* DMA
                                channel 1 transfer select 16: USCIA0 receive
                                */
   1183    000000              #define DMA1TSEL_17         (17*0x0100u) /* DMA
                                channel 1 transfer select 17: USCIA0 transmit
                                */
   1184    000000              #define DMA1TSEL_18         (18*0x0100u) /* DMA
                                channel 1 transfer select 18: USCIB0 receive
                                */
   1185    000000              #define DMA1TSEL_19         (19*0x0100u) /* DMA
                                channel 1 transfer select 19: USCIB0 transmit
                                */
   1186    000000              #define DMA1TSEL_20         (20*0x0100u) /* DMA
                                channel 1 transfer select 20: USCIA1 receive
                                */
   1187    000000              #define DMA1TSEL_21         (21*0x0100u) /* DMA
                                channel 1 transfer select 21: USCIA1 transmit
                                */
   1188    000000              #define DMA1TSEL_22         (22*0x0100u) /* DMA
                                channel 1 transfer select 22: USCIB1 receive
                                */
   1189    000000              #define DMA1TSEL_23         (23*0x0100u) /* DMA
                                channel 1 transfer select 23: USCIB1 transmit
                                */
   1190    000000              #define DMA1TSEL_24         (24*0x0100u) /* DMA
                                channel 1 transfer select 24: ADC12IFGx
                                */
   1191    000000              #define DMA1TSEL_25         (25*0x0100u) /* DMA
                                channel 1 transfer select 25: Reserved
                                */
   1192    000000              #define DMA1TSEL_26         (26*0x0100u) /* DMA
                                channel 1 transfer select 26: Reserved
                                */
   1193    000000              #define DMA1TSEL_27         (27*0x0100u) /* DMA
                                channel 1 transfer select 27: USB FNRXD
                                */
   1194    000000              #define DMA1TSEL_28         (28*0x0100u) /* DMA
                                channel 1 transfer select 28: USB ready
                                */
   1195    000000              #define DMA1TSEL_29         (29*0x0100u) /* DMA
                                channel 1 transfer select 29: Multiplier ready
                                */
   1196    000000              #define DMA1TSEL_30         (30*0x0100u) /* DMA
                                channel 1 transfer select 30: previous DMA
                                channel DMA0IFG */
   1197    000000              #define DMA1TSEL_31         (31*0x0100u) /* DMA
                                channel 1 transfer select 31: ext. Trigger
                                (DMAE0) */
   1198    000000              
   1199    000000              #define DMA2TSEL_0          (0*0x0001u)  /* DMA
                                channel 2 transfer select 0:  DMA_REQ (sw)
                                */
   1200    000000              #define DMA2TSEL_1          (1*0x0001u)  /* DMA
                                channel 2 transfer select 1:  Timer0_A
                                (TA0CCR0.IFG) */
   1201    000000              #define DMA2TSEL_2          (2*0x0001u)  /* DMA
                                channel 2 transfer select 2:  Timer0_A
                                (TA0CCR2.IFG) */
   1202    000000              #define DMA2TSEL_3          (3*0x0001u)  /* DMA
                                channel 2 transfer select 3:  Timer1_A
                                (TA1CCR0.IFG) */
   1203    000000              #define DMA2TSEL_4          (4*0x0001u)  /* DMA
                                channel 2 transfer select 4:  Timer1_A
                                (TA1CCR2.IFG) */
   1204    000000              #define DMA2TSEL_5          (5*0x0001u)  /* DMA
                                channel 2 transfer select 5:  Timer2_A
                                (TA2CCR0.IFG) */
   1205    000000              #define DMA2TSEL_6          (6*0x0001u)  /* DMA
                                channel 2 transfer select 6:  Timer2_A
                                (TA2CCR2.IFG) */
   1206    000000              #define DMA2TSEL_7          (7*0x0001u)  /* DMA
                                channel 2 transfer select 7:  TimerB (TB0CCR0.I
                               FG) */
   1207    000000              #define DMA2TSEL_8          (8*0x0001u)  /* DMA
                                channel 2 transfer select 8:  TimerB (TB0CCR2.I
                               FG) */
   1208    000000              #define DMA2TSEL_9          (9*0x0001u)  /* DMA
                                channel 2 transfer select 9:  Reserved
                                */
   1209    000000              #define DMA2TSEL_10         (10*0x0001u) /* DMA
                                channel 2 transfer select 10: Reserved
                                */
   1210    000000              #define DMA2TSEL_11         (11*0x0001u) /* DMA
                                channel 2 transfer select 11: Reserved
                                */
   1211    000000              #define DMA2TSEL_12         (12*0x0001u) /* DMA
                                channel 2 transfer select 12: Reserved
                                */
   1212    000000              #define DMA2TSEL_13         (13*0x0001u) /* DMA
                                channel 2 transfer select 13: Reserved
                                */
   1213    000000              #define DMA2TSEL_14         (14*0x0001u) /* DMA
                                channel 2 transfer select 14: Reserved
                                */
   1214    000000              #define DMA2TSEL_15         (15*0x0001u) /* DMA
                                channel 2 transfer select 15: Reserved
                                */
   1215    000000              #define DMA2TSEL_16         (16*0x0001u) /* DMA
                                channel 2 transfer select 16: USCIA0 receive
                                */
   1216    000000              #define DMA2TSEL_17         (17*0x0001u) /* DMA
                                channel 2 transfer select 17: USCIA0 transmit
                                */
   1217    000000              #define DMA2TSEL_18         (18*0x0001u) /* DMA
                                channel 2 transfer select 18: USCIB0 receive
                                */
   1218    000000              #define DMA2TSEL_19         (19*0x0001u) /* DMA
                                channel 2 transfer select 19: USCIB0 transmit
                                */
   1219    000000              #define DMA2TSEL_20         (20*0x0001u) /* DMA
                                channel 2 transfer select 20: USCIA1 receive
                                */
   1220    000000              #define DMA2TSEL_21         (21*0x0001u) /* DMA
                                channel 2 transfer select 21: USCIA1 transmit
                                */
   1221    000000              #define DMA2TSEL_22         (22*0x0001u) /* DMA
                                channel 2 transfer select 22: USCIB1 receive
                                */
   1222    000000              #define DMA2TSEL_23         (23*0x0001u) /* DMA
                                channel 2 transfer select 23: USCIB1 transmit
                                */
   1223    000000              #define DMA2TSEL_24         (24*0x0001u) /* DMA
                                channel 2 transfer select 24: ADC12IFGx
                                */
   1224    000000              #define DMA2TSEL_25         (25*0x0001u) /* DMA
                                channel 2 transfer select 25: Reserved
                                */
   1225    000000              #define DMA2TSEL_26         (26*0x0001u) /* DMA
                                channel 2 transfer select 26: Reserved
                                */
   1226    000000              #define DMA2TSEL_27         (27*0x0001u) /* DMA
                                channel 2 transfer select 27: USB FNRXD
                                */
   1227    000000              #define DMA2TSEL_28         (28*0x0001u) /* DMA
                                channel 2 transfer select 28: USB ready
                                */
   1228    000000              #define DMA2TSEL_29         (29*0x0001u) /* DMA
                                channel 2 transfer select 29: Multiplier ready
                                */
   1229    000000              #define DMA2TSEL_30         (30*0x0001u) /* DMA
                                channel 2 transfer select 30: previous DMA
                                channel DMA1IFG */
   1230    000000              #define DMA2TSEL_31         (31*0x0001u) /* DMA
                                channel 2 transfer select 31: ext. Trigger
                                (DMAE0) */
   1231    000000              
   1232    000000              #define DMA0TSEL__DMA_REQ   (0*0x0001u)  /* DMA
                                channel 0 transfer select 0:  DMA_REQ (sw)
                                */
   1233    000000              #define DMA0TSEL__TA0CCR0   (1*0x0001u)  /* DMA
                                channel 0 transfer select 1:  Timer0_A
                                (TA0CCR0.IFG) */
   1234    000000              #define DMA0TSEL__TA0CCR2   (2*0x0001u)  /* DMA
                                channel 0 transfer select 2:  Timer0_A
                                (TA0CCR2.IFG) */
   1235    000000              #define DMA0TSEL__TA1CCR0   (3*0x0001u)  /* DMA
                                channel 0 transfer select 3:  Timer1_A
                                (TA1CCR0.IFG) */
   1236    000000              #define DMA0TSEL__TA1CCR2   (4*0x0001u)  /* DMA
                                channel 0 transfer select 4:  Timer1_A
                                (TA1CCR2.IFG) */
   1237    000000              #define DMA0TSEL__TA2CCR0   (5*0x0001u)  /* DMA
                                channel 0 transfer select 5:  Timer2_A
                                (TA2CCR0.IFG) */
   1238    000000              #define DMA0TSEL__TA2CCR2   (6*0x0001u)  /* DMA
                                channel 0 transfer select 6:  Timer2_A
                                (TA2CCR2.IFG) */
   1239    000000              #define DMA0TSEL__TB0CCR0   (7*0x0001u)  /* DMA
                                channel 0 transfer select 7:  TimerB (TB0CCR0.I
                               FG) */
   1240    000000              #define DMA0TSEL__TB0CCR2   (8*0x0001u)  /* DMA
                                channel 0 transfer select 8:  TimerB (TB0CCR2.I
                               FG) */
   1241    000000              #define DMA0TSEL__RES9      (9*0x0001u)  /* DMA
                                channel 0 transfer select 9:  Reserved
                                */
   1242    000000              #define DMA0TSEL__RES10     (10*0x0001u) /* DMA
                                channel 0 transfer select 10: Reserved
                                */
   1243    000000              #define DMA0TSEL__RES11     (11*0x0001u) /* DMA
                                channel 0 transfer select 11: Reserved
                                */
   1244    000000              #define DMA0TSEL__RES12     (12*0x0001u) /* DMA
                                channel 0 transfer select 12: Reserved
                                */
   1245    000000              #define DMA0TSEL__RES13     (13*0x0001u) /* DMA
                                channel 0 transfer select 13: Reserved
                                */
   1246    000000              #define DMA0TSEL__RES14     (14*0x0001u) /* DMA
                                channel 0 transfer select 14: Reserved
                                */
   1247    000000              #define DMA0TSEL__RES15     (15*0x0001u) /* DMA
                                channel 0 transfer select 15: Reserved
                                */
   1248    000000              #define DMA0TSEL__USCIA0RX  (16*0x0001u) /* DMA
                                channel 0 transfer select 16: USCIA0 receive
                                */
   1249    000000              #define DMA0TSEL__USCIA0TX  (17*0x0001u) /* DMA
                                channel 0 transfer select 17: USCIA0 transmit
                                */
   1250    000000              #define DMA0TSEL__USCIB0RX  (18*0x0001u) /* DMA
                                channel 0 transfer select 18: USCIB0 receive
                                */
   1251    000000              #define DMA0TSEL__USCIB0TX  (19*0x0001u) /* DMA
                                channel 0 transfer select 19: USCIB0 transmit
                                */
   1252    000000              #define DMA0TSEL__USCIA1RX  (20*0x0001u) /* DMA
                                channel 0 transfer select 20: USCIA1 receive
                                */
   1253    000000              #define DMA0TSEL__USCIA1TX  (21*0x0001u) /* DMA
                                channel 0 transfer select 21: USCIA1 transmit
                                */
   1254    000000              #define DMA0TSEL__USCIB1RX  (22*0x0001u) /* DMA
                                channel 0 transfer select 22: USCIB1 receive
                                */
   1255    000000              #define DMA0TSEL__USCIB1TX  (23*0x0001u) /* DMA
                                channel 0 transfer select 23: USCIB1 transmit
                                */
   1256    000000              #define DMA0TSEL__ADC12IFG  (24*0x0001u) /* DMA
                                channel 0 transfer select 24: ADC12IFGx
                                */
   1257    000000              #define DMA0TSEL__RES25     (25*0x0001u) /* DMA
                                channel 0 transfer select 25: Reserved
                                */
   1258    000000              #define DMA0TSEL__RES26     (26*0x0001u) /* DMA
                                channel 0 transfer select 26: Reserved
                                */
   1259    000000              #define DMA0TSEL__USB_FNRXD (27*0x0001u) /* DMA
                                channel 0 transfer select 27: USB FNRXD
                                */
   1260    000000              #define DMA0TSEL__USB_READY (28*0x0001u) /* DMA
                                channel 0 transfer select 28: USB ready
                                */
   1261    000000              #define DMA0TSEL__MPY       (29*0x0001u) /* DMA
                                channel 0 transfer select 29: Multiplier ready
                                */
   1262    000000              #define DMA0TSEL__DMA2IFG   (30*0x0001u) /* DMA
                                channel 0 transfer select 30: previous DMA
                                channel DMA2IFG */
   1263    000000              #define DMA0TSEL__DMAE0     (31*0x0001u) /* DMA
                                channel 0 transfer select 31: ext. Trigger
                                (DMAE0) */
   1264    000000              
   1265    000000              #define DMA1TSEL__DMA_REQ   (0*0x0100u)  /* DMA
                                channel 1 transfer select 0:  DMA_REQ (sw)
                                */
   1266    000000              #define DMA1TSEL__TA0CCR0   (1*0x0100u)  /* DMA
                                channel 1 transfer select 1:  Timer0_A
                                (TA0CCR0.IFG) */
   1267    000000              #define DMA1TSEL__TA0CCR2   (2*0x0100u)  /* DMA
                                channel 1 transfer select 2:  Timer0_A
                                (TA0CCR2.IFG) */
   1268    000000              #define DMA1TSEL__TA1CCR0   (3*0x0100u)  /* DMA
                                channel 1 transfer select 3:  Timer1_A
                                (TA1CCR0.IFG) */
   1269    000000              #define DMA1TSEL__TA1CCR2   (4*0x0100u)  /* DMA
                                channel 1 transfer select 4:  Timer1_A
                                (TA1CCR2.IFG) */
   1270    000000              #define DMA1TSEL__TA2CCR0   (5*0x0100u)  /* DMA
                                channel 1 transfer select 5:  Timer2_A
                                (TA2CCR0.IFG) */
   1271    000000              #define DMA1TSEL__TA2CCR2   (6*0x0100u)  /* DMA
                                channel 1 transfer select 6:  Timer2_A
                                (TA2CCR2.IFG) */
   1272    000000              #define DMA1TSEL__TB0CCR0   (7*0x0100u)  /* DMA
                                channel 1 transfer select 7:  TimerB (TB0CCR0.I
                               FG) */
   1273    000000              #define DMA1TSEL__TB0CCR2   (8*0x0100u)  /* DMA
                                channel 1 transfer select 8:  TimerB (TB0CCR2.I
                               FG) */
   1274    000000              #define DMA1TSEL__RES9      (9*0x0100u)  /* DMA
                                channel 1 transfer select 9:  Reserved
                                */
   1275    000000              #define DMA1TSEL__RES10     (10*0x0100u) /* DMA
                                channel 1 transfer select 10: Reserved
                                */
   1276    000000              #define DMA1TSEL__RES11     (11*0x0100u) /* DMA
                                channel 1 transfer select 11: Reserved
                                */
   1277    000000              #define DMA1TSEL__RES12     (12*0x0100u) /* DMA
                                channel 1 transfer select 12: Reserved
                                */
   1278    000000              #define DMA1TSEL__RES13     (13*0x0100u) /* DMA
                                channel 1 transfer select 13: Reserved
                                */
   1279    000000              #define DMA1TSEL__RES14     (14*0x0100u) /* DMA
                                channel 1 transfer select 14: Reserved
                                */
   1280    000000              #define DMA1TSEL__RES15     (15*0x0100u) /* DMA
                                channel 1 transfer select 15: Reserved
                                */
   1281    000000              #define DMA1TSEL__USCIA0RX  (16*0x0100u) /* DMA
                                channel 1 transfer select 16: USCIA0 receive
                                */
   1282    000000              #define DMA1TSEL__USCIA0TX  (17*0x0100u) /* DMA
                                channel 1 transfer select 17: USCIA0 transmit
                                */
   1283    000000              #define DMA1TSEL__USCIB0RX  (18*0x0100u) /* DMA
                                channel 1 transfer select 18: USCIB0 receive
                                */
   1284    000000              #define DMA1TSEL__USCIB0TX  (19*0x0100u) /* DMA
                                channel 1 transfer select 19: USCIB0 transmit
                                */
   1285    000000              #define DMA1TSEL__USCIA1RX  (20*0x0100u) /* DMA
                                channel 1 transfer select 20: USCIA1 receive
                                */
   1286    000000              #define DMA1TSEL__USCIA1TX  (21*0x0100u) /* DMA
                                channel 1 transfer select 21: USCIA1 transmit
                                */
   1287    000000              #define DMA1TSEL__USCIB1RX  (22*0x0100u) /* DMA
                                channel 1 transfer select 22: USCIB1 receive
                                */
   1288    000000              #define DMA1TSEL__USCIB1TX  (23*0x0100u) /* DMA
                                channel 1 transfer select 23: USCIB1 transmit
                                */
   1289    000000              #define DMA1TSEL__ADC12IFG  (24*0x0100u) /* DMA
                                channel 1 transfer select 24: ADC12IFGx
                                */
   1290    000000              #define DMA1TSEL__RES25     (25*0x0100u) /* DMA
                                channel 1 transfer select 25: Reserved
                                */
   1291    000000              #define DMA1TSEL__RES26     (26*0x0100u) /* DMA
                                channel 1 transfer select 26: Reserved
                                */
   1292    000000              #define DMA1TSEL__USB_FNRXD (27*0x0100u) /* DMA
                                channel 1 transfer select 27: USB FNRXD
                                */
   1293    000000              #define DMA1TSEL__USB_READY (28*0x0100u) /* DMA
                                channel 1 transfer select 28: USB ready
                                */
   1294    000000              #define DMA1TSEL__MPY       (29*0x0100u) /* DMA
                                channel 1 transfer select 29: Multiplier ready
                                */
   1295    000000              #define DMA1TSEL__DMA0IFG   (30*0x0100u) /* DMA
                                channel 1 transfer select 30: previous DMA
                                channel DMA0IFG */
   1296    000000              #define DMA1TSEL__DMAE0     (31*0x0100u) /* DMA
                                channel 1 transfer select 31: ext. Trigger
                                (DMAE0) */
   1297    000000              
   1298    000000              #define DMA2TSEL__DMA_REQ   (0*0x0001u)  /* DMA
                                channel 2 transfer select 0:  DMA_REQ (sw)
                                */
   1299    000000              #define DMA2TSEL__TA0CCR0   (1*0x0001u)  /* DMA
                                channel 2 transfer select 1:  Timer0_A
                                (TA0CCR0.IFG) */
   1300    000000              #define DMA2TSEL__TA0CCR2   (2*0x0001u)  /* DMA
                                channel 2 transfer select 2:  Timer0_A
                                (TA0CCR2.IFG) */
   1301    000000              #define DMA2TSEL__TA1CCR0   (3*0x0001u)  /* DMA
                                channel 2 transfer select 3:  Timer1_A
                                (TA1CCR0.IFG) */
   1302    000000              #define DMA2TSEL__TA1CCR2   (4*0x0001u)  /* DMA
                                channel 2 transfer select 4:  Timer1_A
                                (TA1CCR2.IFG) */
   1303    000000              #define DMA2TSEL__TA2CCR0   (5*0x0001u)  /* DMA
                                channel 2 transfer select 5:  Timer2_A
                                (TA2CCR0.IFG) */
   1304    000000              #define DMA2TSEL__TA2CCR2   (6*0x0001u)  /* DMA
                                channel 2 transfer select 6:  Timer2_A
                                (TA2CCR2.IFG) */
   1305    000000              #define DMA2TSEL__TB0CCR0   (7*0x0001u)  /* DMA
                                channel 2 transfer select 7:  TimerB (TB0CCR0.I
                               FG) */
   1306    000000              #define DMA2TSEL__TB0CCR2   (8*0x0001u)  /* DMA
                                channel 2 transfer select 8:  TimerB (TB0CCR2.I
                               FG) */
   1307    000000              #define DMA2TSEL__RES9      (9*0x0001u)  /* DMA
                                channel 2 transfer select 9:  Reserved
                                */
   1308    000000              #define DMA2TSEL__RES10     (10*0x0001u) /* DMA
                                channel 2 transfer select 10: Reserved
                                */
   1309    000000              #define DMA2TSEL__RES11     (11*0x0001u) /* DMA
                                channel 2 transfer select 11: Reserved
                                */
   1310    000000              #define DMA2TSEL__RES12     (12*0x0001u) /* DMA
                                channel 2 transfer select 12: Reserved
                                */
   1311    000000              #define DMA2TSEL__RES13     (13*0x0001u) /* DMA
                                channel 2 transfer select 13: Reserved
                                */
   1312    000000              #define DMA2TSEL__RES14     (14*0x0001u) /* DMA
                                channel 2 transfer select 14: Reserved
                                */
   1313    000000              #define DMA2TSEL__RES15     (15*0x0001u) /* DMA
                                channel 2 transfer select 15: Reserved
                                */
   1314    000000              #define DMA2TSEL__USCIA0RX  (16*0x0001u) /* DMA
                                channel 2 transfer select 16: USCIA0 receive
                                */
   1315    000000              #define DMA2TSEL__USCIA0TX  (17*0x0001u) /* DMA
                                channel 2 transfer select 17: USCIA0 transmit
                                */
   1316    000000              #define DMA2TSEL__USCIB0RX  (18*0x0001u) /* DMA
                                channel 2 transfer select 18: USCIB0 receive
                                */
   1317    000000              #define DMA2TSEL__USCIB0TX  (19*0x0001u) /* DMA
                                channel 2 transfer select 19: USCIB0 transmit
                                */
   1318    000000              #define DMA2TSEL__USCIA1RX  (20*0x0001u) /* DMA
                                channel 2 transfer select 20: USCIA1 receive
                                */
   1319    000000              #define DMA2TSEL__USCIA1TX  (21*0x0001u) /* DMA
                                channel 2 transfer select 21: USCIA1 transmit
                                */
   1320    000000              #define DMA2TSEL__USCIB1RX  (22*0x0001u) /* DMA
                                channel 2 transfer select 22: USCIB1 receive
                                */
   1321    000000              #define DMA2TSEL__USCIB1TX  (23*0x0001u) /* DMA
                                channel 2 transfer select 23: USCIB1 transmit
                                */
   1322    000000              #define DMA2TSEL__ADC12IFG  (24*0x0001u) /* DMA
                                channel 2 transfer select 24: ADC12IFGx
                                */
   1323    000000              #define DMA2TSEL__RES25     (25*0x0001u) /* DMA
                                channel 2 transfer select 25: Reserved
                                */
   1324    000000              #define DMA2TSEL__RES26     (26*0x0001u) /* DMA
                                channel 2 transfer select 26: Reserved
                                */
   1325    000000              #define DMA2TSEL__USB_FNRXD (27*0x0001u) /* DMA
                                channel 2 transfer select 27: USB FNRXD
                                */
   1326    000000              #define DMA2TSEL__USB_READY (28*0x0001u) /* DMA
                                channel 2 transfer select 28: USB ready
                                */
   1327    000000              #define DMA2TSEL__MPY       (29*0x0001u) /* DMA
                                channel 2 transfer select 29: Multiplier ready
                                */
   1328    000000              #define DMA2TSEL__DMA1IFG   (30*0x0001u) /* DMA
                                channel 2 transfer select 30: previous DMA
                                channel DMA1IFG */
   1329    000000              #define DMA2TSEL__DMAE0     (31*0x0001u) /* DMA
                                channel 2 transfer select 31: ext. Trigger
                                (DMAE0) */
   1330    000000              
   1331    000000              /***********************************************
                               **************
   1332    000000              * Flash Memory
   1333    000000              ************************************************
                               *************/
   1334    000000              #define __MSP430_HAS_FLASH__         /*
                                Definition to show that Module is available
                                */
   1335    000000              #define __MSP430_BASEADDRESS_FLASH__ 0x0140
   1336    000000              
   1337    000000              #define  FCTL1_              (0x0140u)  /* FLASH
                                Control 1 */
   1338    000000              DEFCW(   FCTL1             , FCTL1_)
   1338.1  000000              sfrb FCTL1_L = (0x0140u);
   1338.2  000000              sfrb FCTL1_H = (0x0140u)+1;
   1338.3  000000              sfrw FCTL1   = (0x0140u);
   1338.4  000000                    endm
   1339    000000              //sfrbw    FCTL2               (0x0142)  /*
                                FLASH Control 2 */
   1340    000000              #define  FCTL3_              (0x0144u)  /* FLASH
                                Control 3 */
   1341    000000              DEFCW(   FCTL3             , FCTL3_)
   1341.1  000000              sfrb FCTL3_L = (0x0144u);
   1341.2  000000              sfrb FCTL3_H = (0x0144u)+1;
   1341.3  000000              sfrw FCTL3   = (0x0144u);
   1341.4  000000                    endm
   1342    000000              #define  FCTL4_              (0x0146u)  /* FLASH
                                Control 4 */
   1343    000000              DEFCW(   FCTL4             , FCTL4_)
   1343.1  000000              sfrb FCTL4_L = (0x0146u);
   1343.2  000000              sfrb FCTL4_H = (0x0146u)+1;
   1343.3  000000              sfrw FCTL4   = (0x0146u);
   1343.4  000000                    endm
   1344    000000              
   1345    000000              #define FRPW                (0x9600u)  /* Flash
                                password returned by read */
   1346    000000              #define FWPW                (0xA500u)  /* Flash
                                password for write */
   1347    000000              #define FXPW                (0x3300u)  /* for
                                use with XOR instruction */
   1348    000000              #define FRKEY               (0x9600u)  /*
                                (legacy definition) Flash key returned by read
                                */
   1349    000000              #define FWKEY               (0xA500u)  /*
                                (legacy definition) Flash key for write
                                */
   1350    000000              #define FXKEY               (0x3300u)  /*
                                (legacy definition) for use with XOR instructio
                               n */
   1351    000000              
   1352    000000              /* FCTL1 Control Bits */
   1353    000000              //#define RESERVED            (0x0001u)  /*
                                Reserved */
   1354    000000              #define ERASE               (0x0002u)  /* Enable
                                bit for Flash segment erase */
   1355    000000              #define MERAS               (0x0004u)  /* Enable
                                bit for Flash mass erase */
   1356    000000              //#define RESERVED            (0x0008u)  /*
                                Reserved */
   1357    000000              //#define RESERVED            (0x0010u)  /*
                                Reserved */
   1358    000000              #define SWRT                (0x0020u)  /* Smart
                                Write enable */
   1359    000000              #define WRT                 (0x0040u)  /* Enable
                                bit for Flash write */
   1360    000000              #define BLKWRT              (0x0080u)  /* Enable
                                bit for Flash segment write */
   1361    000000              
   1362    000000              /* FCTL1 Control Bits */
   1363    000000              //#define RESERVED            (0x0001u)  /*
                                Reserved */
   1364    000000              #define ERASE_L             (0x0002u)  /* Enable
                                bit for Flash segment erase */
   1365    000000              #define MERAS_L             (0x0004u)  /* Enable
                                bit for Flash mass erase */
   1366    000000              //#define RESERVED            (0x0008u)  /*
                                Reserved */
   1367    000000              //#define RESERVED            (0x0010u)  /*
                                Reserved */
   1368    000000              #define SWRT_L              (0x0020u)  /* Smart
                                Write enable */
   1369    000000              #define WRT_L               (0x0040u)  /* Enable
                                bit for Flash write */
   1370    000000              #define BLKWRT_L            (0x0080u)  /* Enable
                                bit for Flash segment write */
   1371    000000              
   1372    000000              /* FCTL1 Control Bits */
   1373    000000              //#define RESERVED            (0x0001u)  /*
                                Reserved */
   1374    000000              //#define RESERVED            (0x0008u)  /*
                                Reserved */
   1375    000000              //#define RESERVED            (0x0010u)  /*
                                Reserved */
   1376    000000              
   1377    000000              /* FCTL3 Control Bits */
   1378    000000              #define BUSY                (0x0001u)  /* Flash
                                busy: 1 */
   1379    000000              #define KEYV                (0x0002u)  /* Flash
                                Key violation flag */
   1380    000000              #define ACCVIFG             (0x0004u)  /* Flash
                                Access violation flag */
   1381    000000              #define WAIT                (0x0008u)  /* Wait
                                flag for segment write */
   1382    000000              #define LOCK                (0x0010u)  /* Lock
                                bit: 1 - Flash is locked (read only) */
   1383    000000              #define EMEX                (0x0020u)  /* Flash
                                Emergency Exit */
   1384    000000              #define LOCKA               (0x0040u)  /*
                                Segment A Lock bit: read = 1 - Segment is
                                locked (read only) */
   1385    000000              //#define RESERVED            (0x0080u)  /*
                                Reserved */
   1386    000000              
   1387    000000              /* FCTL3 Control Bits */
   1388    000000              #define BUSY_L              (0x0001u)  /* Flash
                                busy: 1 */
   1389    000000              #define KEYV_L              (0x0002u)  /* Flash
                                Key violation flag */
   1390    000000              #define ACCVIFG_L           (0x0004u)  /* Flash
                                Access violation flag */
   1391    000000              #define WAIT_L              (0x0008u)  /* Wait
                                flag for segment write */
   1392    000000              #define LOCK_L              (0x0010u)  /* Lock
                                bit: 1 - Flash is locked (read only) */
   1393    000000              #define EMEX_L              (0x0020u)  /* Flash
                                Emergency Exit */
   1394    000000              #define LOCKA_L             (0x0040u)  /*
                                Segment A Lock bit: read = 1 - Segment is
                                locked (read only) */
   1395    000000              //#define RESERVED            (0x0080u)  /*
                                Reserved */
   1396    000000              
   1397    000000              /* FCTL3 Control Bits */
   1398    000000              //#define RESERVED            (0x0080u)  /*
                                Reserved */
   1399    000000              
   1400    000000              /* FCTL4 Control Bits */
   1401    000000              #define VPE                 (0x0001u)  /*
                                Voltage Changed during Program Error Flag
                                */
   1402    000000              #define MGR0                (0x0010u)  /*
                                Marginal read 0 mode. */
   1403    000000              #define MGR1                (0x0020u)  /*
                                Marginal read 1 mode. */
   1404    000000              #define LOCKINFO            (0x0080u)  /* Lock
                                INFO Memory bit: read = 1 - Segment is locked
                                (read only) */
   1405    000000              
   1406    000000              /* FCTL4 Control Bits */
   1407    000000              #define VPE_L               (0x0001u)  /*
                                Voltage Changed during Program Error Flag
                                */
   1408    000000              #define MGR0_L              (0x0010u)  /*
                                Marginal read 0 mode. */
   1409    000000              #define MGR1_L              (0x0020u)  /*
                                Marginal read 1 mode. */
   1410    000000              #define LOCKINFO_L          (0x0080u)  /* Lock
                                INFO Memory bit: read = 1 - Segment is locked
                                (read only) */
   1411    000000              
   1412    000000              /* FCTL4 Control Bits */
   1413    000000              
   1414    000000              /***********************************************
                               *************
   1415    000000              * HARDWARE MULTIPLIER 32Bit
   1416    000000              ************************************************
                               ************/
   1417    000000              #define __MSP430_HAS_MPY32__          /*
                                Definition to show that Module is available
                                */
   1418    000000              #define __MSP430_BASEADDRESS_MPY32__ 0x04C0
   1419    000000              
   1420    000000              #define  MPY_                (0x04C0u)  /*
                                Multiply Unsigned/Operand 1 */
   1421    000000              DEFCW(   MPY               , MPY_)
   1421.1  000000              sfrb MPY_L = (0x04C0u);
   1421.2  000000              sfrb MPY_H = (0x04C0u)+1;
   1421.3  000000              sfrw MPY   = (0x04C0u);
   1421.4  000000                    endm
   1422    000000              #define  MPYS_               (0x04C2u)  /*
                                Multiply Signed/Operand 1 */
   1423    000000              DEFCW(   MPYS              , MPYS_)
   1423.1  000000              sfrb MPYS_L = (0x04C2u);
   1423.2  000000              sfrb MPYS_H = (0x04C2u)+1;
   1423.3  000000              sfrw MPYS   = (0x04C2u);
   1423.4  000000                    endm
   1424    000000              #define  MAC_                (0x04C4u)  /*
                                Multiply Unsigned and Accumulate/Operand 1
                                */
   1425    000000              DEFCW(   MAC               , MAC_)
   1425.1  000000              sfrb MAC_L = (0x04C4u);
   1425.2  000000              sfrb MAC_H = (0x04C4u)+1;
   1425.3  000000              sfrw MAC   = (0x04C4u);
   1425.4  000000                    endm
   1426    000000              #define  MACS_               (0x04C6u)  /*
                                Multiply Signed and Accumulate/Operand 1
                                */
   1427    000000              DEFCW(   MACS              , MACS_)
   1427.1  000000              sfrb MACS_L = (0x04C6u);
   1427.2  000000              sfrb MACS_H = (0x04C6u)+1;
   1427.3  000000              sfrw MACS   = (0x04C6u);
   1427.4  000000                    endm
   1428    000000              #define  OP2_                (0x04C8u)  /*
                                Operand 2 */
   1429    000000              DEFCW(   OP2               , OP2_)
   1429.1  000000              sfrb OP2_L = (0x04C8u);
   1429.2  000000              sfrb OP2_H = (0x04C8u)+1;
   1429.3  000000              sfrw OP2   = (0x04C8u);
   1429.4  000000                    endm
   1430    000000              #define  RESLO_              (0x04CAu)  /*
                                Result Low Word */
   1431    000000              DEFCW(   RESLO             , RESLO_)
   1431.1  000000              sfrb RESLO_L = (0x04CAu);
   1431.2  000000              sfrb RESLO_H = (0x04CAu)+1;
   1431.3  000000              sfrw RESLO   = (0x04CAu);
   1431.4  000000                    endm
   1432    000000              #define  RESHI_              (0x04CCu)  /*
                                Result High Word */
   1433    000000              DEFCW(   RESHI             , RESHI_)
   1433.1  000000              sfrb RESHI_L = (0x04CCu);
   1433.2  000000              sfrb RESHI_H = (0x04CCu)+1;
   1433.3  000000              sfrw RESHI   = (0x04CCu);
   1433.4  000000                    endm
   1434    000000              #define SUMEXT_             (0x04CEu)  /* Sum
                                Extend */
   1435    000000              READ_ONLY_DEFCW( SUMEXT         , SUMEXT_)
   1435.1  000000              const sfrb SUMEXT_L = (0x04CEu);
   1435.2  000000              const sfrb SUMEXT_H = (0x04CEu)+1;
   1435.3  000000              const sfrw SUMEXT   = (0x04CEu);
   1435.4  000000                    endm
   1436    000000              
   1437    000000              #define  MPY32L_             (0x04D0u)  /*
                                32-bit operand 1 - multiply - low word
                                */
   1438    000000              DEFCW(   MPY32L            , MPY32L_)
   1438.1  000000              sfrb MPY32L_L = (0x04D0u);
   1438.2  000000              sfrb MPY32L_H = (0x04D0u)+1;
   1438.3  000000              sfrw MPY32L   = (0x04D0u);
   1438.4  000000                    endm
   1439    000000              #define  MPY32H_             (0x04D2u)  /*
                                32-bit operand 1 - multiply - high word
                                */
   1440    000000              DEFCW(   MPY32H            , MPY32H_)
   1440.1  000000              sfrb MPY32H_L = (0x04D2u);
   1440.2  000000              sfrb MPY32H_H = (0x04D2u)+1;
   1440.3  000000              sfrw MPY32H   = (0x04D2u);
   1440.4  000000                    endm
   1441    000000              #define  MPYS32L_            (0x04D4u)  /*
                                32-bit operand 1 - signed multiply - low word
                                */
   1442    000000              DEFCW(   MPYS32L           , MPYS32L_)
   1442.1  000000              sfrb MPYS32L_L = (0x04D4u);
   1442.2  000000              sfrb MPYS32L_H = (0x04D4u)+1;
   1442.3  000000              sfrw MPYS32L   = (0x04D4u);
   1442.4  000000                    endm
   1443    000000              #define  MPYS32H_            (0x04D6u)  /*
                                32-bit operand 1 - signed multiply - high word
                                */
   1444    000000              DEFCW(   MPYS32H           , MPYS32H_)
   1444.1  000000              sfrb MPYS32H_L = (0x04D6u);
   1444.2  000000              sfrb MPYS32H_H = (0x04D6u)+1;
   1444.3  000000              sfrw MPYS32H   = (0x04D6u);
   1444.4  000000                    endm
   1445    000000              #define  MAC32L_             (0x04D8u)  /*
                                32-bit operand 1 - multiply accumulate - low
                                word */
   1446    000000              DEFCW(   MAC32L            , MAC32L_)
   1446.1  000000              sfrb MAC32L_L = (0x04D8u);
   1446.2  000000              sfrb MAC32L_H = (0x04D8u)+1;
   1446.3  000000              sfrw MAC32L   = (0x04D8u);
   1446.4  000000                    endm
   1447    000000              #define  MAC32H_             (0x04DAu)  /*
                                32-bit operand 1 - multiply accumulate - high
                                word */
   1448    000000              DEFCW(   MAC32H            , MAC32H_)
   1448.1  000000              sfrb MAC32H_L = (0x04DAu);
   1448.2  000000              sfrb MAC32H_H = (0x04DAu)+1;
   1448.3  000000              sfrw MAC32H   = (0x04DAu);
   1448.4  000000                    endm
   1449    000000              #define  MACS32L_            (0x04DCu)  /*
                                32-bit operand 1 - signed multiply accumulate -
                                low word */
   1450    000000              DEFCW(   MACS32L           , MACS32L_)
   1450.1  000000              sfrb MACS32L_L = (0x04DCu);
   1450.2  000000              sfrb MACS32L_H = (0x04DCu)+1;
   1450.3  000000              sfrw MACS32L   = (0x04DCu);
   1450.4  000000                    endm
   1451    000000              #define  MACS32H_            (0x04DEu)  /*
                                32-bit operand 1 - signed multiply accumulate -
                                high word */
   1452    000000              DEFCW(   MACS32H           , MACS32H_)
   1452.1  000000              sfrb MACS32H_L = (0x04DEu);
   1452.2  000000              sfrb MACS32H_H = (0x04DEu)+1;
   1452.3  000000              sfrw MACS32H   = (0x04DEu);
   1452.4  000000                    endm
   1453    000000              #define  OP2L_               (0x04E0u)  /*
                                32-bit operand 2 - low word */
   1454    000000              DEFCW(   OP2L              , OP2L_)
   1454.1  000000              sfrb OP2L_L = (0x04E0u);
   1454.2  000000              sfrb OP2L_H = (0x04E0u)+1;
   1454.3  000000              sfrw OP2L   = (0x04E0u);
   1454.4  000000                    endm
   1455    000000              #define  OP2H_               (0x04E2u)  /*
                                32-bit operand 2 - high word */
   1456    000000              DEFCW(   OP2H              , OP2H_)
   1456.1  000000              sfrb OP2H_L = (0x04E2u);
   1456.2  000000              sfrb OP2H_H = (0x04E2u)+1;
   1456.3  000000              sfrw OP2H   = (0x04E2u);
   1456.4  000000                    endm
   1457    000000              #define  RES0_               (0x04E4u)  /*
                                32x32-bit result 0 - least significant word
                                */
   1458    000000              DEFCW(   RES0              , RES0_)
   1458.1  000000              sfrb RES0_L = (0x04E4u);
   1458.2  000000              sfrb RES0_H = (0x04E4u)+1;
   1458.3  000000              sfrw RES0   = (0x04E4u);
   1458.4  000000                    endm
   1459    000000              #define  RES1_               (0x04E6u)  /*
                                32x32-bit result 1 */
   1460    000000              DEFCW(   RES1              , RES1_)
   1460.1  000000              sfrb RES1_L = (0x04E6u);
   1460.2  000000              sfrb RES1_H = (0x04E6u)+1;
   1460.3  000000              sfrw RES1   = (0x04E6u);
   1460.4  000000                    endm
   1461    000000              #define  RES2_               (0x04E8u)  /*
                                32x32-bit result 2 */
   1462    000000              DEFCW(   RES2              , RES2_)
   1462.1  000000              sfrb RES2_L = (0x04E8u);
   1462.2  000000              sfrb RES2_H = (0x04E8u)+1;
   1462.3  000000              sfrw RES2   = (0x04E8u);
   1462.4  000000                    endm
   1463    000000              #define  RES3_               (0x04EAu)  /*
                                32x32-bit result 3 - most significant word
                                */
   1464    000000              DEFCW(   RES3              , RES3_)
   1464.1  000000              sfrb RES3_L = (0x04EAu);
   1464.2  000000              sfrb RES3_H = (0x04EAu)+1;
   1464.3  000000              sfrw RES3   = (0x04EAu);
   1464.4  000000                    endm
   1465    000000              #define  MPY32CTL0_          (0x04ECu)  /* MPY32
                                Control Register 0 */
   1466    000000              DEFCW(   MPY32CTL0         , MPY32CTL0_)
   1466.1  000000              sfrb MPY32CTL0_L = (0x04ECu);
   1466.2  000000              sfrb MPY32CTL0_H = (0x04ECu)+1;
   1466.3  000000              sfrw MPY32CTL0   = (0x04ECu);
   1466.4  000000                    endm
   1467    000000              
   1468    000000              #define MPY_B               MPY_L      /*
                                Multiply Unsigned/Operand 1 (Byte Access)
                                */
   1469    000000              #define MPYS_B              MPYS_L     /*
                                Multiply Signed/Operand 1 (Byte Access)
                                */
   1470    000000              #define MAC_B               MAC_L      /*
                                Multiply Unsigned and Accumulate/Operand 1
                                (Byte Access) */
   1471    000000              #define MACS_B              MACS_L     /*
                                Multiply Signed and Accumulate/Operand 1 (Byte
                                Access) */
   1472    000000              #define OP2_B               OP2_L      /*
                                Operand 2 (Byte Access) */
   1473    000000              #define MPY32L_B            MPY32L_L   /* 32-bit
                                operand 1 - multiply - low word (Byte Access)
                                */
   1474    000000              #define MPY32H_B            MPY32H_L   /* 32-bit
                                operand 1 - multiply - high word (Byte Access)
                                */
   1475    000000              #define MPYS32L_B           MPYS32L_L  /* 32-bit
                                operand 1 - signed multiply - low word (Byte
                                Access) */
   1476    000000              #define MPYS32H_B           MPYS32H_L  /* 32-bit
                                operand 1 - signed multiply - high word (Byte
                                Access) */
   1477    000000              #define MAC32L_B            MAC32L_L   /* 32-bit
                                operand 1 - multiply accumulate - low word
                                (Byte Access) */
   1478    000000              #define MAC32H_B            MAC32H_L   /* 32-bit
                                operand 1 - multiply accumulate - high word
                                (Byte Access) */
   1479    000000              #define MACS32L_B           MACS32L_L  /* 32-bit
                                operand 1 - signed multiply accumulate - low
                                word (Byte Access) */
   1480    000000              #define MACS32H_B           MACS32H_L  /* 32-bit
                                operand 1 - signed multiply accumulate - high
                                word (Byte Access) */
   1481    000000              #define OP2L_B              OP2L_L     /* 32-bit
                                operand 2 - low word (Byte Access) */
   1482    000000              #define OP2H_B              OP2H_L     /* 32-bit
                                operand 2 - high word (Byte Access) */
   1483    000000              
   1484    000000              /* MPY32CTL0 Control Bits */
   1485    000000              #define MPYC                (0x0001u)  /* Carry
                                of the multiplier */
   1486    000000              //#define RESERVED            (0x0002u)  /*
                                Reserved */
   1487    000000              #define MPYFRAC             (0x0004u)  /*
                                Fractional mode */
   1488    000000              #define MPYSAT              (0x0008u)  /*
                                Saturation mode */
   1489    000000              #define MPYM0               (0x0010u)  /*
                                Multiplier mode Bit:0 */
   1490    000000              #define MPYM1               (0x0020u)  /*
                                Multiplier mode Bit:1 */
   1491    000000              #define OP1_32              (0x0040u)  /*
                                Bit-width of operand 1 0:16Bit / 1:32Bit
                                */
   1492    000000              #define OP2_32              (0x0080u)  /*
                                Bit-width of operand 2 0:16Bit / 1:32Bit
                                */
   1493    000000              #define MPYDLYWRTEN         (0x0100u)  /*
                                Delayed write enable */
   1494    000000              #define MPYDLY32            (0x0200u)  /*
                                Delayed write mode */
   1495    000000              
   1496    000000              /* MPY32CTL0 Control Bits */
   1497    000000              #define MPYC_L              (0x0001u)  /* Carry
                                of the multiplier */
   1498    000000              //#define RESERVED            (0x0002u)  /*
                                Reserved */
   1499    000000              #define MPYFRAC_L           (0x0004u)  /*
                                Fractional mode */
   1500    000000              #define MPYSAT_L            (0x0008u)  /*
                                Saturation mode */
   1501    000000              #define MPYM0_L             (0x0010u)  /*
                                Multiplier mode Bit:0 */
   1502    000000              #define MPYM1_L             (0x0020u)  /*
                                Multiplier mode Bit:1 */
   1503    000000              #define OP1_32_L            (0x0040u)  /*
                                Bit-width of operand 1 0:16Bit / 1:32Bit
                                */
   1504    000000              #define OP2_32_L            (0x0080u)  /*
                                Bit-width of operand 2 0:16Bit / 1:32Bit
                                */
   1505    000000              
   1506    000000              /* MPY32CTL0 Control Bits */
   1507    000000              //#define RESERVED            (0x0002u)  /*
                                Reserved */
   1508    000000              #define MPYDLYWRTEN_H       (0x0001u)  /*
                                Delayed write enable */
   1509    000000              #define MPYDLY32_H          (0x0002u)  /*
                                Delayed write mode */
   1510    000000              
   1511    000000              #define MPYM_0              (0x0000u)  /*
                                Multiplier mode: MPY */
   1512    000000              #define MPYM_1              (0x0010u)  /*
                                Multiplier mode: MPYS */
   1513    000000              #define MPYM_2              (0x0020u)  /*
                                Multiplier mode: MAC */
   1514    000000              #define MPYM_3              (0x0030u)  /*
                                Multiplier mode: MACS */
   1515    000000              #define MPYM__MPY           (0x0000u)  /*
                                Multiplier mode: MPY */
   1516    000000              #define MPYM__MPYS          (0x0010u)  /*
                                Multiplier mode: MPYS */
   1517    000000              #define MPYM__MAC           (0x0020u)  /*
                                Multiplier mode: MAC */
   1518    000000              #define MPYM__MACS          (0x0030u)  /*
                                Multiplier mode: MACS */
   1519    000000              
   1520    000000              /***********************************************
                               *************
   1521    000000              * DIGITAL I/O Port1/2 Pull up / Pull down
                                Resistors
   1522    000000              ************************************************
                               ************/
   1523    000000              #define __MSP430_HAS_PORT1_R__        /*
                                Definition to show that Module is available
                                */
   1524    000000              #define __MSP430_BASEADDRESS_PORT1_R__
                                0x0200
   1525    000000              #define __MSP430_HAS_PORT2_R__        /*
                                Definition to show that Module is available
                                */
   1526    000000              #define __MSP430_BASEADDRESS_PORT2_R__
                                0x0200
   1527    000000              #define __MSP430_HAS_PORTA_R__        /*
                                Definition to show that Module is available
                                */
   1528    000000              #define __MSP430_BASEADDRESS_PORTA_R__
                                0x0200
   1529    000000              
   1530    000000              #define PAIN_               (0x0200u)  /* Port A
                                Input */
   1531    000000              READ_ONLY_DEFCW( PAIN           , PAIN_)
   1531.1  000000              const sfrb PAIN_L = (0x0200u);
   1531.2  000000              const sfrb PAIN_H = (0x0200u)+1;
   1531.3  000000              const sfrw PAIN   = (0x0200u);
   1531.4  000000                    endm
   1532    000000              #define  PAOUT_              (0x0202u)  /* Port
                                A Output */
   1533    000000              DEFCW(   PAOUT             , PAOUT_)
   1533.1  000000              sfrb PAOUT_L = (0x0202u);
   1533.2  000000              sfrb PAOUT_H = (0x0202u)+1;
   1533.3  000000              sfrw PAOUT   = (0x0202u);
   1533.4  000000                    endm
   1534    000000              #define  PADIR_              (0x0204u)  /* Port
                                A Direction */
   1535    000000              DEFCW(   PADIR             , PADIR_)
   1535.1  000000              sfrb PADIR_L = (0x0204u);
   1535.2  000000              sfrb PADIR_H = (0x0204u)+1;
   1535.3  000000              sfrw PADIR   = (0x0204u);
   1535.4  000000                    endm
   1536    000000              #define  PAREN_              (0x0206u)  /* Port
                                A Resistor Enable */
   1537    000000              DEFCW(   PAREN             , PAREN_)
   1537.1  000000              sfrb PAREN_L = (0x0206u);
   1537.2  000000              sfrb PAREN_H = (0x0206u)+1;
   1537.3  000000              sfrw PAREN   = (0x0206u);
   1537.4  000000                    endm
   1538    000000              #define  PADS_               (0x0208u)  /* Port
                                A Drive Strenght */
   1539    000000              DEFCW(   PADS              , PADS_)
   1539.1  000000              sfrb PADS_L = (0x0208u);
   1539.2  000000              sfrb PADS_H = (0x0208u)+1;
   1539.3  000000              sfrw PADS   = (0x0208u);
   1539.4  000000                    endm
   1540    000000              #define  PASEL_              (0x020Au)  /* Port
                                A Selection */
   1541    000000              DEFCW(   PASEL             , PASEL_)
   1541.1  000000              sfrb PASEL_L = (0x020Au);
   1541.2  000000              sfrb PASEL_H = (0x020Au)+1;
   1541.3  000000              sfrw PASEL   = (0x020Au);
   1541.4  000000                    endm
   1542    000000              #define  PAIES_              (0x0218u)  /* Port
                                A Interrupt Edge Select */
   1543    000000              DEFCW(   PAIES             , PAIES_)
   1543.1  000000              sfrb PAIES_L = (0x0218u);
   1543.2  000000              sfrb PAIES_H = (0x0218u)+1;
   1543.3  000000              sfrw PAIES   = (0x0218u);
   1543.4  000000                    endm
   1544    000000              #define  PAIE_               (0x021Au)  /* Port
                                A Interrupt Enable */
   1545    000000              DEFCW(   PAIE              , PAIE_)
   1545.1  000000              sfrb PAIE_L = (0x021Au);
   1545.2  000000              sfrb PAIE_H = (0x021Au)+1;
   1545.3  000000              sfrw PAIE   = (0x021Au);
   1545.4  000000                    endm
   1546    000000              #define  PAIFG_              (0x021Cu)  /* Port
                                A Interrupt Flag */
   1547    000000              DEFCW(   PAIFG             , PAIFG_)
   1547.1  000000              sfrb PAIFG_L = (0x021Cu);
   1547.2  000000              sfrb PAIFG_H = (0x021Cu)+1;
   1547.3  000000              sfrw PAIFG   = (0x021Cu);
   1547.4  000000                    endm
   1548    000000              
   1549    000000              
   1550    000000              #define P1IV_               (0x020Eu)  /* Port 1
                                Interrupt Vector Word */
   1551    000000              DEFW(   P1IV              , P1IV_)
   1552    000000              #define P2IV_               (0x021Eu)  /* Port 2
                                Interrupt Vector Word */
   1553    000000              DEFW(   P2IV              , P2IV_)
   1554    000000              #define P1IN                (PAIN_L)  /* Port 1
                                Input */
   1555    000000              #define P1OUT               (PAOUT_L) /* Port 1
                                Output */
   1556    000000              #define P1DIR               (PADIR_L) /* Port 1
                                Direction */
   1557    000000              #define P1REN               (PAREN_L) /* Port 1
                                Resistor Enable */
   1558    000000              #define P1DS                (PADS_L)  /* Port 1
                                Drive Strenght */
   1559    000000              #define P1SEL               (PASEL_L) /* Port 1
                                Selection */
   1560    000000              #define P1IES               (PAIES_L) /* Port 1
                                Interrupt Edge Select */
   1561    000000              #define P1IE                (PAIE_L)  /* Port 1
                                Interrupt Enable */
   1562    000000              #define P1IFG               (PAIFG_L) /* Port 1
                                Interrupt Flag */
   1563    000000              
   1564    000000              //Definitions for P1IV
   1565    000000              #define P1IV_NONE            (0x0000u)    /* No
                                Interrupt pending */
   1566    000000              #define P1IV_P1IFG0          (0x0002u)    /*
                                P1IV P1IFG.0 */
   1567    000000              #define P1IV_P1IFG1          (0x0004u)    /*
                                P1IV P1IFG.1 */
   1568    000000              #define P1IV_P1IFG2          (0x0006u)    /*
                                P1IV P1IFG.2 */
   1569    000000              #define P1IV_P1IFG3          (0x0008u)    /*
                                P1IV P1IFG.3 */
   1570    000000              #define P1IV_P1IFG4          (0x000Au)    /*
                                P1IV P1IFG.4 */
   1571    000000              #define P1IV_P1IFG5          (0x000Cu)    /*
                                P1IV P1IFG.5 */
   1572    000000              #define P1IV_P1IFG6          (0x000Eu)    /*
                                P1IV P1IFG.6 */
   1573    000000              #define P1IV_P1IFG7          (0x0010u)    /*
                                P1IV P1IFG.7 */
   1574    000000              
   1575    000000              #define P2IN                (PAIN_H)  /* Port 2
                                Input */
   1576    000000              #define P2OUT               (PAOUT_H) /* Port 2
                                Output */
   1577    000000              #define P2DIR               (PADIR_H) /* Port 2
                                Direction */
   1578    000000              #define P2REN               (PAREN_H) /* Port 2
                                Resistor Enable */
   1579    000000              #define P2DS                (PADS_H)  /* Port 2
                                Drive Strenght */
   1580    000000              #define P2SEL               (PASEL_H) /* Port 2
                                Selection */
   1581    000000              #define P2IES               (PAIES_H) /* Port 2
                                Interrupt Edge Select */
   1582    000000              #define P2IE                (PAIE_H)  /* Port 2
                                Interrupt Enable */
   1583    000000              #define P2IFG               (PAIFG_H) /* Port 2
                                Interrupt Flag */
   1584    000000              
   1585    000000              //Definitions for P2IV
   1586    000000              #define P2IV_NONE            (0x0000u)    /* No
                                Interrupt pending */
   1587    000000              #define P2IV_P2IFG0          (0x0002u)    /*
                                P2IV P2IFG.0 */
   1588    000000              #define P2IV_P2IFG1          (0x0004u)    /*
                                P2IV P2IFG.1 */
   1589    000000              #define P2IV_P2IFG2          (0x0006u)    /*
                                P2IV P2IFG.2 */
   1590    000000              #define P2IV_P2IFG3          (0x0008u)    /*
                                P2IV P2IFG.3 */
   1591    000000              #define P2IV_P2IFG4          (0x000Au)    /*
                                P2IV P2IFG.4 */
   1592    000000              #define P2IV_P2IFG5          (0x000Cu)    /*
                                P2IV P2IFG.5 */
   1593    000000              #define P2IV_P2IFG6          (0x000Eu)    /*
                                P2IV P2IFG.6 */
   1594    000000              #define P2IV_P2IFG7          (0x0010u)    /*
                                P2IV P2IFG.7 */
   1595    000000              
   1596    000000              
   1597    000000              /***********************************************
                               *************
   1598    000000              * DIGITAL I/O Port3/4 Pull up / Pull down
                                Resistors
   1599    000000              ************************************************
                               ************/
   1600    000000              #define __MSP430_HAS_PORT3_R__        /*
                                Definition to show that Module is available
                                */
   1601    000000              #define __MSP430_BASEADDRESS_PORT3_R__
                                0x0220
   1602    000000              #define __MSP430_HAS_PORT4_R__        /*
                                Definition to show that Module is available
                                */
   1603    000000              #define __MSP430_BASEADDRESS_PORT4_R__
                                0x0220
   1604    000000              #define __MSP430_HAS_PORTB_R__        /*
                                Definition to show that Module is available
                                */
   1605    000000              #define __MSP430_BASEADDRESS_PORTB_R__
                                0x0220
   1606    000000              
   1607    000000              #define PBIN_               (0x0220u)  /* Port B
                                Input */
   1608    000000              READ_ONLY_DEFCW( PBIN           , PBIN_)
   1608.1  000000              const sfrb PBIN_L = (0x0220u);
   1608.2  000000              const sfrb PBIN_H = (0x0220u)+1;
   1608.3  000000              const sfrw PBIN   = (0x0220u);
   1608.4  000000                    endm
   1609    000000              #define  PBOUT_              (0x0222u)  /* Port
                                B Output */
   1610    000000              DEFCW(   PBOUT             , PBOUT_)
   1610.1  000000              sfrb PBOUT_L = (0x0222u);
   1610.2  000000              sfrb PBOUT_H = (0x0222u)+1;
   1610.3  000000              sfrw PBOUT   = (0x0222u);
   1610.4  000000                    endm
   1611    000000              #define  PBDIR_              (0x0224u)  /* Port
                                B Direction */
   1612    000000              DEFCW(   PBDIR             , PBDIR_)
   1612.1  000000              sfrb PBDIR_L = (0x0224u);
   1612.2  000000              sfrb PBDIR_H = (0x0224u)+1;
   1612.3  000000              sfrw PBDIR   = (0x0224u);
   1612.4  000000                    endm
   1613    000000              #define  PBREN_              (0x0226u)  /* Port
                                B Resistor Enable */
   1614    000000              DEFCW(   PBREN             , PBREN_)
   1614.1  000000              sfrb PBREN_L = (0x0226u);
   1614.2  000000              sfrb PBREN_H = (0x0226u)+1;
   1614.3  000000              sfrw PBREN   = (0x0226u);
   1614.4  000000                    endm
   1615    000000              #define  PBDS_               (0x0228u)  /* Port
                                B Drive Strenght */
   1616    000000              DEFCW(   PBDS              , PBDS_)
   1616.1  000000              sfrb PBDS_L = (0x0228u);
   1616.2  000000              sfrb PBDS_H = (0x0228u)+1;
   1616.3  000000              sfrw PBDS   = (0x0228u);
   1616.4  000000                    endm
   1617    000000              #define  PBSEL_              (0x022Au)  /* Port
                                B Selection */
   1618    000000              DEFCW(   PBSEL             , PBSEL_)
   1618.1  000000              sfrb PBSEL_L = (0x022Au);
   1618.2  000000              sfrb PBSEL_H = (0x022Au)+1;
   1618.3  000000              sfrw PBSEL   = (0x022Au);
   1618.4  000000                    endm
   1619    000000              
   1620    000000              
   1621    000000              #define P3IN                (PBIN_L)  /* Port 3
                                Input */
   1622    000000              #define P3OUT               (PBOUT_L) /* Port 3
                                Output */
   1623    000000              #define P3DIR               (PBDIR_L) /* Port 3
                                Direction */
   1624    000000              #define P3REN               (PBREN_L) /* Port 3
                                Resistor Enable */
   1625    000000              #define P3DS                (PBDS_L)  /* Port 3
                                Drive Strenght */
   1626    000000              #define P3SEL               (PBSEL_L) /* Port 3
                                Selection */
   1627    000000              
   1628    000000              #define P4IN                (PBIN_H)  /* Port 4
                                Input */
   1629    000000              #define P4OUT               (PBOUT_H) /* Port 4
                                Output */
   1630    000000              #define P4DIR               (PBDIR_H) /* Port 4
                                Direction */
   1631    000000              #define P4REN               (PBREN_H) /* Port 4
                                Resistor Enable */
   1632    000000              #define P4DS                (PBDS_H)  /* Port 4
                                Drive Strenght */
   1633    000000              #define P4SEL               (PBSEL_H) /* Port 4
                                Selection */
   1634    000000              
   1635    000000              
   1636    000000              /***********************************************
                               *************
   1637    000000              * DIGITAL I/O Port5/6 Pull up / Pull down
                                Resistors
   1638    000000              ************************************************
                               ************/
   1639    000000              #define __MSP430_HAS_PORT5_R__        /*
                                Definition to show that Module is available
                                */
   1640    000000              #define __MSP430_BASEADDRESS_PORT5_R__
                                0x0240
   1641    000000              #define __MSP430_HAS_PORT6_R__        /*
                                Definition to show that Module is available
                                */
   1642    000000              #define __MSP430_BASEADDRESS_PORT6_R__
                                0x0240
   1643    000000              #define __MSP430_HAS_PORTC_R__        /*
                                Definition to show that Module is available
                                */
   1644    000000              #define __MSP430_BASEADDRESS_PORTC_R__
                                0x0240
   1645    000000              
   1646    000000              #define PCIN_               (0x0240u)  /* Port C
                                Input */
   1647    000000              READ_ONLY_DEFCW( PCIN           , PCIN_)
   1647.1  000000              const sfrb PCIN_L = (0x0240u);
   1647.2  000000              const sfrb PCIN_H = (0x0240u)+1;
   1647.3  000000              const sfrw PCIN   = (0x0240u);
   1647.4  000000                    endm
   1648    000000              #define  PCOUT_              (0x0242u)  /* Port
                                C Output */
   1649    000000              DEFCW(   PCOUT             , PCOUT_)
   1649.1  000000              sfrb PCOUT_L = (0x0242u);
   1649.2  000000              sfrb PCOUT_H = (0x0242u)+1;
   1649.3  000000              sfrw PCOUT   = (0x0242u);
   1649.4  000000                    endm
   1650    000000              #define  PCDIR_              (0x0244u)  /* Port
                                C Direction */
   1651    000000              DEFCW(   PCDIR             , PCDIR_)
   1651.1  000000              sfrb PCDIR_L = (0x0244u);
   1651.2  000000              sfrb PCDIR_H = (0x0244u)+1;
   1651.3  000000              sfrw PCDIR   = (0x0244u);
   1651.4  000000                    endm
   1652    000000              #define  PCREN_              (0x0246u)  /* Port
                                C Resistor Enable */
   1653    000000              DEFCW(   PCREN             , PCREN_)
   1653.1  000000              sfrb PCREN_L = (0x0246u);
   1653.2  000000              sfrb PCREN_H = (0x0246u)+1;
   1653.3  000000              sfrw PCREN   = (0x0246u);
   1653.4  000000                    endm
   1654    000000              #define  PCDS_               (0x0248u)  /* Port
                                C Drive Strenght */
   1655    000000              DEFCW(   PCDS              , PCDS_)
   1655.1  000000              sfrb PCDS_L = (0x0248u);
   1655.2  000000              sfrb PCDS_H = (0x0248u)+1;
   1655.3  000000              sfrw PCDS   = (0x0248u);
   1655.4  000000                    endm
   1656    000000              #define  PCSEL_              (0x024Au)  /* Port
                                C Selection */
   1657    000000              DEFCW(   PCSEL             , PCSEL_)
   1657.1  000000              sfrb PCSEL_L = (0x024Au);
   1657.2  000000              sfrb PCSEL_H = (0x024Au)+1;
   1657.3  000000              sfrw PCSEL   = (0x024Au);
   1657.4  000000                    endm
   1658    000000              
   1659    000000              
   1660    000000              #define P5IN                (PCIN_L)  /* Port 5
                                Input */
   1661    000000              #define P5OUT               (PCOUT_L) /* Port 5
                                Output */
   1662    000000              #define P5DIR               (PCDIR_L) /* Port 5
                                Direction */
   1663    000000              #define P5REN               (PCREN_L) /* Port 5
                                Resistor Enable */
   1664    000000              #define P5DS                (PCDS_L)  /* Port 5
                                Drive Strenght */
   1665    000000              #define P5SEL               (PCSEL_L) /* Port 5
                                Selection */
   1666    000000              
   1667    000000              #define P6IN                (PCIN_H)  /* Port 6
                                Input */
   1668    000000              #define P6OUT               (PCOUT_H) /* Port 6
                                Output */
   1669    000000              #define P6DIR               (PCDIR_H) /* Port 6
                                Direction */
   1670    000000              #define P6REN               (PCREN_H) /* Port 6
                                Resistor Enable */
   1671    000000              #define P6DS                (PCDS_H)  /* Port 6
                                Drive Strenght */
   1672    000000              #define P6SEL               (PCSEL_H) /* Port 6
                                Selection */
   1673    000000              
   1674    000000              
   1675    000000              /***********************************************
                               *************
   1676    000000              * DIGITAL I/O Port7/8 Pull up / Pull down
                                Resistors
   1677    000000              ************************************************
                               ************/
   1678    000000              #define __MSP430_HAS_PORT7_R__        /*
                                Definition to show that Module is available
                                */
   1679    000000              #define __MSP430_BASEADDRESS_PORT7_R__
                                0x0260
   1680    000000              #define __MSP430_HAS_PORT8_R__        /*
                                Definition to show that Module is available
                                */
   1681    000000              #define __MSP430_BASEADDRESS_PORT8_R__
                                0x0260
   1682    000000              #define __MSP430_HAS_PORTD_R__        /*
                                Definition to show that Module is available
                                */
   1683    000000              #define __MSP430_BASEADDRESS_PORTD_R__
                                0x0260
   1684    000000              
   1685    000000              #define PDIN_               (0x0260u)  /* Port D
                                Input */
   1686    000000              READ_ONLY_DEFCW( PDIN           , PDIN_)
   1686.1  000000              const sfrb PDIN_L = (0x0260u);
   1686.2  000000              const sfrb PDIN_H = (0x0260u)+1;
   1686.3  000000              const sfrw PDIN   = (0x0260u);
   1686.4  000000                    endm
   1687    000000              #define  PDOUT_              (0x0262u)  /* Port
                                D Output */
   1688    000000              DEFCW(   PDOUT             , PDOUT_)
   1688.1  000000              sfrb PDOUT_L = (0x0262u);
   1688.2  000000              sfrb PDOUT_H = (0x0262u)+1;
   1688.3  000000              sfrw PDOUT   = (0x0262u);
   1688.4  000000                    endm
   1689    000000              #define  PDDIR_              (0x0264u)  /* Port
                                D Direction */
   1690    000000              DEFCW(   PDDIR             , PDDIR_)
   1690.1  000000              sfrb PDDIR_L = (0x0264u);
   1690.2  000000              sfrb PDDIR_H = (0x0264u)+1;
   1690.3  000000              sfrw PDDIR   = (0x0264u);
   1690.4  000000                    endm
   1691    000000              #define  PDREN_              (0x0266u)  /* Port
                                D Resistor Enable */
   1692    000000              DEFCW(   PDREN             , PDREN_)
   1692.1  000000              sfrb PDREN_L = (0x0266u);
   1692.2  000000              sfrb PDREN_H = (0x0266u)+1;
   1692.3  000000              sfrw PDREN   = (0x0266u);
   1692.4  000000                    endm
   1693    000000              #define  PDDS_               (0x0268u)  /* Port
                                D Drive Strenght */
   1694    000000              DEFCW(   PDDS              , PDDS_)
   1694.1  000000              sfrb PDDS_L = (0x0268u);
   1694.2  000000              sfrb PDDS_H = (0x0268u)+1;
   1694.3  000000              sfrw PDDS   = (0x0268u);
   1694.4  000000                    endm
   1695    000000              #define  PDSEL_              (0x026Au)  /* Port
                                D Selection */
   1696    000000              DEFCW(   PDSEL             , PDSEL_)
   1696.1  000000              sfrb PDSEL_L = (0x026Au);
   1696.2  000000              sfrb PDSEL_H = (0x026Au)+1;
   1696.3  000000              sfrw PDSEL   = (0x026Au);
   1696.4  000000                    endm
   1697    000000              
   1698    000000              
   1699    000000              #define P7IN                (PDIN_L)  /* Port 7
                                Input */
   1700    000000              #define P7OUT               (PDOUT_L) /* Port 7
                                Output */
   1701    000000              #define P7DIR               (PDDIR_L) /* Port 7
                                Direction */
   1702    000000              #define P7REN               (PDREN_L) /* Port 7
                                Resistor Enable */
   1703    000000              #define P7DS                (PDDS_L)  /* Port 7
                                Drive Strenght */
   1704    000000              #define P7SEL               (PDSEL_L) /* Port 7
                                Selection */
   1705    000000              
   1706    000000              #define P8IN                (PDIN_H)  /* Port 8
                                Input */
   1707    000000              #define P8OUT               (PDOUT_H) /* Port 8
                                Output */
   1708    000000              #define P8DIR               (PDDIR_H) /* Port 8
                                Direction */
   1709    000000              #define P8REN               (PDREN_H) /* Port 8
                                Resistor Enable */
   1710    000000              #define P8DS                (PDDS_H)  /* Port 8
                                Drive Strenght */
   1711    000000              #define P8SEL               (PDSEL_H) /* Port 8
                                Selection */
   1712    000000              
   1713    000000              
   1714    000000              /***********************************************
                               *************
   1715    000000              * DIGITAL I/O PortJ Pull up / Pull down
                                Resistors
   1716    000000              ************************************************
                               ************/
   1717    000000              #define __MSP430_HAS_PORTJ_R__        /*
                                Definition to show that Module is available
                                */
   1718    000000              #define __MSP430_BASEADDRESS_PORTJ_R__
                                0x0320
   1719    000000              
   1720    000000              #define PJIN_               (0x0320u)  /* Port J
                                Input */
   1721    000000              READ_ONLY_DEFCW( PJIN           , PJIN_)
   1721.1  000000              const sfrb PJIN_L = (0x0320u);
   1721.2  000000              const sfrb PJIN_H = (0x0320u)+1;
   1721.3  000000              const sfrw PJIN   = (0x0320u);
   1721.4  000000                    endm
   1722    000000              #define  PJOUT_              (0x0322u)  /* Port
                                J Output */
   1723    000000              DEFCW(   PJOUT             , PJOUT_)
   1723.1  000000              sfrb PJOUT_L = (0x0322u);
   1723.2  000000              sfrb PJOUT_H = (0x0322u)+1;
   1723.3  000000              sfrw PJOUT   = (0x0322u);
   1723.4  000000                    endm
   1724    000000              #define  PJDIR_              (0x0324u)  /* Port
                                J Direction */
   1725    000000              DEFCW(   PJDIR             , PJDIR_)
   1725.1  000000              sfrb PJDIR_L = (0x0324u);
   1725.2  000000              sfrb PJDIR_H = (0x0324u)+1;
   1725.3  000000              sfrw PJDIR   = (0x0324u);
   1725.4  000000                    endm
   1726    000000              #define  PJREN_              (0x0326u)  /* Port
                                J Resistor Enable */
   1727    000000              DEFCW(   PJREN             , PJREN_)
   1727.1  000000              sfrb PJREN_L = (0x0326u);
   1727.2  000000              sfrb PJREN_H = (0x0326u)+1;
   1727.3  000000              sfrw PJREN   = (0x0326u);
   1727.4  000000                    endm
   1728    000000              #define  PJDS_               (0x0328u)  /* Port
                                J Drive Strenght */
   1729    000000              DEFCW(   PJDS              , PJDS_)
   1729.1  000000              sfrb PJDS_L = (0x0328u);
   1729.2  000000              sfrb PJDS_H = (0x0328u)+1;
   1729.3  000000              sfrw PJDS   = (0x0328u);
   1729.4  000000                    endm
   1730    000000              
   1731    000000              /***********************************************
                               *************
   1732    000000              * PORT MAPPING CONTROLLER
   1733    000000              ************************************************
                               ************/
   1734    000000              #define __MSP430_HAS_PORT_MAPPING__   /*
                                Definition to show that Module is available
                                */
   1735    000000              #define __MSP430_BASEADDRESS_PORT_MAPPING__
                                0x01C0
   1736    000000              
   1737    000000              #define  PMAPKEYID_          (0x01C0u)  /* Port
                                Mapping Key register */
   1738    000000              DEFCW(   PMAPKEYID         , PMAPKEYID_)
   1738.1  000000              sfrb PMAPKEYID_L = (0x01C0u);
   1738.2  000000              sfrb PMAPKEYID_H = (0x01C0u)+1;
   1738.3  000000              sfrw PMAPKEYID   = (0x01C0u);
   1738.4  000000                    endm
   1739    000000              #define  PMAPCTL_            (0x01C2u)  /* Port
                                Mapping control register */
   1740    000000              DEFCW(   PMAPCTL           , PMAPCTL_)
   1740.1  000000              sfrb PMAPCTL_L = (0x01C2u);
   1740.2  000000              sfrb PMAPCTL_H = (0x01C2u)+1;
   1740.3  000000              sfrw PMAPCTL   = (0x01C2u);
   1740.4  000000                    endm
   1741    000000              
   1742    000000              #define  PMAPKEY             (0x2D52u)  /* Port
                                Mapping Key */
   1743    000000              #define  PMAPPWD             PMAPKEYID /* Legacy
                                Definition: Mapping Key register */
   1744    000000              #define  PMAPPW              (0x2D52u)  /*
                                Legacy Definition: Port Mapping Password
                                */
   1745    000000              
   1746    000000              /* PMAPCTL Control Bits */
   1747    000000              #define PMAPLOCKED          (0x0001u)  /* Port
                                Mapping Lock bit. Read only */
   1748    000000              #define PMAPRECFG           (0x0002u)  /* Port
                                Mapping re-configuration control bit */
   1749    000000              
   1750    000000              /* PMAPCTL Control Bits */
   1751    000000              #define PMAPLOCKED_L        (0x0001u)  /* Port
                                Mapping Lock bit. Read only */
   1752    000000              #define PMAPRECFG_L         (0x0002u)  /* Port
                                Mapping re-configuration control bit */
   1753    000000              
   1754    000000              /* PMAPCTL Control Bits */
   1755    000000              
   1756    000000              /***********************************************
                               *************
   1757    000000              * PORT 4 MAPPING CONTROLLER
   1758    000000              ************************************************
                               ************/
   1759    000000              #define __MSP430_HAS_PORT4_MAPPING__   /*
                                Definition to show that Module is available
                                */
   1760    000000              #define __MSP430_BASEADDRESS_PORT4_MAPPING__
                                0x01E0
   1761    000000              
   1762    000000              #define  P4MAP01_            (0x01E0u)  /* Port
                                P4.0/1 mapping register */
   1763    000000              DEFCW(   P4MAP01           , P4MAP01_)
   1763.1  000000              sfrb P4MAP01_L = (0x01E0u);
   1763.2  000000              sfrb P4MAP01_H = (0x01E0u)+1;
   1763.3  000000              sfrw P4MAP01   = (0x01E0u);
   1763.4  000000                    endm
   1764    000000              #define  P4MAP23_            (0x01E2u)  /* Port
                                P4.2/3 mapping register */
   1765    000000              DEFCW(   P4MAP23           , P4MAP23_)
   1765.1  000000              sfrb P4MAP23_L = (0x01E2u);
   1765.2  000000              sfrb P4MAP23_H = (0x01E2u)+1;
   1765.3  000000              sfrw P4MAP23   = (0x01E2u);
   1765.4  000000                    endm
   1766    000000              #define  P4MAP45_            (0x01E4u)  /* Port
                                P4.4/5 mapping register */
   1767    000000              DEFCW(   P4MAP45           , P4MAP45_)
   1767.1  000000              sfrb P4MAP45_L = (0x01E4u);
   1767.2  000000              sfrb P4MAP45_H = (0x01E4u)+1;
   1767.3  000000              sfrw P4MAP45   = (0x01E4u);
   1767.4  000000                    endm
   1768    000000              #define  P4MAP67_            (0x01E6u)  /* Port
                                P4.6/7 mapping register */
   1769    000000              DEFCW(   P4MAP67           , P4MAP67_)
   1769.1  000000              sfrb P4MAP67_L = (0x01E6u);
   1769.2  000000              sfrb P4MAP67_H = (0x01E6u)+1;
   1769.3  000000              sfrw P4MAP67   = (0x01E6u);
   1769.4  000000                    endm
   1770    000000              #define  P4MAP0              P4MAP01_L /* Port
                                P4.0 mapping register */
   1771    000000              #define  P4MAP1              P4MAP01_H /* Port
                                P4.1 mapping register */
   1772    000000              #define  P4MAP2              P4MAP23_L /* Port
                                P4.2 mapping register */
   1773    000000              #define  P4MAP3              P4MAP23_H /* Port
                                P4.3 mapping register */
   1774    000000              #define  P4MAP4              P4MAP45_L /* Port
                                P4.4 mapping register */
   1775    000000              #define  P4MAP5              P4MAP45_H /* Port
                                P4.5 mapping register */
   1776    000000              #define  P4MAP6              P4MAP67_L /* Port
                                P4.6 mapping register */
   1777    000000              #define  P4MAP7              P4MAP67_H /* Port
                                P4.7 mapping register */
   1778    000000              
   1779    000000              #define PM_NONE       0
   1780    000000              #define PM_CBOUT0     1
   1781    000000              #define PM_TB0CLK     1
   1782    000000              #define PM_ADC12CLK   2
   1783    000000              #define PM_DMAE0      2
   1784    000000              #define PM_SVMOUT     3
   1785    000000              #define PM_TB0OUTH    3
   1786    000000              #define PM_TB0CCR0A   4
   1787    000000              #define PM_TB0CCR1A   5
   1788    000000              #define PM_TB0CCR2A   6
   1789    000000              #define PM_TB0CCR3A   7
   1790    000000              #define PM_TB0CCR4A   8
   1791    000000              #define PM_TB0CCR5A   9
   1792    000000              #define PM_TB0CCR6A   10
   1793    000000              #define PM_UCA1RXD    11
   1794    000000              #define PM_UCA1SOMI   11
   1795    000000              #define PM_UCA1TXD    12
   1796    000000              #define PM_UCA1SIMO   12
   1797    000000              #define PM_UCA1CLK    13
   1798    000000              #define PM_UCB1STE    13
   1799    000000              #define PM_UCB1SOMI   14
   1800    000000              #define PM_UCB1SCL    14
   1801    000000              #define PM_UCB1SIMO   15
   1802    000000              #define PM_UCB1SDA    15
   1803    000000              #define PM_UCB1CLK    16
   1804    000000              #define PM_UCA1STE    16
   1805    000000              #define PM_CBOUT1     17
   1806    000000              #define PM_MCLK       18
   1807    000000              #define PM_ANALOG     31
   1808    000000              
   1809    000000              /***********************************************
                               *************
   1810    000000              * PMM - Power Management System
   1811    000000              ************************************************
                               ************/
   1812    000000              #define __MSP430_HAS_PMM__            /*
                                Definition to show that Module is available
                                */
   1813    000000              #define __MSP430_BASEADDRESS_PMM__ 0x0120
   1814    000000              
   1815    000000              #define  PMMCTL0_           (0x0120u)  /* PMM
                                Control 0 */
   1816    000000              DEFCW(   PMMCTL0          , PMMCTL0_)
   1816.1  000000              sfrb PMMCTL0_L = (0x0120u);
   1816.2  000000              sfrb PMMCTL0_H = (0x0120u)+1;
   1816.3  000000              sfrw PMMCTL0   = (0x0120u);
   1816.4  000000                    endm
   1817    000000              #define  PMMCTL1_           (0x0122u)  /* PMM
                                Control 1 */
   1818    000000              DEFCW(   PMMCTL1          , PMMCTL1_)
   1818.1  000000              sfrb PMMCTL1_L = (0x0122u);
   1818.2  000000              sfrb PMMCTL1_H = (0x0122u)+1;
   1818.3  000000              sfrw PMMCTL1   = (0x0122u);
   1818.4  000000                    endm
   1819    000000              #define  SVSMHCTL_          (0x0124u)  /* SVS
                                and SVM high side control register */
   1820    000000              DEFCW(   SVSMHCTL         , SVSMHCTL_)
   1820.1  000000              sfrb SVSMHCTL_L = (0x0124u);
   1820.2  000000              sfrb SVSMHCTL_H = (0x0124u)+1;
   1820.3  000000              sfrw SVSMHCTL   = (0x0124u);
   1820.4  000000                    endm
   1821    000000              #define  SVSMLCTL_          (0x0126u)  /* SVS
                                and SVM low side control register */
   1822    000000              DEFCW(   SVSMLCTL         , SVSMLCTL_)
   1822.1  000000              sfrb SVSMLCTL_L = (0x0126u);
   1822.2  000000              sfrb SVSMLCTL_H = (0x0126u)+1;
   1822.3  000000              sfrw SVSMLCTL   = (0x0126u);
   1822.4  000000                    endm
   1823    000000              #define  SVSMIO_            (0x0128u)  /* SVSIN
                                and SVSOUT control register */
   1824    000000              DEFCW(   SVSMIO           , SVSMIO_)
   1824.1  000000              sfrb SVSMIO_L = (0x0128u);
   1824.2  000000              sfrb SVSMIO_H = (0x0128u)+1;
   1824.3  000000              sfrw SVSMIO   = (0x0128u);
   1824.4  000000                    endm
   1825    000000              #define  PMMIFG_            (0x012Cu)  /* PMM
                                Interrupt Flag */
   1826    000000              DEFCW(   PMMIFG           , PMMIFG_)
   1826.1  000000              sfrb PMMIFG_L = (0x012Cu);
   1826.2  000000              sfrb PMMIFG_H = (0x012Cu)+1;
   1826.3  000000              sfrw PMMIFG   = (0x012Cu);
   1826.4  000000                    endm
   1827    000000              #define  PMMRIE_            (0x012Eu)  /* PMM
                                and RESET Interrupt Enable */
   1828    000000              DEFCW(   PMMRIE           , PMMRIE_)
   1828.1  000000              sfrb PMMRIE_L = (0x012Eu);
   1828.2  000000              sfrb PMMRIE_H = (0x012Eu)+1;
   1828.3  000000              sfrw PMMRIE   = (0x012Eu);
   1828.4  000000                    endm
   1829    000000              #define  PM5CTL0_           (0x0130u)  /* PMM
                                Power Mode 5 Control Register 0 */
   1830    000000              DEFCW(   PM5CTL0          , PM5CTL0_)
   1830.1  000000              sfrb PM5CTL0_L = (0x0130u);
   1830.2  000000              sfrb PM5CTL0_H = (0x0130u)+1;
   1830.3  000000              sfrw PM5CTL0   = (0x0130u);
   1830.4  000000                    endm
   1831    000000              
   1832    000000              #define PMMPW               (0xA500u)  /* PMM
                                Register Write Password */
   1833    000000              #define PMMPW_H             (0xA5)    /* PMM
                                Register Write Password for high word access
                                */
   1834    000000              
   1835    000000              /* PMMCTL0 Control Bits */
   1836    000000              #define PMMCOREV0           (0x0001u)  /* PMM
                                Core Voltage Bit: 0 */
   1837    000000              #define PMMCOREV1           (0x0002u)  /* PMM
                                Core Voltage Bit: 1 */
   1838    000000              #define PMMSWBOR            (0x0004u)  /* PMM
                                Software BOR */
   1839    000000              #define PMMSWPOR            (0x0008u)  /* PMM
                                Software POR */
   1840    000000              #define PMMREGOFF           (0x0010u)  /* PMM
                                Turn Regulator off */
   1841    000000              #define PMMHPMRE            (0x0080u)  /* PMM
                                Global High Power Module Request Enable
                                */
   1842    000000              
   1843    000000              /* PMMCTL0 Control Bits */
   1844    000000              #define PMMCOREV0_L         (0x0001u)  /* PMM
                                Core Voltage Bit: 0 */
   1845    000000              #define PMMCOREV1_L         (0x0002u)  /* PMM
                                Core Voltage Bit: 1 */
   1846    000000              #define PMMSWBOR_L          (0x0004u)  /* PMM
                                Software BOR */
   1847    000000              #define PMMSWPOR_L          (0x0008u)  /* PMM
                                Software POR */
   1848    000000              #define PMMREGOFF_L         (0x0010u)  /* PMM
                                Turn Regulator off */
   1849    000000              #define PMMHPMRE_L          (0x0080u)  /* PMM
                                Global High Power Module Request Enable
                                */
   1850    000000              
   1851    000000              /* PMMCTL0 Control Bits */
   1852    000000              
   1853    000000              #define PMMCOREV_0          (0x0000u)  /* PMM
                                Core Voltage 0 (1.35V) */
   1854    000000              #define PMMCOREV_1          (0x0001u)  /* PMM
                                Core Voltage 1 (1.55V) */
   1855    000000              #define PMMCOREV_2          (0x0002u)  /* PMM
                                Core Voltage 2 (1.75V) */
   1856    000000              #define PMMCOREV_3          (0x0003u)  /* PMM
                                Core Voltage 3 (1.85V) */
   1857    000000              
   1858    000000              /* PMMCTL1 Control Bits */
   1859    000000              #define PMMREFMD            (0x0001u)  /* PMM
                                Reference Mode */
   1860    000000              #define PMMCMD0             (0x0010u)  /* PMM
                                Voltage Regulator Current Mode Bit: 0
                                */
   1861    000000              #define PMMCMD1             (0x0020u)  /* PMM
                                Voltage Regulator Current Mode Bit: 1
                                */
   1862    000000              
   1863    000000              /* PMMCTL1 Control Bits */
   1864    000000              #define PMMREFMD_L          (0x0001u)  /* PMM
                                Reference Mode */
   1865    000000              #define PMMCMD0_L           (0x0010u)  /* PMM
                                Voltage Regulator Current Mode Bit: 0
                                */
   1866    000000              #define PMMCMD1_L           (0x0020u)  /* PMM
                                Voltage Regulator Current Mode Bit: 1
                                */
   1867    000000              
   1868    000000              /* PMMCTL1 Control Bits */
   1869    000000              
   1870    000000              /* SVSMHCTL Control Bits */
   1871    000000              #define SVSMHRRL0           (0x0001u)  /* SVS
                                and SVM high side Reset Release Voltage Level
                                Bit: 0 */
   1872    000000              #define SVSMHRRL1           (0x0002u)  /* SVS
                                and SVM high side Reset Release Voltage Level
                                Bit: 1 */
   1873    000000              #define SVSMHRRL2           (0x0004u)  /* SVS
                                and SVM high side Reset Release Voltage Level
                                Bit: 2 */
   1874    000000              #define SVSMHDLYST          (0x0008u)  /* SVS
                                and SVM high side delay status */
   1875    000000              #define SVSHMD              (0x0010u)  /* SVS
                                high side mode */
   1876    000000              #define SVSMHEVM            (0x0040u)  /* SVS
                                and SVM high side event mask */
   1877    000000              #define SVSMHACE            (0x0080u)  /* SVS
                                and SVM high side auto control enable
                                */
   1878    000000              #define SVSHRVL0            (0x0100u)  /* SVS
                                high side reset voltage level Bit: 0 */
   1879    000000              #define SVSHRVL1            (0x0200u)  /* SVS
                                high side reset voltage level Bit: 1 */
   1880    000000              #define SVSHE               (0x0400u)  /* SVS
                                high side enable */
   1881    000000              #define SVSHFP              (0x0800u)  /* SVS
                                high side full performace mode */
   1882    000000              #define SVMHOVPE            (0x1000u)  /* SVM
                                high side over-voltage enable */
   1883    000000              #define SVMHE               (0x4000u)  /* SVM
                                high side enable */
   1884    000000              #define SVMHFP              (0x8000u)  /* SVM
                                high side full performace mode */
   1885    000000              
   1886    000000              /* SVSMHCTL Control Bits */
   1887    000000              #define SVSMHRRL0_L         (0x0001u)  /* SVS
                                and SVM high side Reset Release Voltage Level
                                Bit: 0 */
   1888    000000              #define SVSMHRRL1_L         (0x0002u)  /* SVS
                                and SVM high side Reset Release Voltage Level
                                Bit: 1 */
   1889    000000              #define SVSMHRRL2_L         (0x0004u)  /* SVS
                                and SVM high side Reset Release Voltage Level
                                Bit: 2 */
   1890    000000              #define SVSMHDLYST_L        (0x0008u)  /* SVS
                                and SVM high side delay status */
   1891    000000              #define SVSHMD_L            (0x0010u)  /* SVS
                                high side mode */
   1892    000000              #define SVSMHEVM_L          (0x0040u)  /* SVS
                                and SVM high side event mask */
   1893    000000              #define SVSMHACE_L          (0x0080u)  /* SVS
                                and SVM high side auto control enable
                                */
   1894    000000              
   1895    000000              /* SVSMHCTL Control Bits */
   1896    000000              #define SVSHRVL0_H          (0x0001u)  /* SVS
                                high side reset voltage level Bit: 0 */
   1897    000000              #define SVSHRVL1_H          (0x0002u)  /* SVS
                                high side reset voltage level Bit: 1 */
   1898    000000              #define SVSHE_H             (0x0004u)  /* SVS
                                high side enable */
   1899    000000              #define SVSHFP_H            (0x0008u)  /* SVS
                                high side full performace mode */
   1900    000000              #define SVMHOVPE_H          (0x0010u)  /* SVM
                                high side over-voltage enable */
   1901    000000              #define SVMHE_H             (0x0040u)  /* SVM
                                high side enable */
   1902    000000              #define SVMHFP_H            (0x0080u)  /* SVM
                                high side full performace mode */
   1903    000000              
   1904    000000              #define SVSMHRRL_0          (0x0000u)  /* SVS
                                and SVM high side Reset Release Voltage Level 0
                                */
   1905    000000              #define SVSMHRRL_1          (0x0001u)  /* SVS
                                and SVM high side Reset Release Voltage Level 1
                                */
   1906    000000              #define SVSMHRRL_2          (0x0002u)  /* SVS
                                and SVM high side Reset Release Voltage Level 2
                                */
   1907    000000              #define SVSMHRRL_3          (0x0003u)  /* SVS
                                and SVM high side Reset Release Voltage Level 3
                                */
   1908    000000              #define SVSMHRRL_4          (0x0004u)  /* SVS
                                and SVM high side Reset Release Voltage Level 4
                                */
   1909    000000              #define SVSMHRRL_5          (0x0005u)  /* SVS
                                and SVM high side Reset Release Voltage Level 5
                                */
   1910    000000              #define SVSMHRRL_6          (0x0006u)  /* SVS
                                and SVM high side Reset Release Voltage Level 6
                                */
   1911    000000              #define SVSMHRRL_7          (0x0007u)  /* SVS
                                and SVM high side Reset Release Voltage Level 7
                                */
   1912    000000              
   1913    000000              #define SVSHRVL_0           (0x0000u)  /* SVS
                                high side Reset Release Voltage Level 0
                                */
   1914    000000              #define SVSHRVL_1           (0x0100u)  /* SVS
                                high side Reset Release Voltage Level 1
                                */
   1915    000000              #define SVSHRVL_2           (0x0200u)  /* SVS
                                high side Reset Release Voltage Level 2
                                */
   1916    000000              #define SVSHRVL_3           (0x0300u)  /* SVS
                                high side Reset Release Voltage Level 3
                                */
   1917    000000              
   1918    000000              /* SVSMLCTL Control Bits */
   1919    000000              #define SVSMLRRL0           (0x0001u)  /* SVS
                                and SVM low side Reset Release Voltage Level
                                Bit: 0 */
   1920    000000              #define SVSMLRRL1           (0x0002u)  /* SVS
                                and SVM low side Reset Release Voltage Level
                                Bit: 1 */
   1921    000000              #define SVSMLRRL2           (0x0004u)  /* SVS
                                and SVM low side Reset Release Voltage Level
                                Bit: 2 */
   1922    000000              #define SVSMLDLYST          (0x0008u)  /* SVS
                                and SVM low side delay status */
   1923    000000              #define SVSLMD              (0x0010u)  /* SVS
                                low side mode */
   1924    000000              #define SVSMLEVM            (0x0040u)  /* SVS
                                and SVM low side event mask */
   1925    000000              #define SVSMLACE            (0x0080u)  /* SVS
                                and SVM low side auto control enable */
   1926    000000              #define SVSLRVL0            (0x0100u)  /* SVS
                                low side reset voltage level Bit: 0 */
   1927    000000              #define SVSLRVL1            (0x0200u)  /* SVS
                                low side reset voltage level Bit: 1 */
   1928    000000              #define SVSLE               (0x0400u)  /* SVS
                                low side enable */
   1929    000000              #define SVSLFP              (0x0800u)  /* SVS
                                low side full performace mode */
   1930    000000              #define SVMLOVPE            (0x1000u)  /* SVM
                                low side over-voltage enable */
   1931    000000              #define SVMLE               (0x4000u)  /* SVM
                                low side enable */
   1932    000000              #define SVMLFP              (0x8000u)  /* SVM
                                low side full performace mode */
   1933    000000              
   1934    000000              /* SVSMLCTL Control Bits */
   1935    000000              #define SVSMLRRL0_L         (0x0001u)  /* SVS
                                and SVM low side Reset Release Voltage Level
                                Bit: 0 */
   1936    000000              #define SVSMLRRL1_L         (0x0002u)  /* SVS
                                and SVM low side Reset Release Voltage Level
                                Bit: 1 */
   1937    000000              #define SVSMLRRL2_L         (0x0004u)  /* SVS
                                and SVM low side Reset Release Voltage Level
                                Bit: 2 */
   1938    000000              #define SVSMLDLYST_L        (0x0008u)  /* SVS
                                and SVM low side delay status */
   1939    000000              #define SVSLMD_L            (0x0010u)  /* SVS
                                low side mode */
   1940    000000              #define SVSMLEVM_L          (0x0040u)  /* SVS
                                and SVM low side event mask */
   1941    000000              #define SVSMLACE_L          (0x0080u)  /* SVS
                                and SVM low side auto control enable */
   1942    000000              
   1943    000000              /* SVSMLCTL Control Bits */
   1944    000000              #define SVSLRVL0_H          (0x0001u)  /* SVS
                                low side reset voltage level Bit: 0 */
   1945    000000              #define SVSLRVL1_H          (0x0002u)  /* SVS
                                low side reset voltage level Bit: 1 */
   1946    000000              #define SVSLE_H             (0x0004u)  /* SVS
                                low side enable */
   1947    000000              #define SVSLFP_H            (0x0008u)  /* SVS
                                low side full performace mode */
   1948    000000              #define SVMLOVPE_H          (0x0010u)  /* SVM
                                low side over-voltage enable */
   1949    000000              #define SVMLE_H             (0x0040u)  /* SVM
                                low side enable */
   1950    000000              #define SVMLFP_H            (0x0080u)  /* SVM
                                low side full performace mode */
   1951    000000              
   1952    000000              #define SVSMLRRL_0          (0x0000u)  /* SVS
                                and SVM low side Reset Release Voltage Level 0
                                */
   1953    000000              #define SVSMLRRL_1          (0x0001u)  /* SVS
                                and SVM low side Reset Release Voltage Level 1
                                */
   1954    000000              #define SVSMLRRL_2          (0x0002u)  /* SVS
                                and SVM low side Reset Release Voltage Level 2
                                */
   1955    000000              #define SVSMLRRL_3          (0x0003u)  /* SVS
                                and SVM low side Reset Release Voltage Level 3
                                */
   1956    000000              #define SVSMLRRL_4          (0x0004u)  /* SVS
                                and SVM low side Reset Release Voltage Level 4
                                */
   1957    000000              #define SVSMLRRL_5          (0x0005u)  /* SVS
                                and SVM low side Reset Release Voltage Level 5
                                */
   1958    000000              #define SVSMLRRL_6          (0x0006u)  /* SVS
                                and SVM low side Reset Release Voltage Level 6
                                */
   1959    000000              #define SVSMLRRL_7          (0x0007u)  /* SVS
                                and SVM low side Reset Release Voltage Level 7
                                */
   1960    000000              
   1961    000000              #define SVSLRVL_0           (0x0000u)  /* SVS
                                low side Reset Release Voltage Level 0
                                */
   1962    000000              #define SVSLRVL_1           (0x0100u)  /* SVS
                                low side Reset Release Voltage Level 1
                                */
   1963    000000              #define SVSLRVL_2           (0x0200u)  /* SVS
                                low side Reset Release Voltage Level 2
                                */
   1964    000000              #define SVSLRVL_3           (0x0300u)  /* SVS
                                low side Reset Release Voltage Level 3
                                */
   1965    000000              
   1966    000000              /* SVSMIO Control Bits */
   1967    000000              #define SVMLOE              (0x0008u)  /* SVM
                                low side output enable */
   1968    000000              #define SVMLVLROE           (0x0010u)  /* SVM
                                low side voltage level reached output enable
                                */
   1969    000000              #define SVMOUTPOL           (0x0020u)  /* SVMOUT
                                pin polarity */
   1970    000000              #define SVMHOE              (0x0800u)  /* SVM
                                high side output enable */
   1971    000000              #define SVMHVLROE           (0x1000u)  /* SVM
                                high side voltage level reached output enable
                                */
   1972    000000              
   1973    000000              /* SVSMIO Control Bits */
   1974    000000              #define SVMLOE_L            (0x0008u)  /* SVM
                                low side output enable */
   1975    000000              #define SVMLVLROE_L         (0x0010u)  /* SVM
                                low side voltage level reached output enable
                                */
   1976    000000              #define SVMOUTPOL_L         (0x0020u)  /* SVMOUT
                                pin polarity */
   1977    000000              
   1978    000000              /* SVSMIO Control Bits */
   1979    000000              #define SVMHOE_H            (0x0008u)  /* SVM
                                high side output enable */
   1980    000000              #define SVMHVLROE_H         (0x0010u)  /* SVM
                                high side voltage level reached output enable
                                */
   1981    000000              
   1982    000000              /* PMMIFG Control Bits */
   1983    000000              #define SVSMLDLYIFG         (0x0001u)  /* SVS
                                and SVM low side Delay expired interrupt flag
                                */
   1984    000000              #define SVMLIFG             (0x0002u)  /* SVM
                                low side interrupt flag */
   1985    000000              #define SVMLVLRIFG          (0x0004u)  /* SVM
                                low side Voltage Level Reached interrupt flag
                                */
   1986    000000              #define SVSMHDLYIFG         (0x0010u)  /* SVS
                                and SVM high side Delay expired interrupt flag
                                */
   1987    000000              #define SVMHIFG             (0x0020u)  /* SVM
                                high side interrupt flag */
   1988    000000              #define SVMHVLRIFG          (0x0040u)  /* SVM
                                high side Voltage Level Reached interrupt flag
                                */
   1989    000000              #define PMMBORIFG           (0x0100u)  /* PMM
                                Software BOR interrupt flag */
   1990    000000              #define PMMRSTIFG           (0x0200u)  /* PMM
                                RESET pin interrupt flag */
   1991    000000              #define PMMPORIFG           (0x0400u)  /* PMM
                                Software POR interrupt flag */
   1992    000000              #define SVSHIFG             (0x1000u)  /* SVS
                                low side interrupt flag */
   1993    000000              #define SVSLIFG             (0x2000u)  /* SVS
                                high side interrupt flag */
   1994    000000              #define PMMLPM5IFG          (0x8000u)  /* LPM5
                                indication Flag */
   1995    000000              
   1996    000000              /* PMMIFG Control Bits */
   1997    000000              #define SVSMLDLYIFG_L       (0x0001u)  /* SVS
                                and SVM low side Delay expired interrupt flag
                                */
   1998    000000              #define SVMLIFG_L           (0x0002u)  /* SVM
                                low side interrupt flag */
   1999    000000              #define SVMLVLRIFG_L        (0x0004u)  /* SVM
                                low side Voltage Level Reached interrupt flag
                                */
   2000    000000              #define SVSMHDLYIFG_L       (0x0010u)  /* SVS
                                and SVM high side Delay expired interrupt flag
                                */
   2001    000000              #define SVMHIFG_L           (0x0020u)  /* SVM
                                high side interrupt flag */
   2002    000000              #define SVMHVLRIFG_L        (0x0040u)  /* SVM
                                high side Voltage Level Reached interrupt flag
                                */
   2003    000000              
   2004    000000              /* PMMIFG Control Bits */
   2005    000000              #define PMMBORIFG_H         (0x0001u)  /* PMM
                                Software BOR interrupt flag */
   2006    000000              #define PMMRSTIFG_H         (0x0002u)  /* PMM
                                RESET pin interrupt flag */
   2007    000000              #define PMMPORIFG_H         (0x0004u)  /* PMM
                                Software POR interrupt flag */
   2008    000000              #define SVSHIFG_H           (0x0010u)  /* SVS
                                low side interrupt flag */
   2009    000000              #define SVSLIFG_H           (0x0020u)  /* SVS
                                high side interrupt flag */
   2010    000000              #define PMMLPM5IFG_H        (0x0080u)  /* LPM5
                                indication Flag */
   2011    000000              
   2012    000000              #define PMMRSTLPM5IFG       PMMLPM5IFG /* LPM5
                                indication Flag */
   2013    000000              
   2014    000000              /* PMMIE and RESET Control Bits */
   2015    000000              #define SVSMLDLYIE          (0x0001u)  /* SVS
                                and SVM low side Delay expired interrupt enable
                                */
   2016    000000              #define SVMLIE              (0x0002u)  /* SVM
                                low side interrupt enable */
   2017    000000              #define SVMLVLRIE           (0x0004u)  /* SVM
                                low side Voltage Level Reached interrupt enable
                                */
   2018    000000              #define SVSMHDLYIE          (0x0010u)  /* SVS
                                and SVM high side Delay expired interrupt
                                enable */
   2019    000000              #define SVMHIE              (0x0020u)  /* SVM
                                high side interrupt enable */
   2020    000000              #define SVMHVLRIE           (0x0040u)  /* SVM
                                high side Voltage Level Reached interrupt
                                enable */
   2021    000000              #define SVSLPE              (0x0100u)  /* SVS
                                low side POR enable */
   2022    000000              #define SVMLVLRPE           (0x0200u)  /* SVM
                                low side Voltage Level reached POR enable
                                */
   2023    000000              #define SVSHPE              (0x1000u)  /* SVS
                                high side POR enable */
   2024    000000              #define SVMHVLRPE           (0x2000u)  /* SVM
                                high side Voltage Level reached POR enable
                                */
   2025    000000              
   2026    000000              /* PMMIE and RESET Control Bits */
   2027    000000              #define SVSMLDLYIE_L        (0x0001u)  /* SVS
                                and SVM low side Delay expired interrupt enable
                                */
   2028    000000              #define SVMLIE_L            (0x0002u)  /* SVM
                                low side interrupt enable */
   2029    000000              #define SVMLVLRIE_L         (0x0004u)  /* SVM
                                low side Voltage Level Reached interrupt enable
                                */
   2030    000000              #define SVSMHDLYIE_L        (0x0010u)  /* SVS
                                and SVM high side Delay expired interrupt
                                enable */
   2031    000000              #define SVMHIE_L            (0x0020u)  /* SVM
                                high side interrupt enable */
   2032    000000              #define SVMHVLRIE_L         (0x0040u)  /* SVM
                                high side Voltage Level Reached interrupt
                                enable */
   2033    000000              
   2034    000000              /* PMMIE and RESET Control Bits */
   2035    000000              #define SVSLPE_H            (0x0001u)  /* SVS
                                low side POR enable */
   2036    000000              #define SVMLVLRPE_H         (0x0002u)  /* SVM
                                low side Voltage Level reached POR enable
                                */
   2037    000000              #define SVSHPE_H            (0x0010u)  /* SVS
                                high side POR enable */
   2038    000000              #define SVMHVLRPE_H         (0x0020u)  /* SVM
                                high side Voltage Level reached POR enable
                                */
   2039    000000              
   2040    000000              /* PM5CTL0 Power Mode 5 Control Bits */
   2041    000000              #define LOCKLPM5            (0x0001u)  /* Lock
                                I/O pin configuration upon entry/exit to/from
                                LPM5 */
   2042    000000              
   2043    000000              /* PM5CTL0 Power Mode 5 Control Bits */
   2044    000000              #define LOCKLPM5_L          (0x0001u)  /* Lock
                                I/O pin configuration upon entry/exit to/from
                                LPM5 */
   2045    000000              
   2046    000000              /* PM5CTL0 Power Mode 5 Control Bits */
   2047    000000              #define LOCKIO              LOCKLPM5  /* Lock
                                I/O pin configuration upon entry/exit to/from
                                LPM5 */
   2048    000000              
   2049    000000              /***********************************************
                               **************
   2050    000000              * RAM Control Module
   2051    000000              ************************************************
                               *************/
   2052    000000              #define __MSP430_HAS_RC__             /*
                                Definition to show that Module is available
                                */
   2053    000000              #define __MSP430_BASEADDRESS_RC__ 0x0158
   2054    000000              
   2055    000000              #define  RCCTL0_             (0x0158u)  /* Ram
                                Controller Control Register */
   2056    000000              DEFCW(   RCCTL0            , RCCTL0_)
   2056.1  000000              sfrb RCCTL0_L = (0x0158u);
   2056.2  000000              sfrb RCCTL0_H = (0x0158u)+1;
   2056.3  000000              sfrw RCCTL0   = (0x0158u);
   2056.4  000000                    endm
   2057    000000              
   2058    000000              /* RCCTL0 Control Bits */
   2059    000000              #define RCRS0OFF            (0x0001u)  /* RAM
                                Controller RAM Sector 0 Off */
   2060    000000              #define RCRS1OFF            (0x0002u)  /* RAM
                                Controller RAM Sector 1 Off */
   2061    000000              #define RCRS2OFF            (0x0004u)  /* RAM
                                Controller RAM Sector 2 Off */
   2062    000000              #define RCRS3OFF            (0x0008u)  /* RAM
                                Controller RAM Sector 3 Off */
   2063    000000              #define RCRS7OFF            (0x0080u)  /* RAM
                                Controller RAM Sector 7 (USB) Off */
   2064    000000              
   2065    000000              /* RCCTL0 Control Bits */
   2066    000000              #define RCRS0OFF_L          (0x0001u)  /* RAM
                                Controller RAM Sector 0 Off */
   2067    000000              #define RCRS1OFF_L          (0x0002u)  /* RAM
                                Controller RAM Sector 1 Off */
   2068    000000              #define RCRS2OFF_L          (0x0004u)  /* RAM
                                Controller RAM Sector 2 Off */
   2069    000000              #define RCRS3OFF_L          (0x0008u)  /* RAM
                                Controller RAM Sector 3 Off */
   2070    000000              #define RCRS7OFF_L          (0x0080u)  /* RAM
                                Controller RAM Sector 7 (USB) Off */
   2071    000000              
   2072    000000              /* RCCTL0 Control Bits */
   2073    000000              
   2074    000000              #define RCKEY               (0x5A00u)
   2075    000000              
   2076    000000              /***********************************************
                               *************
   2077    000000              * Shared Reference
   2078    000000              ************************************************
                               ************/
   2079    000000              #define __MSP430_HAS_REF__          /*
                                Definition to show that Module is available
                                */
   2080    000000              #define __MSP430_BASEADDRESS_REF__ 0x01B0
   2081    000000              
   2082    000000              #define  REFCTL0_            (0x01B0u)  /* REF
                                Shared Reference control register 0 */
   2083    000000              DEFCW(   REFCTL0           , REFCTL0_)
   2083.1  000000              sfrb REFCTL0_L = (0x01B0u);
   2083.2  000000              sfrb REFCTL0_H = (0x01B0u)+1;
   2083.3  000000              sfrw REFCTL0   = (0x01B0u);
   2083.4  000000                    endm
   2084    000000              
   2085    000000              /* REFCTL0 Control Bits */
   2086    000000              #define REFON               (0x0001u)  /* REF
                                Reference On */
   2087    000000              #define REFOUT              (0x0002u)  /* REF
                                Reference output Buffer On */
   2088    000000              //#define RESERVED            (0x0004u)  /*
                                Reserved */
   2089    000000              #define REFTCOFF            (0x0008u)  /* REF
                                Temp.Sensor off */
   2090    000000              #define REFVSEL0            (0x0010u)  /* REF
                                Reference Voltage Level Select Bit:0 */
   2091    000000              #define REFVSEL1            (0x0020u)  /* REF
                                Reference Voltage Level Select Bit:1 */
   2092    000000              //#define RESERVED            (0x0040u)  /*
                                Reserved */
   2093    000000              #define REFMSTR             (0x0080u)  /* REF
                                Master Control */
   2094    000000              #define REFGENACT           (0x0100u)  /* REF
                                Reference generator active */
   2095    000000              #define REFBGACT            (0x0200u)  /* REF
                                Reference bandgap active */
   2096    000000              #define REFGENBUSY          (0x0400u)  /* REF
                                Reference generator busy */
   2097    000000              #define BGMODE              (0x0800u)  /* REF
                                Bandgap mode */
   2098    000000              //#define RESERVED            (0x1000u)  /*
                                Reserved */
   2099    000000              //#define RESERVED            (0x2000u)  /*
                                Reserved */
   2100    000000              //#define RESERVED            (0x4000u)  /*
                                Reserved */
   2101    000000              //#define RESERVED            (0x8000u)  /*
                                Reserved */
   2102    000000              
   2103    000000              /* REFCTL0 Control Bits */
   2104    000000              #define REFON_L             (0x0001u)  /* REF
                                Reference On */
   2105    000000              #define REFOUT_L            (0x0002u)  /* REF
                                Reference output Buffer On */
   2106    000000              //#define RESERVED            (0x0004u)  /*
                                Reserved */
   2107    000000              #define REFTCOFF_L          (0x0008u)  /* REF
                                Temp.Sensor off */
   2108    000000              #define REFVSEL0_L          (0x0010u)  /* REF
                                Reference Voltage Level Select Bit:0 */
   2109    000000              #define REFVSEL1_L          (0x0020u)  /* REF
                                Reference Voltage Level Select Bit:1 */
   2110    000000              //#define RESERVED            (0x0040u)  /*
                                Reserved */
   2111    000000              #define REFMSTR_L           (0x0080u)  /* REF
                                Master Control */
   2112    000000              //#define RESERVED            (0x1000u)  /*
                                Reserved */
   2113    000000              //#define RESERVED            (0x2000u)  /*
                                Reserved */
   2114    000000              //#define RESERVED            (0x4000u)  /*
                                Reserved */
   2115    000000              //#define RESERVED            (0x8000u)  /*
                                Reserved */
   2116    000000              
   2117    000000              /* REFCTL0 Control Bits */
   2118    000000              //#define RESERVED            (0x0004u)  /*
                                Reserved */
   2119    000000              //#define RESERVED            (0x0040u)  /*
                                Reserved */
   2120    000000              #define REFGENACT_H         (0x0001u)  /* REF
                                Reference generator active */
   2121    000000              #define REFBGACT_H          (0x0002u)  /* REF
                                Reference bandgap active */
   2122    000000              #define REFGENBUSY_H        (0x0004u)  /* REF
                                Reference generator busy */
   2123    000000              #define BGMODE_H            (0x0008u)  /* REF
                                Bandgap mode */
   2124    000000              //#define RESERVED            (0x1000u)  /*
                                Reserved */
   2125    000000              //#define RESERVED            (0x2000u)  /*
                                Reserved */
   2126    000000              //#define RESERVED            (0x4000u)  /*
                                Reserved */
   2127    000000              //#define RESERVED            (0x8000u)  /*
                                Reserved */
   2128    000000              
   2129    000000              #define REFVSEL_0           (0x0000u)  /* REF
                                Reference Voltage Level Select 1.5V */
   2130    000000              #define REFVSEL_1           (0x0010u)  /* REF
                                Reference Voltage Level Select 2.0V */
   2131    000000              #define REFVSEL_2           (0x0020u)  /* REF
                                Reference Voltage Level Select 2.5V */
   2132    000000              #define REFVSEL_3           (0x0030u)  /* REF
                                Reference Voltage Level Select 2.5V */
   2133    000000              
   2134    000000              /***********************************************
                               *************
   2135    000000              * Real Time Clock
   2136    000000              ************************************************
                               ************/
   2137    000000              #define __MSP430_HAS_RTC__            /*
                                Definition to show that Module is available
                                */
   2138    000000              #define __MSP430_BASEADDRESS_RTC__ 0x04A0
   2139    000000              
   2140    000000              #define RTCCTL01_           (0x04A0u)  /* Real
                                Timer Control 0/1 */
   2141    000000              DEFCW(  RTCCTL01          , RTCCTL01_)
   2141.1  000000              sfrb RTCCTL01_L = (0x04A0u);
   2141.2  000000              sfrb RTCCTL01_H = (0x04A0u)+1;
   2141.3  000000              sfrw RTCCTL01   = (0x04A0u);
   2141.4  000000                    endm
   2142    000000              #define RTCCTL23_           (0x04A2u)  /* Real
                                Timer Control 2/3 */
   2143    000000              DEFCW(  RTCCTL23          , RTCCTL23_)
   2143.1  000000              sfrb RTCCTL23_L = (0x04A2u);
   2143.2  000000              sfrb RTCCTL23_H = (0x04A2u)+1;
   2143.3  000000              sfrw RTCCTL23   = (0x04A2u);
   2143.4  000000                    endm
   2144    000000              #define RTCPS0CTL_          (0x04A8u)  /* Real
                                Timer Prescale Timer 0 Control */
   2145    000000              DEFCW(  RTCPS0CTL         , RTCPS0CTL_)
   2145.1  000000              sfrb RTCPS0CTL_L = (0x04A8u);
   2145.2  000000              sfrb RTCPS0CTL_H = (0x04A8u)+1;
   2145.3  000000              sfrw RTCPS0CTL   = (0x04A8u);
   2145.4  000000                    endm
   2146    000000              #define RTCPS1CTL_          (0x04AAu)  /* Real
                                Timer Prescale Timer 1 Control */
   2147    000000              DEFCW(  RTCPS1CTL         , RTCPS1CTL_)
   2147.1  000000              sfrb RTCPS1CTL_L = (0x04AAu);
   2147.2  000000              sfrb RTCPS1CTL_H = (0x04AAu)+1;
   2147.3  000000              sfrw RTCPS1CTL   = (0x04AAu);
   2147.4  000000                    endm
   2148    000000              #define RTCPS_              (0x04ACu)  /* Real
                                Timer Prescale Timer Control */
   2149    000000              DEFCW(  RTCPS             , RTCPS_)
   2149.1  000000              sfrb RTCPS_L = (0x04ACu);
   2149.2  000000              sfrb RTCPS_H = (0x04ACu)+1;
   2149.3  000000              sfrw RTCPS   = (0x04ACu);
   2149.4  000000                    endm
   2150    000000              #define RTCIV_              (0x04AEu)  /* Real
                                Time Clock Interrupt Vector */
   2151    000000              DEFW(   RTCIV             , RTCIV_)
   2152    000000              #define RTCTIM0_            (0x04B0u)  /* Real
                                Time Clock Time 0 */
   2153    000000              DEFCW(  RTCTIM0           , RTCTIM0_)
   2153.1  000000              sfrb RTCTIM0_L = (0x04B0u);
   2153.2  000000              sfrb RTCTIM0_H = (0x04B0u)+1;
   2153.3  000000              sfrw RTCTIM0   = (0x04B0u);
   2153.4  000000                    endm
   2154    000000              #define RTCTIM1_            (0x04B2u)  /* Real
                                Time Clock Time 1 */
   2155    000000              DEFCW(  RTCTIM1           , RTCTIM1_)
   2155.1  000000              sfrb RTCTIM1_L = (0x04B2u);
   2155.2  000000              sfrb RTCTIM1_H = (0x04B2u)+1;
   2155.3  000000              sfrw RTCTIM1   = (0x04B2u);
   2155.4  000000                    endm
   2156    000000              #define RTCDATE_            (0x04B4u)  /* Real
                                Time Clock Date */
   2157    000000              DEFCW(  RTCDATE           , RTCDATE_)
   2157.1  000000              sfrb RTCDATE_L = (0x04B4u);
   2157.2  000000              sfrb RTCDATE_H = (0x04B4u)+1;
   2157.3  000000              sfrw RTCDATE   = (0x04B4u);
   2157.4  000000                    endm
   2158    000000              #define RTCYEAR_            (0x04B6u)  /* Real
                                Time Clock Year */
   2159    000000              DEFCW(  RTCYEAR           , RTCYEAR_)
   2159.1  000000              sfrb RTCYEAR_L = (0x04B6u);
   2159.2  000000              sfrb RTCYEAR_H = (0x04B6u)+1;
   2159.3  000000              sfrw RTCYEAR   = (0x04B6u);
   2159.4  000000                    endm
   2160    000000              #define RTCAMINHR_          (0x04B8u)  /* Real
                                Time Clock Alarm Min/Hour */
   2161    000000              DEFCW(  RTCAMINHR         , RTCAMINHR_)
   2161.1  000000              sfrb RTCAMINHR_L = (0x04B8u);
   2161.2  000000              sfrb RTCAMINHR_H = (0x04B8u)+1;
   2161.3  000000              sfrw RTCAMINHR   = (0x04B8u);
   2161.4  000000                    endm
   2162    000000              #define RTCADOWDAY_         (0x04BAu)  /* Real
                                Time Clock Alarm day of week/day */
   2163    000000              DEFCW(  RTCADOWDAY        , RTCADOWDAY_)
   2163.1  000000              sfrb RTCADOWDAY_L = (0x04BAu);
   2163.2  000000              sfrb RTCADOWDAY_H = (0x04BAu)+1;
   2163.3  000000              sfrw RTCADOWDAY   = (0x04BAu);
   2163.4  000000                    endm
   2164    000000              
   2165    000000              #define RTCCTL0             RTCCTL01_L  /* Real
                                Time Clock Control 0 */
   2166    000000              #define RTCCTL1             RTCCTL01_H  /* Real
                                Time Clock Control 1 */
   2167    000000              #define RTCCTL2             RTCCTL23_L  /* Real
                                Time Clock Control 2 */
   2168    000000              #define RTCCTL3             RTCCTL23_H  /* Real
                                Time Clock Control 3 */
   2169    000000              #define RTCNT12             RTCTIM0
   2170    000000              #define RTCNT34             RTCTIM1
   2171    000000              #define RTCNT1              RTCTIM0_L
   2172    000000              #define RTCNT2              RTCTIM0_H
   2173    000000              #define RTCNT3              RTCTIM1_L
   2174    000000              #define RTCNT4              RTCTIM1_H
   2175    000000              #define RTCSEC              RTCTIM0_L
   2176    000000              #define RTCMIN              RTCTIM0_H
   2177    000000              #define RTCHOUR             RTCTIM1_L
   2178    000000              #define RTCDOW              RTCTIM1_H
   2179    000000              #define RTCDAY              RTCDATE_L
   2180    000000              #define RTCMON              RTCDATE_H
   2181    000000              #define RTCYEARL            RTCYEAR_L
   2182    000000              #define RTCYEARH            RTCYEAR_H
   2183    000000              #define RT0PS               RTCPS_L
   2184    000000              #define RT1PS               RTCPS_H
   2185    000000              #define RTCAMIN             RTCAMINHR_L  /* Real
                                Time Clock Alarm Min */
   2186    000000              #define RTCAHOUR            RTCAMINHR_H  /* Real
                                Time Clock Alarm Hour */
   2187    000000              #define RTCADOW             RTCADOWDAY_L /* Real
                                Time Clock Alarm day of week */
   2188    000000              #define RTCADAY             RTCADOWDAY_H /* Real
                                Time Clock Alarm day */
   2189    000000              
   2190    000000              /* RTCCTL01 Control Bits */
   2191    000000              #define RTCBCD              (0x8000u)     /* RTC
                                BCD  0:Binary / 1:BCD */
   2192    000000              #define RTCHOLD             (0x4000u)     /* RTC
                                Hold */
   2193    000000              #define RTCMODE             (0x2000u)     /* RTC
                                Mode 0:Counter / 1: Calendar */
   2194    000000              #define RTCRDY              (0x1000u)     /* RTC
                                Ready */
   2195    000000              #define RTCSSEL1            (0x0800u)     /* RTC
                                Source Select 1 */
   2196    000000              #define RTCSSEL0            (0x0400u)     /* RTC
                                Source Select 0 */
   2197    000000              #define RTCTEV1             (0x0200u)     /* RTC
                                Time Event 1 */
   2198    000000              #define RTCTEV0             (0x0100u)     /* RTC
                                Time Event 0 */
   2199    000000              //#define Reserved          (0x0080u)
   2200    000000              #define RTCTEVIE            (0x0040u)     /* RTC
                                Time Event Interrupt Enable Flag */
   2201    000000              #define RTCAIE              (0x0020u)     /* RTC
                                Alarm Interrupt Enable Flag */
   2202    000000              #define RTCRDYIE            (0x0010u)     /* RTC
                                Ready Interrupt Enable Flag */
   2203    000000              //#define Reserved          (0x0008u)
   2204    000000              #define RTCTEVIFG           (0x0004u)     /* RTC
                                Time Event Interrupt Flag */
   2205    000000              #define RTCAIFG             (0x0002u)     /* RTC
                                Alarm Interrupt Flag */
   2206    000000              #define RTCRDYIFG           (0x0001u)     /* RTC
                                Ready Interrupt Flag */
   2207    000000              
   2208    000000              /* RTCCTL01 Control Bits */
   2209    000000              //#define Reserved          (0x0080u)
   2210    000000              #define RTCTEVIE_L          (0x0040u)     /* RTC
                                Time Event Interrupt Enable Flag */
   2211    000000              #define RTCAIE_L            (0x0020u)     /* RTC
                                Alarm Interrupt Enable Flag */
   2212    000000              #define RTCRDYIE_L          (0x0010u)     /* RTC
                                Ready Interrupt Enable Flag */
   2213    000000              //#define Reserved          (0x0008u)
   2214    000000              #define RTCTEVIFG_L         (0x0004u)     /* RTC
                                Time Event Interrupt Flag */
   2215    000000              #define RTCAIFG_L           (0x0002u)     /* RTC
                                Alarm Interrupt Flag */
   2216    000000              #define RTCRDYIFG_L         (0x0001u)     /* RTC
                                Ready Interrupt Flag */
   2217    000000              
   2218    000000              /* RTCCTL01 Control Bits */
   2219    000000              #define RTCBCD_H            (0x0080u)     /* RTC
                                BCD  0:Binary / 1:BCD */
   2220    000000              #define RTCHOLD_H           (0x0040u)     /* RTC
                                Hold */
   2221    000000              #define RTCMODE_H           (0x0020u)     /* RTC
                                Mode 0:Counter / 1: Calendar */
   2222    000000              #define RTCRDY_H            (0x0010u)     /* RTC
                                Ready */
   2223    000000              #define RTCSSEL1_H          (0x0008u)     /* RTC
                                Source Select 1 */
   2224    000000              #define RTCSSEL0_H          (0x0004u)     /* RTC
                                Source Select 0 */
   2225    000000              #define RTCTEV1_H           (0x0002u)     /* RTC
                                Time Event 1 */
   2226    000000              #define RTCTEV0_H           (0x0001u)     /* RTC
                                Time Event 0 */
   2227    000000              //#define Reserved          (0x0080u)
   2228    000000              //#define Reserved          (0x0008u)
   2229    000000              
   2230    000000              #define RTCSSEL_0           (0x0000u)     /* RTC
                                Source Select ACLK */
   2231    000000              #define RTCSSEL_1           (0x0400u)     /* RTC
                                Source Select SMCLK */
   2232    000000              #define RTCSSEL_2           (0x0800u)     /* RTC
                                Source Select RT1PS */
   2233    000000              #define RTCSSEL_3           (0x0C00u)     /* RTC
                                Source Select RT1PS */
   2234    000000              #define RTCSSEL__ACLK       (0x0000u)     /* RTC
                                Source Select ACLK */
   2235    000000              #define RTCSSEL__SMCLK      (0x0400u)     /* RTC
                                Source Select SMCLK */
   2236    000000              #define RTCSSEL__RT1PS      (0x0800u)     /* RTC
                                Source Select RT1PS */
   2237    000000              #define RTCTEV_0            (0x0000u)     /* RTC
                                Time Event: 0 (Min. changed) */
   2238    000000              #define RTCTEV_1            (0x0100u)     /* RTC
                                Time Event: 1 (Hour changed) */
   2239    000000              #define RTCTEV_2            (0x0200u)     /* RTC
                                Time Event: 2 (12:00 changed) */
   2240    000000              #define RTCTEV_3            (0x0300u)     /* RTC
                                Time Event: 3 (00:00 changed) */
   2241    000000              #define RTCTEV__MIN         (0x0000u)     /* RTC
                                Time Event: 0 (Min. changed) */
   2242    000000              #define RTCTEV__HOUR        (0x0100u)     /* RTC
                                Time Event: 1 (Hour changed) */
   2243    000000              #define RTCTEV__0000        (0x0200u)     /* RTC
                                Time Event: 2 (00:00 changed) */
   2244    000000              #define RTCTEV__1200        (0x0300u)     /* RTC
                                Time Event: 3 (12:00 changed) */
   2245    000000              
   2246    000000              /* RTCCTL23 Control Bits */
   2247    000000              #define RTCCALF1            (0x0200u)     /* RTC
                                Calibration Frequency Bit 1 */
   2248    000000              #define RTCCALF0            (0x0100u)     /* RTC
                                Calibration Frequency Bit 0 */
   2249    000000              #define RTCCALS             (0x0080u)     /* RTC
                                Calibration Sign */
   2250    000000              //#define Reserved          (0x0040u)
   2251    000000              #define RTCCAL5             (0x0020u)     /* RTC
                                Calibration Bit 5 */
   2252    000000              #define RTCCAL4             (0x0010u)     /* RTC
                                Calibration Bit 4 */
   2253    000000              #define RTCCAL3             (0x0008u)     /* RTC
                                Calibration Bit 3 */
   2254    000000              #define RTCCAL2             (0x0004u)     /* RTC
                                Calibration Bit 2 */
   2255    000000              #define RTCCAL1             (0x0002u)     /* RTC
                                Calibration Bit 1 */
   2256    000000              #define RTCCAL0             (0x0001u)     /* RTC
                                Calibration Bit 0 */
   2257    000000              
   2258    000000              /* RTCCTL23 Control Bits */
   2259    000000              #define RTCCALS_L           (0x0080u)     /* RTC
                                Calibration Sign */
   2260    000000              //#define Reserved          (0x0040u)
   2261    000000              #define RTCCAL5_L           (0x0020u)     /* RTC
                                Calibration Bit 5 */
   2262    000000              #define RTCCAL4_L           (0x0010u)     /* RTC
                                Calibration Bit 4 */
   2263    000000              #define RTCCAL3_L           (0x0008u)     /* RTC
                                Calibration Bit 3 */
   2264    000000              #define RTCCAL2_L           (0x0004u)     /* RTC
                                Calibration Bit 2 */
   2265    000000              #define RTCCAL1_L           (0x0002u)     /* RTC
                                Calibration Bit 1 */
   2266    000000              #define RTCCAL0_L           (0x0001u)     /* RTC
                                Calibration Bit 0 */
   2267    000000              
   2268    000000              /* RTCCTL23 Control Bits */
   2269    000000              #define RTCCALF1_H          (0x0002u)     /* RTC
                                Calibration Frequency Bit 1 */
   2270    000000              #define RTCCALF0_H          (0x0001u)     /* RTC
                                Calibration Frequency Bit 0 */
   2271    000000              //#define Reserved          (0x0040u)
   2272    000000              
   2273    000000              #define RTCCALF_0           (0x0000u)     /* RTC
                                Calibration Frequency: No Output */
   2274    000000              #define RTCCALF_1           (0x0100u)     /* RTC
                                Calibration Frequency: 512 Hz */
   2275    000000              #define RTCCALF_2           (0x0200u)     /* RTC
                                Calibration Frequency: 256 Hz */
   2276    000000              #define RTCCALF_3           (0x0300u)     /* RTC
                                Calibration Frequency: 1 Hz */
   2277    000000              
   2278    000000              /* RTCPS0CTL Control Bits */
   2279    000000              //#define Reserved          (0x8000u)
   2280    000000              #define RT0SSEL             (0x4000u)     /* RTC
                                Prescale Timer 0 Source Select 0:ACLK / 1:SMCLK
                                */
   2281    000000              #define RT0PSDIV2           (0x2000u)     /* RTC
                                Prescale Timer 0 Clock Divide Bit: 2 */
   2282    000000              #define RT0PSDIV1           (0x1000u)     /* RTC
                                Prescale Timer 0 Clock Divide Bit: 1 */
   2283    000000              #define RT0PSDIV0           (0x0800u)     /* RTC
                                Prescale Timer 0 Clock Divide Bit: 0 */
   2284    000000              //#define Reserved          (0x0400u)
   2285    000000              //#define Reserved          (0x0200u)
   2286    000000              #define RT0PSHOLD           (0x0100u)     /* RTC
                                Prescale Timer 0 Hold */
   2287    000000              //#define Reserved          (0x0080u)
   2288    000000              //#define Reserved          (0x0040u)
   2289    000000              //#define Reserved          (0x0020u)
   2290    000000              #define RT0IP2              (0x0010u)     /* RTC
                                Prescale Timer 0 Interrupt Interval Bit: 2
                                */
   2291    000000              #define RT0IP1              (0x0008u)     /* RTC
                                Prescale Timer 0 Interrupt Interval Bit: 1
                                */
   2292    000000              #define RT0IP0              (0x0004u)     /* RTC
                                Prescale Timer 0 Interrupt Interval Bit: 0
                                */
   2293    000000              #define RT0PSIE             (0x0002u)     /* RTC
                                Prescale Timer 0 Interrupt Enable Flag
                                */
   2294    000000              #define RT0PSIFG            (0x0001u)     /* RTC
                                Prescale Timer 0 Interrupt Flag */
   2295    000000              
   2296    000000              /* RTCPS0CTL Control Bits */
   2297    000000              //#define Reserved          (0x8000u)
   2298    000000              //#define Reserved          (0x0400u)
   2299    000000              //#define Reserved          (0x0200u)
   2300    000000              //#define Reserved          (0x0080u)
   2301    000000              //#define Reserved          (0x0040u)
   2302    000000              //#define Reserved          (0x0020u)
   2303    000000              #define RT0IP2_L            (0x0010u)     /* RTC
                                Prescale Timer 0 Interrupt Interval Bit: 2
                                */
   2304    000000              #define RT0IP1_L            (0x0008u)     /* RTC
                                Prescale Timer 0 Interrupt Interval Bit: 1
                                */
   2305    000000              #define RT0IP0_L            (0x0004u)     /* RTC
                                Prescale Timer 0 Interrupt Interval Bit: 0
                                */
   2306    000000              #define RT0PSIE_L           (0x0002u)     /* RTC
                                Prescale Timer 0 Interrupt Enable Flag
                                */
   2307    000000              #define RT0PSIFG_L          (0x0001u)     /* RTC
                                Prescale Timer 0 Interrupt Flag */
   2308    000000              
   2309    000000              /* RTCPS0CTL Control Bits */
   2310    000000              //#define Reserved          (0x8000u)
   2311    000000              #define RT0SSEL_H           (0x0040u)     /* RTC
                                Prescale Timer 0 Source Select 0:ACLK / 1:SMCLK
                                */
   2312    000000              #define RT0PSDIV2_H         (0x0020u)     /* RTC
                                Prescale Timer 0 Clock Divide Bit: 2 */
   2313    000000              #define RT0PSDIV1_H         (0x0010u)     /* RTC
                                Prescale Timer 0 Clock Divide Bit: 1 */
   2314    000000              #define RT0PSDIV0_H         (0x0008u)     /* RTC
                                Prescale Timer 0 Clock Divide Bit: 0 */
   2315    000000              //#define Reserved          (0x0400u)
   2316    000000              //#define Reserved          (0x0200u)
   2317    000000              #define RT0PSHOLD_H         (0x0001u)     /* RTC
                                Prescale Timer 0 Hold */
   2318    000000              //#define Reserved          (0x0080u)
   2319    000000              //#define Reserved          (0x0040u)
   2320    000000              //#define Reserved          (0x0020u)
   2321    000000              
   2322    000000              #define RT0IP_0             (0x0000u)     /* RTC
                                Prescale Timer 0 Interrupt Interval /2
                                */
   2323    000000              #define RT0IP_1             (0x0004u)     /* RTC
                                Prescale Timer 0 Interrupt Interval /4
                                */
   2324    000000              #define RT0IP_2             (0x0008u)     /* RTC
                                Prescale Timer 0 Interrupt Interval /8
                                */
   2325    000000              #define RT0IP_3             (0x000Cu)     /* RTC
                                Prescale Timer 0 Interrupt Interval /16
                                */
   2326    000000              #define RT0IP_4             (0x0010u)     /* RTC
                                Prescale Timer 0 Interrupt Interval /32
                                */
   2327    000000              #define RT0IP_5             (0x0014u)     /* RTC
                                Prescale Timer 0 Interrupt Interval /64
                                */
   2328    000000              #define RT0IP_6             (0x0018u)     /* RTC
                                Prescale Timer 0 Interrupt Interval /128
                                */
   2329    000000              #define RT0IP_7             (0x001Cu)     /* RTC
                                Prescale Timer 0 Interrupt Interval /256
                                */
   2330    000000              
   2331    000000              #define RT0PSDIV_0          (0x0000u)     /* RTC
                                Prescale Timer 0 Clock Divide /2 */
   2332    000000              #define RT0PSDIV_1          (0x0800u)     /* RTC
                                Prescale Timer 0 Clock Divide /4 */
   2333    000000              #define RT0PSDIV_2          (0x1000u)     /* RTC
                                Prescale Timer 0 Clock Divide /8 */
   2334    000000              #define RT0PSDIV_3          (0x1800u)     /* RTC
                                Prescale Timer 0 Clock Divide /16 */
   2335    000000              #define RT0PSDIV_4          (0x2000u)     /* RTC
                                Prescale Timer 0 Clock Divide /32 */
   2336    000000              #define RT0PSDIV_5          (0x2800u)     /* RTC
                                Prescale Timer 0 Clock Divide /64 */
   2337    000000              #define RT0PSDIV_6          (0x3000u)     /* RTC
                                Prescale Timer 0 Clock Divide /128 */
   2338    000000              #define RT0PSDIV_7          (0x3800u)     /* RTC
                                Prescale Timer 0 Clock Divide /256 */
   2339    000000              
   2340    000000              /* RTCPS1CTL Control Bits */
   2341    000000              #define RT1SSEL1            (0x8000u)     /* RTC
                                Prescale Timer 1 Source Select Bit 1 */
   2342    000000              #define RT1SSEL0            (0x4000u)     /* RTC
                                Prescale Timer 1 Source Select Bit 0 */
   2343    000000              #define RT1PSDIV2           (0x2000u)     /* RTC
                                Prescale Timer 1 Clock Divide Bit: 2 */
   2344    000000              #define RT1PSDIV1           (0x1000u)     /* RTC
                                Prescale Timer 1 Clock Divide Bit: 1 */
   2345    000000              #define RT1PSDIV0           (0x0800u)     /* RTC
                                Prescale Timer 1 Clock Divide Bit: 0 */
   2346    000000              //#define Reserved          (0x0400u)
   2347    000000              //#define Reserved          (0x0200u)
   2348    000000              #define RT1PSHOLD           (0x0100u)     /* RTC
                                Prescale Timer 1 Hold */
   2349    000000              //#define Reserved          (0x0080u)
   2350    000000              //#define Reserved          (0x0040u)
   2351    000000              //#define Reserved          (0x0020u)
   2352    000000              #define RT1IP2              (0x0010u)     /* RTC
                                Prescale Timer 1 Interrupt Interval Bit: 2
                                */
   2353    000000              #define RT1IP1              (0x0008u)     /* RTC
                                Prescale Timer 1 Interrupt Interval Bit: 1
                                */
   2354    000000              #define RT1IP0              (0x0004u)     /* RTC
                                Prescale Timer 1 Interrupt Interval Bit: 0
                                */
   2355    000000              #define RT1PSIE             (0x0002u)     /* RTC
                                Prescale Timer 1 Interrupt Enable Flag
                                */
   2356    000000              #define RT1PSIFG            (0x0001u)     /* RTC
                                Prescale Timer 1 Interrupt Flag */
   2357    000000              
   2358    000000              /* RTCPS1CTL Control Bits */
   2359    000000              //#define Reserved          (0x0400u)
   2360    000000              //#define Reserved          (0x0200u)
   2361    000000              //#define Reserved          (0x0080u)
   2362    000000              //#define Reserved          (0x0040u)
   2363    000000              //#define Reserved          (0x0020u)
   2364    000000              #define RT1IP2_L            (0x0010u)     /* RTC
                                Prescale Timer 1 Interrupt Interval Bit: 2
                                */
   2365    000000              #define RT1IP1_L            (0x0008u)     /* RTC
                                Prescale Timer 1 Interrupt Interval Bit: 1
                                */
   2366    000000              #define RT1IP0_L            (0x0004u)     /* RTC
                                Prescale Timer 1 Interrupt Interval Bit: 0
                                */
   2367    000000              #define RT1PSIE_L           (0x0002u)     /* RTC
                                Prescale Timer 1 Interrupt Enable Flag
                                */
   2368    000000              #define RT1PSIFG_L          (0x0001u)     /* RTC
                                Prescale Timer 1 Interrupt Flag */
   2369    000000              
   2370    000000              /* RTCPS1CTL Control Bits */
   2371    000000              #define RT1SSEL1_H          (0x0080u)     /* RTC
                                Prescale Timer 1 Source Select Bit 1 */
   2372    000000              #define RT1SSEL0_H          (0x0040u)     /* RTC
                                Prescale Timer 1 Source Select Bit 0 */
   2373    000000              #define RT1PSDIV2_H         (0x0020u)     /* RTC
                                Prescale Timer 1 Clock Divide Bit: 2 */
   2374    000000              #define RT1PSDIV1_H         (0x0010u)     /* RTC
                                Prescale Timer 1 Clock Divide Bit: 1 */
   2375    000000              #define RT1PSDIV0_H         (0x0008u)     /* RTC
                                Prescale Timer 1 Clock Divide Bit: 0 */
   2376    000000              //#define Reserved          (0x0400u)
   2377    000000              //#define Reserved          (0x0200u)
   2378    000000              #define RT1PSHOLD_H         (0x0001u)     /* RTC
                                Prescale Timer 1 Hold */
   2379    000000              //#define Reserved          (0x0080u)
   2380    000000              //#define Reserved          (0x0040u)
   2381    000000              //#define Reserved          (0x0020u)
   2382    000000              
   2383    000000              #define RT1IP_0             (0x0000u)     /* RTC
                                Prescale Timer 1 Interrupt Interval /2
                                */
   2384    000000              #define RT1IP_1             (0x0004u)     /* RTC
                                Prescale Timer 1 Interrupt Interval /4
                                */
   2385    000000              #define RT1IP_2             (0x0008u)     /* RTC
                                Prescale Timer 1 Interrupt Interval /8
                                */
   2386    000000              #define RT1IP_3             (0x000Cu)     /* RTC
                                Prescale Timer 1 Interrupt Interval /16
                                */
   2387    000000              #define RT1IP_4             (0x0010u)     /* RTC
                                Prescale Timer 1 Interrupt Interval /32
                                */
   2388    000000              #define RT1IP_5             (0x0014u)     /* RTC
                                Prescale Timer 1 Interrupt Interval /64
                                */
   2389    000000              #define RT1IP_6             (0x0018u)     /* RTC
                                Prescale Timer 1 Interrupt Interval /128
                                */
   2390    000000              #define RT1IP_7             (0x001Cu)     /* RTC
                                Prescale Timer 1 Interrupt Interval /256
                                */
   2391    000000              
   2392    000000              #define RT1PSDIV_0          (0x0000u)     /* RTC
                                Prescale Timer 1 Clock Divide /2 */
   2393    000000              #define RT1PSDIV_1          (0x0800u)     /* RTC
                                Prescale Timer 1 Clock Divide /4 */
   2394    000000              #define RT1PSDIV_2          (0x1000u)     /* RTC
                                Prescale Timer 1 Clock Divide /8 */
   2395    000000              #define RT1PSDIV_3          (0x1800u)     /* RTC
                                Prescale Timer 1 Clock Divide /16 */
   2396    000000              #define RT1PSDIV_4          (0x2000u)     /* RTC
                                Prescale Timer 1 Clock Divide /32 */
   2397    000000              #define RT1PSDIV_5          (0x2800u)     /* RTC
                                Prescale Timer 1 Clock Divide /64 */
   2398    000000              #define RT1PSDIV_6          (0x3000u)     /* RTC
                                Prescale Timer 1 Clock Divide /128 */
   2399    000000              #define RT1PSDIV_7          (0x3800u)     /* RTC
                                Prescale Timer 1 Clock Divide /256 */
   2400    000000              
   2401    000000              #define RT1SSEL_0           (0x0000u)     /* RTC
                                Prescale Timer Source Select ACLK */
   2402    000000              #define RT1SSEL_1           (0x4000u)     /* RTC
                                Prescale Timer Source Select SMCLK */
   2403    000000              #define RT1SSEL_2           (0x8000u)     /* RTC
                                Prescale Timer Source Select RT0PS */
   2404    000000              #define RT1SSEL_3           (0xC000u)     /* RTC
                                Prescale Timer Source Select RT0PS */
   2405    000000              
   2406    000000              /* RTC Definitions */
   2407    000000              #define RTCIV_NONE          (0x0000u)     /* No
                                Interrupt pending */
   2408    000000              #define RTCIV_RTCRDYIFG     (0x0002u)     /* RTC
                                ready: RTCRDYIFG */
   2409    000000              #define RTCIV_RTCTEVIFG     (0x0004u)     /* RTC
                                interval timer: RTCTEVIFG */
   2410    000000              #define RTCIV_RTCAIFG       (0x0006u)     /* RTC
                                user alarm: RTCAIFG */
   2411    000000              #define RTCIV_RT0PSIFG      (0x0008u)     /* RTC
                                prescaler 0: RT0PSIFG */
   2412    000000              #define RTCIV_RT1PSIFG      (0x000Au)     /* RTC
                                prescaler 1: RT1PSIFG */
   2413    000000              
   2414    000000              /* Legacy Definitions */
   2415    000000              #define RTC_NONE            (0x0000u)     /* No
                                Interrupt pending */
   2416    000000              #define RTC_RTCRDYIFG       (0x0002u)     /* RTC
                                ready: RTCRDYIFG */
   2417    000000              #define RTC_RTCTEVIFG       (0x0004u)     /* RTC
                                interval timer: RTCTEVIFG */
   2418    000000              #define RTC_RTCAIFG         (0x0006u)     /* RTC
                                user alarm: RTCAIFG */
   2419    000000              #define RTC_RT0PSIFG        (0x0008u)     /* RTC
                                prescaler 0: RT0PSIFG */
   2420    000000              #define RTC_RT1PSIFG        (0x000Au)     /* RTC
                                prescaler 1: RT1PSIFG */
   2421    000000              
   2422    000000              /***********************************************
                               *************
   2423    000000              * SFR - Special Function Register Module
   2424    000000              ************************************************
                               ************/
   2425    000000              #define __MSP430_HAS_SFR__            /*
                                Definition to show that Module is available
                                */
   2426    000000              #define __MSP430_BASEADDRESS_SFR__ 0x0100
   2427    000000              
   2428    000000              #define  SFRIE1_             (0x0100u)  /*
                                Interrupt Enable 1 */
   2429    000000              DEFCW(   SFRIE1            , SFRIE1_)
   2429.1  000000              sfrb SFRIE1_L = (0x0100u);
   2429.2  000000              sfrb SFRIE1_H = (0x0100u)+1;
   2429.3  000000              sfrw SFRIE1   = (0x0100u);
   2429.4  000000                    endm
   2430    000000              
   2431    000000              /* SFRIE1 Control Bits */
   2432    000000              #define WDTIE               (0x0001u)  /* WDT
                                Interrupt Enable */
   2433    000000              #define OFIE                (0x0002u)  /* Osc
                                Fault Enable */
   2434    000000              //#define Reserved          (0x0004u)
   2435    000000              #define VMAIE               (0x0008u)  /* Vacant
                                Memory Interrupt Enable */
   2436    000000              #define NMIIE               (0x0010u)  /* NMI
                                Interrupt Enable */
   2437    000000              #define ACCVIE              (0x0020u)  /* Flash
                                Access Violation Interrupt Enable */
   2438    000000              #define JMBINIE             (0x0040u)  /* JTAG
                                Mail Box input Interrupt Enable */
   2439    000000              #define JMBOUTIE            (0x0080u)  /* JTAG
                                Mail Box output Interrupt Enable */
   2440    000000              
   2441    000000              #define WDTIE_L             (0x0001u)  /* WDT
                                Interrupt Enable */
   2442    000000              #define OFIE_L              (0x0002u)  /* Osc
                                Fault Enable */
   2443    000000              //#define Reserved          (0x0004u)
   2444    000000              #define VMAIE_L             (0x0008u)  /* Vacant
                                Memory Interrupt Enable */
   2445    000000              #define NMIIE_L             (0x0010u)  /* NMI
                                Interrupt Enable */
   2446    000000              #define ACCVIE_L            (0x0020u)  /* Flash
                                Access Violation Interrupt Enable */
   2447    000000              #define JMBINIE_L           (0x0040u)  /* JTAG
                                Mail Box input Interrupt Enable */
   2448    000000              #define JMBOUTIE_L          (0x0080u)  /* JTAG
                                Mail Box output Interrupt Enable */
   2449    000000              
   2450    000000              //#define Reserved          (0x0004u)
   2451    000000              
   2452    000000              #define  SFRIFG1_            (0x0102u)  /*
                                Interrupt Flag 1 */
   2453    000000              DEFCW(   SFRIFG1           , SFRIFG1_)
   2453.1  000000              sfrb SFRIFG1_L = (0x0102u);
   2453.2  000000              sfrb SFRIFG1_H = (0x0102u)+1;
   2453.3  000000              sfrw SFRIFG1   = (0x0102u);
   2453.4  000000                    endm
   2454    000000              /* SFRIFG1 Control Bits */
   2455    000000              #define WDTIFG              (0x0001u)  /* WDT
                                Interrupt Flag */
   2456    000000              #define OFIFG               (0x0002u)  /* Osc
                                Fault Flag */
   2457    000000              //#define Reserved          (0x0004u)
   2458    000000              #define VMAIFG              (0x0008u)  /* Vacant
                                Memory Interrupt Flag */
   2459    000000              #define NMIIFG              (0x0010u)  /* NMI
                                Interrupt Flag */
   2460    000000              //#define Reserved          (0x0020u)
   2461    000000              #define JMBINIFG            (0x0040u)  /* JTAG
                                Mail Box input Interrupt Flag */
   2462    000000              #define JMBOUTIFG           (0x0080u)  /* JTAG
                                Mail Box output Interrupt Flag */
   2463    000000              
   2464    000000              #define WDTIFG_L            (0x0001u)  /* WDT
                                Interrupt Flag */
   2465    000000              #define OFIFG_L             (0x0002u)  /* Osc
                                Fault Flag */
   2466    000000              //#define Reserved          (0x0004u)
   2467    000000              #define VMAIFG_L            (0x0008u)  /* Vacant
                                Memory Interrupt Flag */
   2468    000000              #define NMIIFG_L            (0x0010u)  /* NMI
                                Interrupt Flag */
   2469    000000              //#define Reserved          (0x0020u)
   2470    000000              #define JMBINIFG_L          (0x0040u)  /* JTAG
                                Mail Box input Interrupt Flag */
   2471    000000              #define JMBOUTIFG_L         (0x0080u)  /* JTAG
                                Mail Box output Interrupt Flag */
   2472    000000              
   2473    000000              //#define Reserved          (0x0004u)
   2474    000000              //#define Reserved          (0x0020u)
   2475    000000              
   2476    000000              #define  SFRRPCR_            (0x0104u)  /* RESET
                                Pin Control Register */
   2477    000000              DEFCW(   SFRRPCR           , SFRRPCR_)
   2477.1  000000              sfrb SFRRPCR_L = (0x0104u);
   2477.2  000000              sfrb SFRRPCR_H = (0x0104u)+1;
   2477.3  000000              sfrw SFRRPCR   = (0x0104u);
   2477.4  000000                    endm
   2478    000000              /* SFRRPCR Control Bits */
   2479    000000              #define SYSNMI              (0x0001u)  /* NMI
                                select */
   2480    000000              #define SYSNMIIES           (0x0002u)  /* NMI
                                edge select */
   2481    000000              #define SYSRSTUP            (0x0004u)  /* RESET
                                Pin pull down/up select */
   2482    000000              #define SYSRSTRE            (0x0008u)  /* RESET
                                Pin Resistor enable */
   2483    000000              
   2484    000000              #define SYSNMI_L            (0x0001u)  /* NMI
                                select */
   2485    000000              #define SYSNMIIES_L         (0x0002u)  /* NMI
                                edge select */
   2486    000000              #define SYSRSTUP_L          (0x0004u)  /* RESET
                                Pin pull down/up select */
   2487    000000              #define SYSRSTRE_L          (0x0008u)  /* RESET
                                Pin Resistor enable */
   2488    000000              
   2489    000000              /***********************************************
                               *************
   2490    000000              * SYS - System Module
   2491    000000              ************************************************
                               ************/
   2492    000000              #define __MSP430_HAS_SYS__            /*
                                Definition to show that Module is available
                                */
   2493    000000              #define __MSP430_BASEADDRESS_SYS__ 0x0180
   2494    000000              
   2495    000000              #define  SYSCTL_             (0x0180u)  /*
                                System control */
   2496    000000              DEFCW(   SYSCTL            , SYSCTL_)
   2496.1  000000              sfrb SYSCTL_L = (0x0180u);
   2496.2  000000              sfrb SYSCTL_H = (0x0180u)+1;
   2496.3  000000              sfrw SYSCTL   = (0x0180u);
   2496.4  000000                    endm
   2497    000000              #define  SYSBSLC_            (0x0182u)  /* Boot
                                strap configuration area */
   2498    000000              DEFCW(   SYSBSLC           , SYSBSLC_)
   2498.1  000000              sfrb SYSBSLC_L = (0x0182u);
   2498.2  000000              sfrb SYSBSLC_H = (0x0182u)+1;
   2498.3  000000              sfrw SYSBSLC   = (0x0182u);
   2498.4  000000                    endm
   2499    000000              #define  SYSJMBC_            (0x0186u)  /* JTAG
                                mailbox control */
   2500    000000              DEFCW(   SYSJMBC           , SYSJMBC_)
   2500.1  000000              sfrb SYSJMBC_L = (0x0186u);
   2500.2  000000              sfrb SYSJMBC_H = (0x0186u)+1;
   2500.3  000000              sfrw SYSJMBC   = (0x0186u);
   2500.4  000000                    endm
   2501    000000              #define  SYSJMBI0_           (0x0188u)  /* JTAG
                                mailbox input 0 */
   2502    000000              DEFCW(   SYSJMBI0          , SYSJMBI0_)
   2502.1  000000              sfrb SYSJMBI0_L = (0x0188u);
   2502.2  000000              sfrb SYSJMBI0_H = (0x0188u)+1;
   2502.3  000000              sfrw SYSJMBI0   = (0x0188u);
   2502.4  000000                    endm
   2503    000000              #define  SYSJMBI1_           (0x018Au)  /* JTAG
                                mailbox input 1 */
   2504    000000              DEFCW(   SYSJMBI1          , SYSJMBI1_)
   2504.1  000000              sfrb SYSJMBI1_L = (0x018Au);
   2504.2  000000              sfrb SYSJMBI1_H = (0x018Au)+1;
   2504.3  000000              sfrw SYSJMBI1   = (0x018Au);
   2504.4  000000                    endm
   2505    000000              #define  SYSJMBO0_           (0x018Cu)  /* JTAG
                                mailbox output 0 */
   2506    000000              DEFCW(   SYSJMBO0          , SYSJMBO0_)
   2506.1  000000              sfrb SYSJMBO0_L = (0x018Cu);
   2506.2  000000              sfrb SYSJMBO0_H = (0x018Cu)+1;
   2506.3  000000              sfrw SYSJMBO0   = (0x018Cu);
   2506.4  000000                    endm
   2507    000000              #define  SYSJMBO1_           (0x018Eu)  /* JTAG
                                mailbox output 1 */
   2508    000000              DEFCW(   SYSJMBO1          , SYSJMBO1_)
   2508.1  000000              sfrb SYSJMBO1_L = (0x018Eu);
   2508.2  000000              sfrb SYSJMBO1_H = (0x018Eu)+1;
   2508.3  000000              sfrw SYSJMBO1   = (0x018Eu);
   2508.4  000000                    endm
   2509    000000              
   2510    000000              #define  SYSBERRIV_          (0x0198u)  /* Bus
                                Error vector generator */
   2511    000000              DEFCW(   SYSBERRIV         , SYSBERRIV_)
   2511.1  000000              sfrb SYSBERRIV_L = (0x0198u);
   2511.2  000000              sfrb SYSBERRIV_H = (0x0198u)+1;
   2511.3  000000              sfrw SYSBERRIV   = (0x0198u);
   2511.4  000000                    endm
   2512    000000              #define  SYSUNIV_            (0x019Au)  /* User
                                NMI vector generator */
   2513    000000              DEFCW(   SYSUNIV           , SYSUNIV_)
   2513.1  000000              sfrb SYSUNIV_L = (0x019Au);
   2513.2  000000              sfrb SYSUNIV_H = (0x019Au)+1;
   2513.3  000000              sfrw SYSUNIV   = (0x019Au);
   2513.4  000000                    endm
   2514    000000              #define  SYSSNIV_            (0x019Cu)  /*
                                System NMI vector generator */
   2515    000000              DEFCW(   SYSSNIV           , SYSSNIV_)
   2515.1  000000              sfrb SYSSNIV_L = (0x019Cu);
   2515.2  000000              sfrb SYSSNIV_H = (0x019Cu)+1;
   2515.3  000000              sfrw SYSSNIV   = (0x019Cu);
   2515.4  000000                    endm
   2516    000000              #define  SYSRSTIV_           (0x019Eu)  /* Reset
                                vector generator */
   2517    000000              DEFCW(   SYSRSTIV          , SYSRSTIV_)
   2517.1  000000              sfrb SYSRSTIV_L = (0x019Eu);
   2517.2  000000              sfrb SYSRSTIV_H = (0x019Eu)+1;
   2517.3  000000              sfrw SYSRSTIV   = (0x019Eu);
   2517.4  000000                    endm
   2518    000000              
   2519    000000              /* SYSCTL Control Bits */
   2520    000000              #define SYSRIVECT           (0x0001u)  /* SYS -
                                RAM based interrupt vectors */
   2521    000000              //#define RESERVED            (0x0002u)  /* SYS
                                - Reserved */
   2522    000000              #define SYSPMMPE            (0x0004u)  /* SYS -
                                PMM access protect */
   2523    000000              //#define RESERVED            (0x0008u)  /* SYS
                                - Reserved */
   2524    000000              #define SYSBSLIND           (0x0010u)  /* SYS -
                                TCK/RST indication detected */
   2525    000000              #define SYSJTAGPIN          (0x0020u)  /* SYS -
                                Dedicated JTAG pins enabled */
   2526    000000              //#define RESERVED            (0x0040u)  /* SYS
                                - Reserved */
   2527    000000              //#define RESERVED            (0x0080u)  /* SYS
                                - Reserved */
   2528    000000              //#define RESERVED            (0x0100u)  /* SYS
                                - Reserved */
   2529    000000              //#define RESERVED            (0x0200u)  /* SYS
                                - Reserved */
   2530    000000              //#define RESERVED            (0x0400u)  /* SYS
                                - Reserved */
   2531    000000              //#define RESERVED            (0x0800u)  /* SYS
                                - Reserved */
   2532    000000              //#define RESERVED            (0x1000u)  /* SYS
                                - Reserved */
   2533    000000              //#define RESERVED            (0x2000u)  /* SYS
                                - Reserved */
   2534    000000              //#define RESERVED            (0x4000u)  /* SYS
                                - Reserved */
   2535    000000              //#define RESERVED            (0x8000u)  /* SYS
                                - Reserved */
   2536    000000              
   2537    000000              /* SYSCTL Control Bits */
   2538    000000              #define SYSRIVECT_L         (0x0001u)  /* SYS -
                                RAM based interrupt vectors */
   2539    000000              //#define RESERVED            (0x0002u)  /* SYS
                                - Reserved */
   2540    000000              #define SYSPMMPE_L          (0x0004u)  /* SYS -
                                PMM access protect */
   2541    000000              //#define RESERVED            (0x0008u)  /* SYS
                                - Reserved */
   2542    000000              #define SYSBSLIND_L         (0x0010u)  /* SYS -
                                TCK/RST indication detected */
   2543    000000              #define SYSJTAGPIN_L        (0x0020u)  /* SYS -
                                Dedicated JTAG pins enabled */
   2544    000000              //#define RESERVED            (0x0040u)  /* SYS
                                - Reserved */
   2545    000000              //#define RESERVED            (0x0080u)  /* SYS
                                - Reserved */
   2546    000000              //#define RESERVED            (0x0100u)  /* SYS
                                - Reserved */
   2547    000000              //#define RESERVED            (0x0200u)  /* SYS
                                - Reserved */
   2548    000000              //#define RESERVED            (0x0400u)  /* SYS
                                - Reserved */
   2549    000000              //#define RESERVED            (0x0800u)  /* SYS
                                - Reserved */
   2550    000000              //#define RESERVED            (0x1000u)  /* SYS
                                - Reserved */
   2551    000000              //#define RESERVED            (0x2000u)  /* SYS
                                - Reserved */
   2552    000000              //#define RESERVED            (0x4000u)  /* SYS
                                - Reserved */
   2553    000000              //#define RESERVED            (0x8000u)  /* SYS
                                - Reserved */
   2554    000000              
   2555    000000              /* SYSCTL Control Bits */
   2556    000000              //#define RESERVED            (0x0002u)  /* SYS
                                - Reserved */
   2557    000000              //#define RESERVED            (0x0008u)  /* SYS
                                - Reserved */
   2558    000000              //#define RESERVED            (0x0040u)  /* SYS
                                - Reserved */
   2559    000000              //#define RESERVED            (0x0080u)  /* SYS
                                - Reserved */
   2560    000000              //#define RESERVED            (0x0100u)  /* SYS
                                - Reserved */
   2561    000000              //#define RESERVED            (0x0200u)  /* SYS
                                - Reserved */
   2562    000000              //#define RESERVED            (0x0400u)  /* SYS
                                - Reserved */
   2563    000000              //#define RESERVED            (0x0800u)  /* SYS
                                - Reserved */
   2564    000000              //#define RESERVED            (0x1000u)  /* SYS
                                - Reserved */
   2565    000000              //#define RESERVED            (0x2000u)  /* SYS
                                - Reserved */
   2566    000000              //#define RESERVED            (0x4000u)  /* SYS
                                - Reserved */
   2567    000000              //#define RESERVED            (0x8000u)  /* SYS
                                - Reserved */
   2568    000000              
   2569    000000              /* SYSBSLC Control Bits */
   2570    000000              #define SYSBSLSIZE0         (0x0001u)  /* SYS -
                                BSL Protection Size 0 */
   2571    000000              #define SYSBSLSIZE1         (0x0002u)  /* SYS -
                                BSL Protection Size 1 */
   2572    000000              #define SYSBSLR             (0x0004u)  /* SYS -
                                RAM assigned to BSL */
   2573    000000              //#define RESERVED            (0x0008u)  /* SYS
                                - Reserved */
   2574    000000              //#define RESERVED            (0x0010u)  /* SYS
                                - Reserved */
   2575    000000              //#define RESERVED            (0x0020u)  /* SYS
                                - Reserved */
   2576    000000              //#define RESERVED            (0x0040u)  /* SYS
                                - Reserved */
   2577    000000              //#define RESERVED            (0x0080u)  /* SYS
                                - Reserved */
   2578    000000              //#define RESERVED            (0x0100u)  /* SYS
                                - Reserved */
   2579    000000              //#define RESERVED            (0x0200u)  /* SYS
                                - Reserved */
   2580    000000              //#define RESERVED            (0x0400u)  /* SYS
                                - Reserved */
   2581    000000              //#define RESERVED            (0x0800u)  /* SYS
                                - Reserved */
   2582    000000              //#define RESERVED            (0x1000u)  /* SYS
                                - Reserved */
   2583    000000              //#define RESERVED            (0x2000u)  /* SYS
                                - Reserved */
   2584    000000              #define SYSBSLOFF           (0x4000u)  /* SYS -
                                BSL Memeory disabled */
   2585    000000              #define SYSBSLPE            (0x8000u)  /* SYS -
                                BSL Memory protection enabled */
   2586    000000              
   2587    000000              /* SYSBSLC Control Bits */
   2588    000000              #define SYSBSLSIZE0_L       (0x0001u)  /* SYS -
                                BSL Protection Size 0 */
   2589    000000              #define SYSBSLSIZE1_L       (0x0002u)  /* SYS -
                                BSL Protection Size 1 */
   2590    000000              #define SYSBSLR_L           (0x0004u)  /* SYS -
                                RAM assigned to BSL */
   2591    000000              //#define RESERVED            (0x0008u)  /* SYS
                                - Reserved */
   2592    000000              //#define RESERVED            (0x0010u)  /* SYS
                                - Reserved */
   2593    000000              //#define RESERVED            (0x0020u)  /* SYS
                                - Reserved */
   2594    000000              //#define RESERVED            (0x0040u)  /* SYS
                                - Reserved */
   2595    000000              //#define RESERVED            (0x0080u)  /* SYS
                                - Reserved */
   2596    000000              //#define RESERVED            (0x0100u)  /* SYS
                                - Reserved */
   2597    000000              //#define RESERVED            (0x0200u)  /* SYS
                                - Reserved */
   2598    000000              //#define RESERVED            (0x0400u)  /* SYS
                                - Reserved */
   2599    000000              //#define RESERVED            (0x0800u)  /* SYS
                                - Reserved */
   2600    000000              //#define RESERVED            (0x1000u)  /* SYS
                                - Reserved */
   2601    000000              //#define RESERVED            (0x2000u)  /* SYS
                                - Reserved */
   2602    000000              
   2603    000000              /* SYSBSLC Control Bits */
   2604    000000              //#define RESERVED            (0x0008u)  /* SYS
                                - Reserved */
   2605    000000              //#define RESERVED            (0x0010u)  /* SYS
                                - Reserved */
   2606    000000              //#define RESERVED            (0x0020u)  /* SYS
                                - Reserved */
   2607    000000              //#define RESERVED            (0x0040u)  /* SYS
                                - Reserved */
   2608    000000              //#define RESERVED            (0x0080u)  /* SYS
                                - Reserved */
   2609    000000              //#define RESERVED            (0x0100u)  /* SYS
                                - Reserved */
   2610    000000              //#define RESERVED            (0x0200u)  /* SYS
                                - Reserved */
   2611    000000              //#define RESERVED            (0x0400u)  /* SYS
                                - Reserved */
   2612    000000              //#define RESERVED            (0x0800u)  /* SYS
                                - Reserved */
   2613    000000              //#define RESERVED            (0x1000u)  /* SYS
                                - Reserved */
   2614    000000              //#define RESERVED            (0x2000u)  /* SYS
                                - Reserved */
   2615    000000              #define SYSBSLOFF_H         (0x0040u)  /* SYS -
                                BSL Memeory disabled */
   2616    000000              #define SYSBSLPE_H          (0x0080u)  /* SYS -
                                BSL Memory protection enabled */
   2617    000000              
   2618    000000              /* SYSJMBC Control Bits */
   2619    000000              #define JMBIN0FG            (0x0001u)  /* SYS -
                                Incoming JTAG Mailbox 0 Flag */
   2620    000000              #define JMBIN1FG            (0x0002u)  /* SYS -
                                Incoming JTAG Mailbox 1 Flag */
   2621    000000              #define JMBOUT0FG           (0x0004u)  /* SYS -
                                Outgoing JTAG Mailbox 0 Flag */
   2622    000000              #define JMBOUT1FG           (0x0008u)  /* SYS -
                                Outgoing JTAG Mailbox 1 Flag */
   2623    000000              #define JMBMODE             (0x0010u)  /* SYS -
                                JMB 16/32 Bit Mode */
   2624    000000              //#define RESERVED            (0x0020u)  /* SYS
                                - Reserved */
   2625    000000              #define JMBCLR0OFF          (0x0040u)  /* SYS -
                                Incoming JTAG Mailbox 0 Flag auto-clear disalbe
                                */
   2626    000000              #define JMBCLR1OFF          (0x0080u)  /* SYS -
                                Incoming JTAG Mailbox 1 Flag auto-clear disalbe
                                */
   2627    000000              //#define RESERVED            (0x0100u)  /* SYS
                                - Reserved */
   2628    000000              //#define RESERVED            (0x0200u)  /* SYS
                                - Reserved */
   2629    000000              //#define RESERVED            (0x0400u)  /* SYS
                                - Reserved */
   2630    000000              //#define RESERVED            (0x0800u)  /* SYS
                                - Reserved */
   2631    000000              //#define RESERVED            (0x1000u)  /* SYS
                                - Reserved */
   2632    000000              //#define RESERVED            (0x2000u)  /* SYS
                                - Reserved */
   2633    000000              //#define RESERVED            (0x4000u)  /* SYS
                                - Reserved */
   2634    000000              //#define RESERVED            (0x8000u)  /* SYS
                                - Reserved */
   2635    000000              
   2636    000000              /* SYSJMBC Control Bits */
   2637    000000              #define JMBIN0FG_L          (0x0001u)  /* SYS -
                                Incoming JTAG Mailbox 0 Flag */
   2638    000000              #define JMBIN1FG_L          (0x0002u)  /* SYS -
                                Incoming JTAG Mailbox 1 Flag */
   2639    000000              #define JMBOUT0FG_L         (0x0004u)  /* SYS -
                                Outgoing JTAG Mailbox 0 Flag */
   2640    000000              #define JMBOUT1FG_L         (0x0008u)  /* SYS -
                                Outgoing JTAG Mailbox 1 Flag */
   2641    000000              #define JMBMODE_L           (0x0010u)  /* SYS -
                                JMB 16/32 Bit Mode */
   2642    000000              //#define RESERVED            (0x0020u)  /* SYS
                                - Reserved */
   2643    000000              #define JMBCLR0OFF_L        (0x0040u)  /* SYS -
                                Incoming JTAG Mailbox 0 Flag auto-clear disalbe
                                */
   2644    000000              #define JMBCLR1OFF_L        (0x0080u)  /* SYS -
                                Incoming JTAG Mailbox 1 Flag auto-clear disalbe
                                */
   2645    000000              //#define RESERVED            (0x0100u)  /* SYS
                                - Reserved */
   2646    000000              //#define RESERVED            (0x0200u)  /* SYS
                                - Reserved */
   2647    000000              //#define RESERVED            (0x0400u)  /* SYS
                                - Reserved */
   2648    000000              //#define RESERVED            (0x0800u)  /* SYS
                                - Reserved */
   2649    000000              //#define RESERVED            (0x1000u)  /* SYS
                                - Reserved */
   2650    000000              //#define RESERVED            (0x2000u)  /* SYS
                                - Reserved */
   2651    000000              //#define RESERVED            (0x4000u)  /* SYS
                                - Reserved */
   2652    000000              //#define RESERVED            (0x8000u)  /* SYS
                                - Reserved */
   2653    000000              
   2654    000000              /* SYSJMBC Control Bits */
   2655    000000              //#define RESERVED            (0x0020u)  /* SYS
                                - Reserved */
   2656    000000              //#define RESERVED            (0x0100u)  /* SYS
                                - Reserved */
   2657    000000              //#define RESERVED            (0x0200u)  /* SYS
                                - Reserved */
   2658    000000              //#define RESERVED            (0x0400u)  /* SYS
                                - Reserved */
   2659    000000              //#define RESERVED            (0x0800u)  /* SYS
                                - Reserved */
   2660    000000              //#define RESERVED            (0x1000u)  /* SYS
                                - Reserved */
   2661    000000              //#define RESERVED            (0x2000u)  /* SYS
                                - Reserved */
   2662    000000              //#define RESERVED            (0x4000u)  /* SYS
                                - Reserved */
   2663    000000              //#define RESERVED            (0x8000u)  /* SYS
                                - Reserved */
   2664    000000              
   2665    000000              /* SYSUNIV Definitions */
   2666    000000              #define SYSUNIV_NONE       (0x0000u)    /* No
                                Interrupt pending */
   2667    000000              #define SYSUNIV_NMIIFG     (0x0002u)    /*
                                SYSUNIV : NMIIFG */
   2668    000000              #define SYSUNIV_OFIFG      (0x0004u)    /*
                                SYSUNIV : Osc. Fail - OFIFG */
   2669    000000              #define SYSUNIV_ACCVIFG    (0x0006u)    /*
                                SYSUNIV : Access Violation - ACCVIFG */
   2670    000000              #define SYSUNIV_BUSIFG     (0x0008u)    /*
                                SYSUNIV : Bus Error */
   2671    000000              #define SYSUNIV_SYSBUSIV   (0x0008u)    /*
                                SYSUNIV : Bus Error - SYSBERRIFG (legacy)
                                */
   2672    000000              
   2673    000000              /* SYSSNIV Definitions */
   2674    000000              #define SYSSNIV_NONE       (0x0000u)    /* No
                                Interrupt pending */
   2675    000000              #define SYSSNIV_SVMLIFG    (0x0002u)    /*
                                SYSSNIV : SVMLIFG */
   2676    000000              #define SYSSNIV_SVMHIFG    (0x0004u)    /*
                                SYSSNIV : SVMHIFG */
   2677    000000              #define SYSSNIV_DLYLIFG    (0x0006u)    /*
                                SYSSNIV : DLYLIFG */
   2678    000000              #define SYSSNIV_DLYHIFG    (0x0008u)    /*
                                SYSSNIV : DLYHIFG */
   2679    000000              #define SYSSNIV_VMAIFG     (0x000Au)    /*
                                SYSSNIV : VMAIFG */
   2680    000000              #define SYSSNIV_JMBINIFG   (0x000Cu)    /*
                                SYSSNIV : JMBINIFG */
   2681    000000              #define SYSSNIV_JMBOUTIFG  (0x000Eu)    /*
                                SYSSNIV : JMBOUTIFG */
   2682    000000              #define SYSSNIV_VLRLIFG    (0x0010u)    /*
                                SYSSNIV : VLRLIFG */
   2683    000000              #define SYSSNIV_VLRHIFG    (0x0012u)    /*
                                SYSSNIV : VLRHIFG */
   2684    000000              
   2685    000000              /* SYSRSTIV Definitions */
   2686    000000              #define SYSRSTIV_NONE      (0x0000u)    /* No
                                Interrupt pending */
   2687    000000              #define SYSRSTIV_BOR       (0x0002u)    /*
                                SYSRSTIV : BOR */
   2688    000000              #define SYSRSTIV_RSTNMI    (0x0004u)    /*
                                SYSRSTIV : RST/NMI */
   2689    000000              #define SYSRSTIV_DOBOR     (0x0006u)    /*
                                SYSRSTIV : Do BOR */
   2690    000000              #define SYSRSTIV_LPM5WU    (0x0008u)    /*
                                SYSRSTIV : Port LPM5 Wake Up */
   2691    000000              #define SYSRSTIV_SECYV     (0x000Au)    /*
                                SYSRSTIV : Security violation */
   2692    000000              #define SYSRSTIV_SVSL      (0x000Cu)    /*
                                SYSRSTIV : SVSL */
   2693    000000              #define SYSRSTIV_SVSH      (0x000Eu)    /*
                                SYSRSTIV : SVSH */
   2694    000000              #define SYSRSTIV_SVML_OVP  (0x0010u)    /*
                                SYSRSTIV : SVML_OVP */
   2695    000000              #define SYSRSTIV_SVMH_OVP  (0x0012u)    /*
                                SYSRSTIV : SVMH_OVP */
   2696    000000              #define SYSRSTIV_DOPOR     (0x0014u)    /*
                                SYSRSTIV : Do POR */
   2697    000000              #define SYSRSTIV_WDTTO     (0x0016u)    /*
                                SYSRSTIV : WDT Time out */
   2698    000000              #define SYSRSTIV_WDTKEY    (0x0018u)    /*
                                SYSRSTIV : WDTKEY violation */
   2699    000000              #define SYSRSTIV_KEYV      (0x001Au)    /*
                                SYSRSTIV : Flash Key violation */
   2700    000000              #define SYSRSTIV_FLLUL     (0x001Cu)    /*
                                SYSRSTIV : FLL unlock */
   2701    000000              #define SYSRSTIV_PERF      (0x001Eu)    /*
                                SYSRSTIV : peripheral/config area fetch
                                */
   2702    000000              #define SYSRSTIV_PMMKEY    (0x0020u)    /*
                                SYSRSTIV : PMMKEY violation */
   2703    000000              
   2704    000000              /***********************************************
                               *************
   2705    000000              * Timer0_A5
   2706    000000              ************************************************
                               ************/
   2707    000000              #define __MSP430_HAS_T0A5__           /*
                                Definition to show that Module is available
                                */
   2708    000000              #define __MSP430_BASEADDRESS_T0A5__ 0x0340
   2709    000000              
   2710    000000              #define  TA0CTL_             (0x0340u)  /*
                                Timer0_A5 Control */
   2711    000000              DEFW(    TA0CTL            , TA0CTL_)
   2712    000000              #define  TA0CCTL0_           (0x0342u)  /*
                                Timer0_A5 Capture/Compare Control 0 */
   2713    000000              DEFW(    TA0CCTL0          , TA0CCTL0_)
   2714    000000              #define  TA0CCTL1_           (0x0344u)  /*
                                Timer0_A5 Capture/Compare Control 1 */
   2715    000000              DEFW(    TA0CCTL1          , TA0CCTL1_)
   2716    000000              #define  TA0CCTL2_           (0x0346u)  /*
                                Timer0_A5 Capture/Compare Control 2 */
   2717    000000              DEFW(    TA0CCTL2          , TA0CCTL2_)
   2718    000000              #define  TA0CCTL3_           (0x0348u)  /*
                                Timer0_A5 Capture/Compare Control 3 */
   2719    000000              DEFW(    TA0CCTL3          , TA0CCTL3_)
   2720    000000              #define  TA0CCTL4_           (0x034Au)  /*
                                Timer0_A5 Capture/Compare Control 4 */
   2721    000000              DEFW(    TA0CCTL4          , TA0CCTL4_)
   2722    000000              #define  TA0R_               (0x0350u)  /*
                                Timer0_A5 */
   2723    000000              DEFW(    TA0R              , TA0R_)
   2724    000000              #define  TA0CCR0_            (0x0352u)  /*
                                Timer0_A5 Capture/Compare 0 */
   2725    000000              DEFW(    TA0CCR0           , TA0CCR0_)
   2726    000000              #define  TA0CCR1_            (0x0354u)  /*
                                Timer0_A5 Capture/Compare 1 */
   2727    000000              DEFW(    TA0CCR1           , TA0CCR1_)
   2728    000000              #define  TA0CCR2_            (0x0356u)  /*
                                Timer0_A5 Capture/Compare 2 */
   2729    000000              DEFW(    TA0CCR2           , TA0CCR2_)
   2730    000000              #define  TA0CCR3_            (0x0358u)  /*
                                Timer0_A5 Capture/Compare 3 */
   2731    000000              DEFW(    TA0CCR3           , TA0CCR3_)
   2732    000000              #define  TA0CCR4_            (0x035Au)  /*
                                Timer0_A5 Capture/Compare 4 */
   2733    000000              DEFW(    TA0CCR4           , TA0CCR4_)
   2734    000000              #define  TA0IV_              (0x036Eu)  /*
                                Timer0_A5 Interrupt Vector Word */
   2735    000000              DEFW(    TA0IV             , TA0IV_)
   2736    000000              #define  TA0EX0_             (0x0360u)  /*
                                Timer0_A5 Expansion Register 0 */
   2737    000000              DEFW(    TA0EX0            , TA0EX0_)
   2738    000000              
   2739    000000              /* TAxCTL Control Bits */
   2740    000000              #define TASSEL1             (0x0200u)  /* Timer
                                A clock source select 1 */
   2741    000000              #define TASSEL0             (0x0100u)  /* Timer
                                A clock source select 0 */
   2742    000000              #define ID1                 (0x0080u)  /* Timer
                                A clock input divider 1 */
   2743    000000              #define ID0                 (0x0040u)  /* Timer
                                A clock input divider 0 */
   2744    000000              #define MC1                 (0x0020u)  /* Timer
                                A mode control 1 */
   2745    000000              #define MC0                 (0x0010u)  /* Timer
                                A mode control 0 */
   2746    000000              #define TACLR               (0x0004u)  /* Timer
                                A counter clear */
   2747    000000              #define TAIE                (0x0002u)  /* Timer
                                A counter interrupt enable */
   2748    000000              #define TAIFG               (0x0001u)  /* Timer
                                A counter interrupt flag */
   2749    000000              
   2750    000000              #define MC_0                (0*0x10u)  /* Timer
                                A mode control: 0 - Stop */
   2751    000000              #define MC_1                (1*0x10u)  /* Timer
                                A mode control: 1 - Up to CCR0 */
   2752    000000              #define MC_2                (2*0x10u)  /* Timer
                                A mode control: 2 - Continuous up */
   2753    000000              #define MC_3                (3*0x10u)  /* Timer
                                A mode control: 3 - Up/Down */
   2754    000000              #define ID_0                (0*0x40u)  /* Timer
                                A input divider: 0 - /1 */
   2755    000000              #define ID_1                (1*0x40u)  /* Timer
                                A input divider: 1 - /2 */
   2756    000000              #define ID_2                (2*0x40u)  /* Timer
                                A input divider: 2 - /4 */
   2757    000000              #define ID_3                (3*0x40u)  /* Timer
                                A input divider: 3 - /8 */
   2758    000000              #define TASSEL_0            (0*0x100u) /* Timer
                                A clock source select: 0 - TACLK */
   2759    000000              #define TASSEL_1            (1*0x100u) /* Timer
                                A clock source select: 1 - ACLK  */
   2760    000000              #define TASSEL_2            (2*0x100u) /* Timer
                                A clock source select: 2 - SMCLK */
   2761    000000              #define TASSEL_3            (3*0x100u) /* Timer
                                A clock source select: 3 - INCLK */
   2762    000000              #define MC__STOP            (0*0x10u)  /* Timer
                                A mode control: 0 - Stop */
   2763    000000              #define MC__UP              (1*0x10u)  /* Timer
                                A mode control: 1 - Up to CCR0 */
   2764    000000              #define MC__CONTINUOUS      (2*0x10u)  /* Timer
                                A mode control: 2 - Continuous up */
   2765    000000              #define MC__CONTINOUS       (2*0x10u)  /* Legacy
                                define */
   2766    000000              #define MC__UPDOWN          (3*0x10u)  /* Timer
                                A mode control: 3 - Up/Down */
   2767    000000              #define ID__1               (0*0x40u)  /* Timer
                                A input divider: 0 - /1 */
   2768    000000              #define ID__2               (1*0x40u)  /* Timer
                                A input divider: 1 - /2 */
   2769    000000              #define ID__4               (2*0x40u)  /* Timer
                                A input divider: 2 - /4 */
   2770    000000              #define ID__8               (3*0x40u)  /* Timer
                                A input divider: 3 - /8 */
   2771    000000              #define TASSEL__TACLK       (0*0x100u) /* Timer
                                A clock source select: 0 - TACLK */
   2772    000000              #define TASSEL__ACLK        (1*0x100u) /* Timer
                                A clock source select: 1 - ACLK  */
   2773    000000              #define TASSEL__SMCLK       (2*0x100u) /* Timer
                                A clock source select: 2 - SMCLK */
   2774    000000              #define TASSEL__INCLK       (3*0x100u) /* Timer
                                A clock source select: 3 - INCLK */
   2775    000000              
   2776    000000              /* TAxCCTLx Control Bits */
   2777    000000              #define CM1                 (0x8000u)  /*
                                Capture mode 1 */
   2778    000000              #define CM0                 (0x4000u)  /*
                                Capture mode 0 */
   2779    000000              #define CCIS1               (0x2000u)  /*
                                Capture input select 1 */
   2780    000000              #define CCIS0               (0x1000u)  /*
                                Capture input select 0 */
   2781    000000              #define SCS                 (0x0800u)  /*
                                Capture sychronize */
   2782    000000              #define SCCI                (0x0400u)  /*
                                Latched capture signal (read) */
   2783    000000              #define CAP                 (0x0100u)  /*
                                Capture mode: 1 /Compare mode : 0 */
   2784    000000              #define OUTMOD2             (0x0080u)  /* Output
                                mode 2 */
   2785    000000              #define OUTMOD1             (0x0040u)  /* Output
                                mode 1 */
   2786    000000              #define OUTMOD0             (0x0020u)  /* Output
                                mode 0 */
   2787    000000              #define CCIE                (0x0010u)  /*
                                Capture/compare interrupt enable */
   2788    000000              #define CCI                 (0x0008u)  /*
                                Capture input signal (read) */
   2789    000000              #define OUT                 (0x0004u)  /* PWM
                                Output signal if output mode 0 */
   2790    000000              #define COV                 (0x0002u)  /*
                                Capture/compare overflow flag */
   2791    000000              #define CCIFG               (0x0001u)  /*
                                Capture/compare interrupt flag */
   2792    000000              
   2793    000000              #define OUTMOD_0            (0*0x20u)  /* PWM
                                output mode: 0 - output only */
   2794    000000              #define OUTMOD_1            (1*0x20u)  /* PWM
                                output mode: 1 - set */
   2795    000000              #define OUTMOD_2            (2*0x20u)  /* PWM
                                output mode: 2 - PWM toggle/reset */
   2796    000000              #define OUTMOD_3            (3*0x20u)  /* PWM
                                output mode: 3 - PWM set/reset */
   2797    000000              #define OUTMOD_4            (4*0x20u)  /* PWM
                                output mode: 4 - toggle */
   2798    000000              #define OUTMOD_5            (5*0x20u)  /* PWM
                                output mode: 5 - Reset */
   2799    000000              #define OUTMOD_6            (6*0x20u)  /* PWM
                                output mode: 6 - PWM toggle/set */
   2800    000000              #define OUTMOD_7            (7*0x20u)  /* PWM
                                output mode: 7 - PWM reset/set */
   2801    000000              #define CCIS_0              (0*0x1000u) /*
                                Capture input select: 0 - CCIxA */
   2802    000000              #define CCIS_1              (1*0x1000u) /*
                                Capture input select: 1 - CCIxB */
   2803    000000              #define CCIS_2              (2*0x1000u) /*
                                Capture input select: 2 - GND */
   2804    000000              #define CCIS_3              (3*0x1000u) /*
                                Capture input select: 3 - Vcc */
   2805    000000              #define CM_0                (0*0x4000u) /*
                                Capture mode: 0 - disabled */
   2806    000000              #define CM_1                (1*0x4000u) /*
                                Capture mode: 1 - pos. edge */
   2807    000000              #define CM_2                (2*0x4000u) /*
                                Capture mode: 1 - neg. edge */
   2808    000000              #define CM_3                (3*0x4000u) /*
                                Capture mode: 1 - both edges */
   2809    000000              
   2810    000000              /* TAxEX0 Control Bits */
   2811    000000              #define TAIDEX0             (0x0001u)  /* Timer
                                A Input divider expansion Bit: 0 */
   2812    000000              #define TAIDEX1             (0x0002u)  /* Timer
                                A Input divider expansion Bit: 1 */
   2813    000000              #define TAIDEX2             (0x0004u)  /* Timer
                                A Input divider expansion Bit: 2 */
   2814    000000              
   2815    000000              #define TAIDEX_0            (0*0x0001u) /* Timer
                                A Input divider expansion : /1 */
   2816    000000              #define TAIDEX_1            (1*0x0001u) /* Timer
                                A Input divider expansion : /2 */
   2817    000000              #define TAIDEX_2            (2*0x0001u) /* Timer
                                A Input divider expansion : /3 */
   2818    000000              #define TAIDEX_3            (3*0x0001u) /* Timer
                                A Input divider expansion : /4 */
   2819    000000              #define TAIDEX_4            (4*0x0001u) /* Timer
                                A Input divider expansion : /5 */
   2820    000000              #define TAIDEX_5            (5*0x0001u) /* Timer
                                A Input divider expansion : /6 */
   2821    000000              #define TAIDEX_6            (6*0x0001u) /* Timer
                                A Input divider expansion : /7 */
   2822    000000              #define TAIDEX_7            (7*0x0001u) /* Timer
                                A Input divider expansion : /8 */
   2823    000000              
   2824    000000              /* T0A5IV Definitions */
   2825    000000              #define TA0IV_NONE          (0x0000u)    /* No
                                Interrupt pending */
   2826    000000              #define TA0IV_TA0CCR1       (0x0002u)    /*
                                TA0CCR1_CCIFG */
   2827    000000              #define TA0IV_TA0CCR2       (0x0004u)    /*
                                TA0CCR2_CCIFG */
   2828    000000              #define TA0IV_TA0CCR3       (0x0006u)    /*
                                TA0CCR3_CCIFG */
   2829    000000              #define TA0IV_TA0CCR4       (0x0008u)    /*
                                TA0CCR4_CCIFG */
   2830    000000              #define TA0IV_5             (0x000Au)    /*
                                Reserved */
   2831    000000              #define TA0IV_6             (0x000Cu)    /*
                                Reserved */
   2832    000000              #define TA0IV_TA0IFG        (0x000Eu)    /*
                                TA0IFG */
   2833    000000              
   2834    000000              /***********************************************
                               *************
   2835    000000              * Timer1_A3
   2836    000000              ************************************************
                               ************/
   2837    000000              #define __MSP430_HAS_T1A3__            /*
                                Definition to show that Module is available
                                */
   2838    000000              #define __MSP430_BASEADDRESS_T1A3__ 0x0380
   2839    000000              
   2840    000000              #define  TA1CTL_             (0x0380u)  /*
                                Timer1_A3 Control */
   2841    000000              DEFW(    TA1CTL            , TA1CTL_)
   2842    000000              #define  TA1CCTL0_           (0x0382u)  /*
                                Timer1_A3 Capture/Compare Control 0 */
   2843    000000              DEFW(    TA1CCTL0          , TA1CCTL0_)
   2844    000000              #define  TA1CCTL1_           (0x0384u)  /*
                                Timer1_A3 Capture/Compare Control 1 */
   2845    000000              DEFW(    TA1CCTL1          , TA1CCTL1_)
   2846    000000              #define  TA1CCTL2_           (0x0386u)  /*
                                Timer1_A3 Capture/Compare Control 2 */
   2847    000000              DEFW(    TA1CCTL2          , TA1CCTL2_)
   2848    000000              #define  TA1R_               (0x0390u)  /*
                                Timer1_A3 */
   2849    000000              DEFW(    TA1R              , TA1R_)
   2850    000000              #define  TA1CCR0_            (0x0392u)  /*
                                Timer1_A3 Capture/Compare 0 */
   2851    000000              DEFW(    TA1CCR0           , TA1CCR0_)
   2852    000000              #define  TA1CCR1_            (0x0394u)  /*
                                Timer1_A3 Capture/Compare 1 */
   2853    000000              DEFW(    TA1CCR1           , TA1CCR1_)
   2854    000000              #define  TA1CCR2_            (0x0396u)  /*
                                Timer1_A3 Capture/Compare 2 */
   2855    000000              DEFW(    TA1CCR2           , TA1CCR2_)
   2856    000000              #define  TA1IV_              (0x03AEu)  /*
                                Timer1_A3 Interrupt Vector Word */
   2857    000000              DEFW(    TA1IV             , TA1IV_)
   2858    000000              #define  TA1EX0_             (0x03A0u)  /*
                                Timer1_A3 Expansion Register 0 */
   2859    000000              DEFW(    TA1EX0            , TA1EX0_)
   2860    000000              
   2861    000000              /* Bits are already defined within the Timer0_Ax
                                */
   2862    000000              
   2863    000000              /* TA1IV Definitions */
   2864    000000              #define TA1IV_NONE          (0x0000u)    /* No
                                Interrupt pending */
   2865    000000              #define TA1IV_TA1CCR1       (0x0002u)    /*
                                TA1CCR1_CCIFG */
   2866    000000              #define TA1IV_TA1CCR2       (0x0004u)    /*
                                TA1CCR2_CCIFG */
   2867    000000              #define TA1IV_3             (0x0006u)    /*
                                Reserved */
   2868    000000              #define TA1IV_4             (0x0008u)    /*
                                Reserved */
   2869    000000              #define TA1IV_5             (0x000Au)    /*
                                Reserved */
   2870    000000              #define TA1IV_6             (0x000Cu)    /*
                                Reserved */
   2871    000000              #define TA1IV_TA1IFG        (0x000Eu)    /*
                                TA1IFG */
   2872    000000              
   2873    000000              /***********************************************
                               *************
   2874    000000              * Timer2_A3
   2875    000000              ************************************************
                               ************/
   2876    000000              #define __MSP430_HAS_T2A3__            /*
                                Definition to show that Module is available
                                */
   2877    000000              #define __MSP430_BASEADDRESS_T2A3__ 0x0400
   2878    000000              
   2879    000000              #define  TA2CTL_             (0x0400u)  /*
                                Timer2_A3 Control */
   2880    000000              DEFW(    TA2CTL            , TA2CTL_)
   2881    000000              #define  TA2CCTL0_           (0x0402u)  /*
                                Timer2_A3 Capture/Compare Control 0 */
   2882    000000              DEFW(    TA2CCTL0          , TA2CCTL0_)
   2883    000000              #define  TA2CCTL1_           (0x0404u)  /*
                                Timer2_A3 Capture/Compare Control 1 */
   2884    000000              DEFW(    TA2CCTL1          , TA2CCTL1_)
   2885    000000              #define  TA2CCTL2_           (0x0406u)  /*
                                Timer2_A3 Capture/Compare Control 2 */
   2886    000000              DEFW(    TA2CCTL2          , TA2CCTL2_)
   2887    000000              #define  TA2R_               (0x0410u)  /*
                                Timer2_A3 */
   2888    000000              DEFW(    TA2R              , TA2R_)
   2889    000000              #define  TA2CCR0_            (0x0412u)  /*
                                Timer2_A3 Capture/Compare 0 */
   2890    000000              DEFW(    TA2CCR0           , TA2CCR0_)
   2891    000000              #define  TA2CCR1_            (0x0414u)  /*
                                Timer2_A3 Capture/Compare 1 */
   2892    000000              DEFW(    TA2CCR1           , TA2CCR1_)
   2893    000000              #define  TA2CCR2_            (0x0416u)  /*
                                Timer2_A3 Capture/Compare 2 */
   2894    000000              DEFW(    TA2CCR2           , TA2CCR2_)
   2895    000000              #define  TA2IV_              (0x042Eu)  /*
                                Timer2_A3 Interrupt Vector Word */
   2896    000000              DEFW(    TA2IV             , TA2IV_)
   2897    000000              #define  TA2EX0_             (0x0420u)  /*
                                Timer2_A3 Expansion Register 0 */
   2898    000000              DEFW(    TA2EX0            , TA2EX0_)
   2899    000000              
   2900    000000              /* Bits are already defined within the Timer0_Ax
                                */
   2901    000000              
   2902    000000              /* TA2IV Definitions */
   2903    000000              #define TA2IV_NONE          (0x0000u)    /* No
                                Interrupt pending */
   2904    000000              #define TA2IV_TA1CCR1       (0x0002u)    /*
                                TA2CCR1_CCIFG */
   2905    000000              #define TA2IV_TA1CCR2       (0x0004u)    /*
                                TA2CCR2_CCIFG */
   2906    000000              #define TA2IV_3             (0x0006u)    /*
                                Reserved */
   2907    000000              #define TA2IV_4             (0x0008u)    /*
                                Reserved */
   2908    000000              #define TA2IV_5             (0x000Au)    /*
                                Reserved */
   2909    000000              #define TA2IV_6             (0x000Cu)    /*
                                Reserved */
   2910    000000              #define TA2IV_TA2IFG        (0x000Eu)    /*
                                TA2IFG */
   2911    000000              
   2912    000000              /***********************************************
                               *************
   2913    000000              * Timer0_B7
   2914    000000              ************************************************
                               ************/
   2915    000000              #define __MSP430_HAS_T0B7__            /*
                                Definition to show that Module is available
                                */
   2916    000000              #define __MSP430_BASEADDRESS_T0B7__ 0x03C0
   2917    000000              
   2918    000000              #define  TB0CTL_             (0x03C0u)  /*
                                Timer0_B7 Control */
   2919    000000              DEFW(    TB0CTL            , TB0CTL_)
   2920    000000              #define  TB0CCTL0_           (0x03C2u)  /*
                                Timer0_B7 Capture/Compare Control 0 */
   2921    000000              DEFW(    TB0CCTL0          , TB0CCTL0_)
   2922    000000              #define  TB0CCTL1_           (0x03C4u)  /*
                                Timer0_B7 Capture/Compare Control 1 */
   2923    000000              DEFW(    TB0CCTL1          , TB0CCTL1_)
   2924    000000              #define  TB0CCTL2_           (0x03C6u)  /*
                                Timer0_B7 Capture/Compare Control 2 */
   2925    000000              DEFW(    TB0CCTL2          , TB0CCTL2_)
   2926    000000              #define  TB0CCTL3_           (0x03C8u)  /*
                                Timer0_B7 Capture/Compare Control 3 */
   2927    000000              DEFW(    TB0CCTL3          , TB0CCTL3_)
   2928    000000              #define  TB0CCTL4_           (0x03CAu)  /*
                                Timer0_B7 Capture/Compare Control 4 */
   2929    000000              DEFW(    TB0CCTL4          , TB0CCTL4_)
   2930    000000              #define  TB0CCTL5_           (0x03CCu)  /*
                                Timer0_B7 Capture/Compare Control 5 */
   2931    000000              DEFW(    TB0CCTL5          , TB0CCTL5_)
   2932    000000              #define  TB0CCTL6_           (0x03CEu)  /*
                                Timer0_B7 Capture/Compare Control 6 */
   2933    000000              DEFW(    TB0CCTL6          , TB0CCTL6_)
   2934    000000              #define  TB0R_               (0x03D0u)  /*
                                Timer0_B7 */
   2935    000000              DEFW(    TB0R              , TB0R_)
   2936    000000              #define  TB0CCR0_            (0x03D2u)  /*
                                Timer0_B7 Capture/Compare 0 */
   2937    000000              DEFW(    TB0CCR0           , TB0CCR0_)
   2938    000000              #define  TB0CCR1_            (0x03D4u)  /*
                                Timer0_B7 Capture/Compare 1 */
   2939    000000              DEFW(    TB0CCR1           , TB0CCR1_)
   2940    000000              #define  TB0CCR2_            (0x03D6u)  /*
                                Timer0_B7 Capture/Compare 2 */
   2941    000000              DEFW(    TB0CCR2           , TB0CCR2_)
   2942    000000              #define  TB0CCR3_            (0x03D8u)  /*
                                Timer0_B7 Capture/Compare 3 */
   2943    000000              DEFW(    TB0CCR3           , TB0CCR3_)
   2944    000000              #define  TB0CCR4_            (0x03DAu)  /*
                                Timer0_B7 Capture/Compare 4 */
   2945    000000              DEFW(    TB0CCR4           , TB0CCR4_)
   2946    000000              #define  TB0CCR5_            (0x03DCu)  /*
                                Timer0_B7 Capture/Compare 5 */
   2947    000000              DEFW(    TB0CCR5           , TB0CCR5_)
   2948    000000              #define  TB0CCR6_            (0x03DEu)  /*
                                Timer0_B7 Capture/Compare 6 */
   2949    000000              DEFW(    TB0CCR6           , TB0CCR6_)
   2950    000000              #define  TB0EX0_             (0x03E0u)  /*
                                Timer0_B7 Expansion Register 0 */
   2951    000000              DEFW(    TB0EX0            , TB0EX0_)
   2952    000000              #define  TB0IV_              (0x03EEu)  /*
                                Timer0_B7 Interrupt Vector Word */
   2953    000000              DEFW(    TB0IV             , TB0IV_)
   2954    000000              
   2955    000000              /* Legacy Type Definitions for TimerB */
   2956    000000              #define TBCTL                TB0CTL    /*
                                Timer0_B7 Control */
   2957    000000              #define TBCCTL0              TB0CCTL0  /*
                                Timer0_B7 Capture/Compare Control 0 */
   2958    000000              #define TBCCTL1              TB0CCTL1  /*
                                Timer0_B7 Capture/Compare Control 1 */
   2959    000000              #define TBCCTL2              TB0CCTL2  /*
                                Timer0_B7 Capture/Compare Control 2 */
   2960    000000              #define TBCCTL3              TB0CCTL3  /*
                                Timer0_B7 Capture/Compare Control 3 */
   2961    000000              #define TBCCTL4              TB0CCTL4  /*
                                Timer0_B7 Capture/Compare Control 4 */
   2962    000000              #define TBCCTL5              TB0CCTL5  /*
                                Timer0_B7 Capture/Compare Control 5 */
   2963    000000              #define TBCCTL6              TB0CCTL6  /*
                                Timer0_B7 Capture/Compare Control 6 */
   2964    000000              #define TBR                  TB0R      /*
                                Timer0_B7 */
   2965    000000              #define TBCCR0               TB0CCR0   /*
                                Timer0_B7 Capture/Compare 0 */
   2966    000000              #define TBCCR1               TB0CCR1   /*
                                Timer0_B7 Capture/Compare 1 */
   2967    000000              #define TBCCR2               TB0CCR2   /*
                                Timer0_B7 Capture/Compare 2 */
   2968    000000              #define TBCCR3               TB0CCR3   /*
                                Timer0_B7 Capture/Compare 3 */
   2969    000000              #define TBCCR4               TB0CCR4   /*
                                Timer0_B7 Capture/Compare 4 */
   2970    000000              #define TBCCR5               TB0CCR5   /*
                                Timer0_B7 Capture/Compare 5 */
   2971    000000              #define TBCCR6               TB0CCR6   /*
                                Timer0_B7 Capture/Compare 6 */
   2972    000000              #define TBEX0                TB0EX0    /*
                                Timer0_B7 Expansion Register 0 */
   2973    000000              #define TBIV                 TB0IV     /*
                                Timer0_B7 Interrupt Vector Word */
   2974    000000              #define TIMERB1_VECTOR       TIMER0_B1_VECTOR /*
                                Timer0_B7 CC1-6, TB */
   2975    000000              #define TIMERB0_VECTOR       TIMER0_B0_VECTOR /*
                                Timer0_B7 CC0 */
   2976    000000              
   2977    000000              /* TBxCTL Control Bits */
   2978    000000              #define TBCLGRP1            (0x4000u)  /*
                                Timer0_B7 Compare latch load group 1 */
   2979    000000              #define TBCLGRP0            (0x2000u)  /*
                                Timer0_B7 Compare latch load group 0 */
   2980    000000              #define CNTL1               (0x1000u)  /*
                                Counter lenght 1 */
   2981    000000              #define CNTL0               (0x0800u)  /*
                                Counter lenght 0 */
   2982    000000              #define TBSSEL1             (0x0200u)  /* Clock
                                source 1 */
   2983    000000              #define TBSSEL0             (0x0100u)  /* Clock
                                source 0 */
   2984    000000              #define TBCLR               (0x0004u)  /*
                                Timer0_B7 counter clear */
   2985    000000              #define TBIE                (0x0002u)  /*
                                Timer0_B7 interrupt enable */
   2986    000000              #define TBIFG               (0x0001u)  /*
                                Timer0_B7 interrupt flag */
   2987    000000              
   2988    000000              #define SHR1                (0x4000u)  /*
                                Timer0_B7 Compare latch load group 1 */
   2989    000000              #define SHR0                (0x2000u)  /*
                                Timer0_B7 Compare latch load group 0 */
   2990    000000              
   2991    000000              #define TBSSEL_0            (0*0x0100u)  /*
                                Clock Source: TBCLK */
   2992    000000              #define TBSSEL_1            (1*0x0100u)  /*
                                Clock Source: ACLK  */
   2993    000000              #define TBSSEL_2            (2*0x0100u)  /*
                                Clock Source: SMCLK */
   2994    000000              #define TBSSEL_3            (3*0x0100u)  /*
                                Clock Source: INCLK */
   2995    000000              #define CNTL_0              (0*0x0800u)  /*
                                Counter lenght: 16 bit */
   2996    000000              #define CNTL_1              (1*0x0800u)  /*
                                Counter lenght: 12 bit */
   2997    000000              #define CNTL_2              (2*0x0800u)  /*
                                Counter lenght: 10 bit */
   2998    000000              #define CNTL_3              (3*0x0800u)  /*
                                Counter lenght:  8 bit */
   2999    000000              #define SHR_0               (0*0x2000u)  /*
                                Timer0_B7 Group: 0 - individually */
   3000    000000              #define SHR_1               (1*0x2000u)  /*
                                Timer0_B7 Group: 1 - 3 groups (1-2, 3-4, 5-6)
                                */
   3001    000000              #define SHR_2               (2*0x2000u)  /*
                                Timer0_B7 Group: 2 - 2 groups (1-3, 4-6)*/
   3002    000000              #define SHR_3               (3*0x2000u)  /*
                                Timer0_B7 Group: 3 - 1 group (all) */
   3003    000000              #define TBCLGRP_0           (0*0x2000u)  /*
                                Timer0_B7 Group: 0 - individually */
   3004    000000              #define TBCLGRP_1           (1*0x2000u)  /*
                                Timer0_B7 Group: 1 - 3 groups (1-2, 3-4, 5-6)
                                */
   3005    000000              #define TBCLGRP_2           (2*0x2000u)  /*
                                Timer0_B7 Group: 2 - 2 groups (1-3, 4-6)*/
   3006    000000              #define TBCLGRP_3           (3*0x2000u)  /*
                                Timer0_B7 Group: 3 - 1 group (all) */
   3007    000000              #define TBSSEL__TACLK       (0*0x100u) /*
                                Timer0_B7 clock source select: 0 - TACLK
                                */
   3008    000000              #define TBSSEL__ACLK        (1*0x100u) /*
                                Timer0_B7 clock source select: 1 - ACLK 
                                */
   3009    000000              #define TBSSEL__SMCLK       (2*0x100u) /*
                                Timer0_B7 clock source select: 2 - SMCLK
                                */
   3010    000000              #define TBSSEL__INCLK       (3*0x100u) /*
                                Timer0_B7 clock source select: 3 - INCLK
                                */
   3011    000000              #define CNTL__16            (0*0x0800u)  /*
                                Counter lenght: 16 bit */
   3012    000000              #define CNTL__12            (1*0x0800u)  /*
                                Counter lenght: 12 bit */
   3013    000000              #define CNTL__10            (2*0x0800u)  /*
                                Counter lenght: 10 bit */
   3014    000000              #define CNTL__8             (3*0x0800u)  /*
                                Counter lenght:  8 bit */
   3015    000000              
   3016    000000              /* Additional Timer B Control Register bits are
                                defined in Timer A */
   3017    000000              /* TBxCCTLx Control Bits */
   3018    000000              #define CLLD1               (0x0400u)  /*
                                Compare latch load source 1 */
   3019    000000              #define CLLD0               (0x0200u)  /*
                                Compare latch load source 0 */
   3020    000000              
   3021    000000              #define SLSHR1              (0x0400u)  /*
                                Compare latch load source 1 */
   3022    000000              #define SLSHR0              (0x0200u)  /*
                                Compare latch load source 0 */
   3023    000000              
   3024    000000              #define SLSHR_0             (0*0x0200u) /*
                                Compare latch load sourec : 0 - immediate
                                */
   3025    000000              #define SLSHR_1             (1*0x0200u) /*
                                Compare latch load sourec : 1 - TBR counts to 0
                                */
   3026    000000              #define SLSHR_2             (2*0x0200u) /*
                                Compare latch load sourec : 2 - up/down
                                */
   3027    000000              #define SLSHR_3             (3*0x0200u) /*
                                Compare latch load sourec : 3 - TBR counts to
                                TBCTL0 */
   3028    000000              
   3029    000000              #define CLLD_0              (0*0x0200u) /*
                                Compare latch load sourec : 0 - immediate
                                */
   3030    000000              #define CLLD_1              (1*0x0200u) /*
                                Compare latch load sourec : 1 - TBR counts to 0
                                */
   3031    000000              #define CLLD_2              (2*0x0200u) /*
                                Compare latch load sourec : 2 - up/down
                                */
   3032    000000              #define CLLD_3              (3*0x0200u) /*
                                Compare latch load sourec : 3 - TBR counts to
                                TBCTL0 */
   3033    000000              
   3034    000000              /* TBxEX0 Control Bits */
   3035    000000              #define TBIDEX0             (0x0001u)   /*
                                Timer0_B7 Input divider expansion Bit: 0
                                */
   3036    000000              #define TBIDEX1             (0x0002u)   /*
                                Timer0_B7 Input divider expansion Bit: 1
                                */
   3037    000000              #define TBIDEX2             (0x0004u)   /*
                                Timer0_B7 Input divider expansion Bit: 2
                                */
   3038    000000              
   3039    000000              #define TBIDEX_0            (0*0x0001u) /*
                                Timer0_B7 Input divider expansion : /1
                                */
   3040    000000              #define TBIDEX_1            (1*0x0001u) /*
                                Timer0_B7 Input divider expansion : /2
                                */
   3041    000000              #define TBIDEX_2            (2*0x0001u) /*
                                Timer0_B7 Input divider expansion : /3
                                */
   3042    000000              #define TBIDEX_3            (3*0x0001u) /*
                                Timer0_B7 Input divider expansion : /4
                                */
   3043    000000              #define TBIDEX_4            (4*0x0001u) /*
                                Timer0_B7 Input divider expansion : /5
                                */
   3044    000000              #define TBIDEX_5            (5*0x0001u) /*
                                Timer0_B7 Input divider expansion : /6
                                */
   3045    000000              #define TBIDEX_6            (6*0x0001u) /*
                                Timer0_B7 Input divider expansion : /7
                                */
   3046    000000              #define TBIDEX_7            (7*0x0001u) /*
                                Timer0_B7 Input divider expansion : /8
                                */
   3047    000000              #define TBIDEX__1           (0*0x0001u) /*
                                Timer0_B7 Input divider expansion : /1
                                */
   3048    000000              #define TBIDEX__2           (1*0x0001u) /*
                                Timer0_B7 Input divider expansion : /2
                                */
   3049    000000              #define TBIDEX__3           (2*0x0001u) /*
                                Timer0_B7 Input divider expansion : /3
                                */
   3050    000000              #define TBIDEX__4           (3*0x0001u) /*
                                Timer0_B7 Input divider expansion : /4
                                */
   3051    000000              #define TBIDEX__5           (4*0x0001u) /*
                                Timer0_B7 Input divider expansion : /5
                                */
   3052    000000              #define TBIDEX__6           (5*0x0001u) /*
                                Timer0_B7 Input divider expansion : /6
                                */
   3053    000000              #define TBIDEX__7           (6*0x0001u) /*
                                Timer0_B7 Input divider expansion : /7
                                */
   3054    000000              #define TBIDEX__8           (7*0x0001u) /*
                                Timer0_B7 Input divider expansion : /8
                                */
   3055    000000              
   3056    000000              /* TB0IV Definitions */
   3057    000000              #define TB0IV_NONE          (0x0000u)    /* No
                                Interrupt pending */
   3058    000000              #define TB0IV_TB1CCR1       (0x0002u)    /*
                                TBCCR1_CCIFG */
   3059    000000              #define TB0IV_TB1CCR2       (0x0004u)    /*
                                TBCCR2_CCIFG */
   3060    000000              #define TB0IV_3             (0x0006u)    /*
                                Reserved */
   3061    000000              #define TB0IV_4             (0x0008u)    /*
                                Reserved */
   3062    000000              #define TB0IV_5             (0x000Au)    /*
                                Reserved */
   3063    000000              #define TB0IV_6             (0x000Cu)    /*
                                Reserved */
   3064    000000              #define TB0IV_TB0IFG        (0x000Eu)    /*
                                TBIFG */
   3065    000000              
   3066    000000              
   3067    000000              /***********************************************
                               *************
   3068    000000              * USB
   3069    000000              ************************************************
                               ************/
   3070    000000              #define __MSP430_HAS_USB__            /*
                                Definition to show that Module is available
                                */
   3071    000000              #define __MSP430_BASEADDRESS_USB__ 0x0900
   3072    000000              
   3073    000000              /* =============================================
                               ============================ */
   3074    000000              /* USB Configuration Registers */
   3075    000000              /* =============================================
                               ============================ */
   3076    000000              #define USBKEYID_      (0x0900u)    /* USB
                                Controller key register */
   3077    000000              DEFCW(  USBKEYID     , USBKEYID_)
   3077.1  000000              sfrb USBKEYID_L = (0x0900u);
   3077.2  000000              sfrb USBKEYID_H = (0x0900u)+1;
   3077.3  000000              sfrw USBKEYID   = (0x0900u);
   3077.4  000000                    endm
   3078    000000              #define USBCNF_        (0x0902u)    /* USB
                                Module  configuration register */
   3079    000000              DEFCW(  USBCNF       , USBCNF_)
   3079.1  000000              sfrb USBCNF_L = (0x0902u);
   3079.2  000000              sfrb USBCNF_H = (0x0902u)+1;
   3079.3  000000              sfrw USBCNF   = (0x0902u);
   3079.4  000000                    endm
   3080    000000              #define USBPHYCTL_     (0x0904u)    /* USB PHY
                                control register */
   3081    000000              DEFCW(  USBPHYCTL    , USBPHYCTL_)
   3081.1  000000              sfrb USBPHYCTL_L = (0x0904u);
   3081.2  000000              sfrb USBPHYCTL_H = (0x0904u)+1;
   3081.3  000000              sfrw USBPHYCTL   = (0x0904u);
   3081.4  000000                    endm
   3082    000000              #define USBPWRCTL_     (0x0908u)    /* USB Power
                                control register */
   3083    000000              DEFCW(  USBPWRCTL    , USBPWRCTL_)
   3083.1  000000              sfrb USBPWRCTL_L = (0x0908u);
   3083.2  000000              sfrb USBPWRCTL_H = (0x0908u)+1;
   3083.3  000000              sfrw USBPWRCTL   = (0x0908u);
   3083.4  000000                    endm
   3084    000000              #define USBPLLCTL_     (0x0910u)    /* USB PLL
                                control register */
   3085    000000              DEFCW(  USBPLLCTL    , USBPLLCTL_)
   3085.1  000000              sfrb USBPLLCTL_L = (0x0910u);
   3085.2  000000              sfrb USBPLLCTL_H = (0x0910u)+1;
   3085.3  000000              sfrw USBPLLCTL   = (0x0910u);
   3085.4  000000                    endm
   3086    000000              #define USBPLLDIVB_    (0x0912u)    /* USB PLL
                                Clock Divider Buffer control register
                                */
   3087    000000              DEFCW(  USBPLLDIVB   , USBPLLDIVB_)
   3087.1  000000              sfrb USBPLLDIVB_L = (0x0912u);
   3087.2  000000              sfrb USBPLLDIVB_H = (0x0912u)+1;
   3087.3  000000              sfrw USBPLLDIVB   = (0x0912u);
   3087.4  000000                    endm
   3088    000000              #define USBPLLIR_      (0x0914u)    /* USB PLL
                                Interrupt control register */
   3089    000000              DEFCW(  USBPLLIR     , USBPLLIR_)
   3089.1  000000              sfrb USBPLLIR_L = (0x0914u);
   3089.2  000000              sfrb USBPLLIR_H = (0x0914u)+1;
   3089.3  000000              sfrw USBPLLIR   = (0x0914u);
   3089.4  000000                    endm
   3090    000000              
   3091    000000              #define USBKEYPID      USBKEYID    /* Legacy
                                Definition: USB Controller key register
                                */
   3092    000000              #define USBKEY         (0x9628u)    /* USB
                                Control Register key */
   3093    000000              
   3094    000000              /* USBCNF Control Bits */
   3095    000000              #define USB_EN              (0x0001u)  /* USB -
                                Module enable */
   3096    000000              #define PUR_EN              (0x0002u)  /* USB -
                                PUR pin enable */
   3097    000000              #define PUR_IN              (0x0004u)  /* USB -
                                PUR pin input value */
   3098    000000              #define BLKRDY              (0x0008u)  /* USB -
                                Block ready signal for DMA */
   3099    000000              #define FNTEN               (0x0010u)  /* USB -
                                Frame Number receive Trigger enable for DMA
                                */
   3100    000000              //#define RESERVED            (0x0020u)  /* USB
                                -  */
   3101    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3102    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3103    000000              //#define RESERVED            (0x0100u)  /* USB
                                -  */
   3104    000000              //#define RESERVED            (0x0200u)  /* USB
                                -  */
   3105    000000              //#define RESERVED            (0x0400u)  /* USB
                                -  */
   3106    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3107    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3108    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3109    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3110    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3111    000000              
   3112    000000              /* USBCNF Control Bits */
   3113    000000              #define USB_EN_L            (0x0001u)  /* USB -
                                Module enable */
   3114    000000              #define PUR_EN_L            (0x0002u)  /* USB -
                                PUR pin enable */
   3115    000000              #define PUR_IN_L            (0x0004u)  /* USB -
                                PUR pin input value */
   3116    000000              #define BLKRDY_L            (0x0008u)  /* USB -
                                Block ready signal for DMA */
   3117    000000              #define FNTEN_L             (0x0010u)  /* USB -
                                Frame Number receive Trigger enable for DMA
                                */
   3118    000000              //#define RESERVED            (0x0020u)  /* USB
                                -  */
   3119    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3120    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3121    000000              //#define RESERVED            (0x0100u)  /* USB
                                -  */
   3122    000000              //#define RESERVED            (0x0200u)  /* USB
                                -  */
   3123    000000              //#define RESERVED            (0x0400u)  /* USB
                                -  */
   3124    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3125    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3126    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3127    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3128    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3129    000000              
   3130    000000              /* USBCNF Control Bits */
   3131    000000              //#define RESERVED            (0x0020u)  /* USB
                                -  */
   3132    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3133    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3134    000000              //#define RESERVED            (0x0100u)  /* USB
                                -  */
   3135    000000              //#define RESERVED            (0x0200u)  /* USB
                                -  */
   3136    000000              //#define RESERVED            (0x0400u)  /* USB
                                -  */
   3137    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3138    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3139    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3140    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3141    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3142    000000              
   3143    000000              /* USBPHYCTL Control Bits */
   3144    000000              #define PUOUT0              (0x0001u)  /* USB -
                                USB Port Output Signal Bit 0 */
   3145    000000              #define PUOUT1              (0x0002u)  /* USB -
                                USB Port Output Signal Bit 1 */
   3146    000000              #define PUIN0               (0x0004u)  /* USB -
                                PU0/DP Input Data */
   3147    000000              #define PUIN1               (0x0008u)  /* USB -
                                PU1/DM Input Data */
   3148    000000              //#define RESERVED            (0x0010u)  /* USB
                                -  */
   3149    000000              #define PUOPE               (0x0020u)  /* USB -
                                USB Port Output Enable */
   3150    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3151    000000              #define PUSEL               (0x0080u)  /* USB -
                                USB Port Function Select */
   3152    000000              #define PUIPE               (0x0100u)  /* USB -
                                PHY Single Ended Input enable */
   3153    000000              //#define RESERVED            (0x0200u)  /* USB
                                -  */
   3154    000000              //#define RESERVED            (0x0100u)  /* USB
                                -  */
   3155    000000              //#define RESERVED            (0x0200u)  /* USB
                                -  */
   3156    000000              //#define RESERVED            (0x0400u)  /* USB
                                -  */
   3157    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3158    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3159    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3160    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3161    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3162    000000              
   3163    000000              /* USBPHYCTL Control Bits */
   3164    000000              #define PUOUT0_L            (0x0001u)  /* USB -
                                USB Port Output Signal Bit 0 */
   3165    000000              #define PUOUT1_L            (0x0002u)  /* USB -
                                USB Port Output Signal Bit 1 */
   3166    000000              #define PUIN0_L             (0x0004u)  /* USB -
                                PU0/DP Input Data */
   3167    000000              #define PUIN1_L             (0x0008u)  /* USB -
                                PU1/DM Input Data */
   3168    000000              //#define RESERVED            (0x0010u)  /* USB
                                -  */
   3169    000000              #define PUOPE_L             (0x0020u)  /* USB -
                                USB Port Output Enable */
   3170    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3171    000000              #define PUSEL_L             (0x0080u)  /* USB -
                                USB Port Function Select */
   3172    000000              //#define RESERVED            (0x0200u)  /* USB
                                -  */
   3173    000000              //#define RESERVED            (0x0100u)  /* USB
                                -  */
   3174    000000              //#define RESERVED            (0x0200u)  /* USB
                                -  */
   3175    000000              //#define RESERVED            (0x0400u)  /* USB
                                -  */
   3176    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3177    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3178    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3179    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3180    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3181    000000              
   3182    000000              /* USBPHYCTL Control Bits */
   3183    000000              //#define RESERVED            (0x0010u)  /* USB
                                -  */
   3184    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3185    000000              #define PUIPE_H             (0x0001u)  /* USB -
                                PHY Single Ended Input enable */
   3186    000000              //#define RESERVED            (0x0200u)  /* USB
                                -  */
   3187    000000              //#define RESERVED            (0x0100u)  /* USB
                                -  */
   3188    000000              //#define RESERVED            (0x0200u)  /* USB
                                -  */
   3189    000000              //#define RESERVED            (0x0400u)  /* USB
                                -  */
   3190    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3191    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3192    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3193    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3194    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3195    000000              
   3196    000000              #define PUDIR               (0x0020u)  /* USB -
                                Legacy Definition: USB Port Output Enable
                                */
   3197    000000              #define PSEIEN              (0x0100u)  /* USB -
                                Legacy Definition: PHY Single Ended Input
                                enable */
   3198    000000              
   3199    000000              /* USBPWRCTL Control Bits */
   3200    000000              #define VUOVLIFG            (0x0001u)  /* USB -
                                VUSB Overload Interrupt Flag */
   3201    000000              #define VBONIFG             (0x0002u)  /* USB -
                                VBUS "Coming ON" Interrupt Flag */
   3202    000000              #define VBOFFIFG            (0x0004u)  /* USB -
                                VBUS "Going OFF" Interrupt Flag */
   3203    000000              #define USBBGVBV            (0x0008u)  /* USB -
                                USB Bandgap and VBUS valid */
   3204    000000              #define USBDETEN            (0x0010u)  /* USB -
                                VBUS on/off events enable */
   3205    000000              #define OVLAOFF             (0x0020u)  /* USB -
                                LDO overload auto off enable */
   3206    000000              #define SLDOAON             (0x0040u)  /* USB -
                                Secondary LDO auto on enable */
   3207    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3208    000000              #define VUOVLIE             (0x0100u)  /* USB -
                                Overload indication Interrupt Enable */
   3209    000000              #define VBONIE              (0x0200u)  /* USB -
                                VBUS "Coming ON" Interrupt Enable */
   3210    000000              #define VBOFFIE             (0x0400u)  /* USB -
                                VBUS "Going OFF" Interrupt Enable */
   3211    000000              #define VUSBEN              (0x0800u)  /* USB -
                                LDO Enable (3.3V) */
   3212    000000              #define SLDOEN              (0x1000u)  /* USB -
                                Secondary LDO Enable (1.8V) */
   3213    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3214    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3215    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3216    000000              
   3217    000000              /* USBPWRCTL Control Bits */
   3218    000000              #define VUOVLIFG_L          (0x0001u)  /* USB -
                                VUSB Overload Interrupt Flag */
   3219    000000              #define VBONIFG_L           (0x0002u)  /* USB -
                                VBUS "Coming ON" Interrupt Flag */
   3220    000000              #define VBOFFIFG_L          (0x0004u)  /* USB -
                                VBUS "Going OFF" Interrupt Flag */
   3221    000000              #define USBBGVBV_L          (0x0008u)  /* USB -
                                USB Bandgap and VBUS valid */
   3222    000000              #define USBDETEN_L          (0x0010u)  /* USB -
                                VBUS on/off events enable */
   3223    000000              #define OVLAOFF_L           (0x0020u)  /* USB -
                                LDO overload auto off enable */
   3224    000000              #define SLDOAON_L           (0x0040u)  /* USB -
                                Secondary LDO auto on enable */
   3225    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3226    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3227    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3228    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3229    000000              
   3230    000000              /* USBPWRCTL Control Bits */
   3231    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3232    000000              #define VUOVLIE_H           (0x0001u)  /* USB -
                                Overload indication Interrupt Enable */
   3233    000000              #define VBONIE_H            (0x0002u)  /* USB -
                                VBUS "Coming ON" Interrupt Enable */
   3234    000000              #define VBOFFIE_H           (0x0004u)  /* USB -
                                VBUS "Going OFF" Interrupt Enable */
   3235    000000              #define VUSBEN_H            (0x0008u)  /* USB -
                                LDO Enable (3.3V) */
   3236    000000              #define SLDOEN_H            (0x0010u)  /* USB -
                                Secondary LDO Enable (1.8V) */
   3237    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3238    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3239    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3240    000000              
   3241    000000              /* USBPLLCTL Control Bits */
   3242    000000              //#define RESERVED            (0x0001u)  /* USB
                                -  */
   3243    000000              //#define RESERVED            (0x0002u)  /* USB
                                -  */
   3244    000000              //#define RESERVED            (0x0004u)  /* USB
                                -  */
   3245    000000              //#define RESERVED            (0x0008u)  /* USB
                                -  */
   3246    000000              //#define RESERVED            (0x0010u)  /* USB
                                -  */
   3247    000000              //#define RESERVED            (0x0020u)  /* USB
                                -  */
   3248    000000              #define UCLKSEL0            (0x0040u)  /* USB -
                                Module Clock Select Bit 0 */
   3249    000000              #define UCLKSEL1            (0x0080u)  /* USB -
                                Module Clock Select Bit 1 */
   3250    000000              #define UPLLEN              (0x0100u)  /* USB -
                                PLL enable */
   3251    000000              #define UPFDEN              (0x0200u)  /* USB -
                                Phase Freq. Discriminator enable */
   3252    000000              //#define RESERVED            (0x0400u)  /* USB
                                -  */
   3253    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3254    000000              #define UPCS0               (0x1000u)  /* USB -
                                PLL Clock Select Bit 0 */
   3255    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3256    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3257    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3258    000000              
   3259    000000              /* USBPLLCTL Control Bits */
   3260    000000              //#define RESERVED            (0x0001u)  /* USB
                                -  */
   3261    000000              //#define RESERVED            (0x0002u)  /* USB
                                -  */
   3262    000000              //#define RESERVED            (0x0004u)  /* USB
                                -  */
   3263    000000              //#define RESERVED            (0x0008u)  /* USB
                                -  */
   3264    000000              //#define RESERVED            (0x0010u)  /* USB
                                -  */
   3265    000000              //#define RESERVED            (0x0020u)  /* USB
                                -  */
   3266    000000              #define UCLKSEL0_L          (0x0040u)  /* USB -
                                Module Clock Select Bit 0 */
   3267    000000              #define UCLKSEL1_L          (0x0080u)  /* USB -
                                Module Clock Select Bit 1 */
   3268    000000              //#define RESERVED            (0x0400u)  /* USB
                                -  */
   3269    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3270    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3271    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3272    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3273    000000              
   3274    000000              /* USBPLLCTL Control Bits */
   3275    000000              //#define RESERVED            (0x0001u)  /* USB
                                -  */
   3276    000000              //#define RESERVED            (0x0002u)  /* USB
                                -  */
   3277    000000              //#define RESERVED            (0x0004u)  /* USB
                                -  */
   3278    000000              //#define RESERVED            (0x0008u)  /* USB
                                -  */
   3279    000000              //#define RESERVED            (0x0010u)  /* USB
                                -  */
   3280    000000              //#define RESERVED            (0x0020u)  /* USB
                                -  */
   3281    000000              #define UPLLEN_H            (0x0001u)  /* USB -
                                PLL enable */
   3282    000000              #define UPFDEN_H            (0x0002u)  /* USB -
                                Phase Freq. Discriminator enable */
   3283    000000              //#define RESERVED            (0x0400u)  /* USB
                                -  */
   3284    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3285    000000              #define UPCS0_H             (0x0010u)  /* USB -
                                PLL Clock Select Bit 0 */
   3286    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3287    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3288    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3289    000000              
   3290    000000              #define UCLKSEL_0           (0x0000u)  /* USB -
                                Module Clock Select: 0 */
   3291    000000              #define UCLKSEL_1           (0x0040u)  /* USB -
                                Module Clock Select: 1 */
   3292    000000              #define UCLKSEL_2           (0x0080u)  /* USB -
                                Module Clock Select: 2 */
   3293    000000              #define UCLKSEL_3           (0x00C0u)  /* USB -
                                Module Clock Select: 3 (Reserved) */
   3294    000000              
   3295    000000              #define UCLKSEL__PLLCLK     (0x0000u)  /* USB -
                                Module Clock Select: PLLCLK */
   3296    000000              #define UCLKSEL__XT1CLK     (0x0040u)  /* USB -
                                Module Clock Select: XT1CLK */
   3297    000000              #define UCLKSEL__XT2CLK     (0x0080u)  /* USB -
                                Module Clock Select: XT2CLK */
   3298    000000              
   3299    000000              /* USBPLLDIVB Control Bits */
   3300    000000              #define UPMB0               (0x0001u)  /* USB -
                                PLL feedback divider buffer Bit 0 */
   3301    000000              #define UPMB1               (0x0002u)  /* USB -
                                PLL feedback divider buffer Bit 1 */
   3302    000000              #define UPMB2               (0x0004u)  /* USB -
                                PLL feedback divider buffer Bit 2 */
   3303    000000              #define UPMB3               (0x0008u)  /* USB -
                                PLL feedback divider buffer Bit 3 */
   3304    000000              #define UPMB4               (0x0010u)  /* USB -
                                PLL feedback divider buffer Bit 4 */
   3305    000000              #define UPMB5               (0x0020u)  /* USB -
                                PLL feedback divider buffer Bit 5 */
   3306    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3307    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3308    000000              #define UPQB0               (0x0100u)  /* USB -
                                PLL prescale divider buffer Bit 0 */
   3309    000000              #define UPQB1               (0x0200u)  /* USB -
                                PLL prescale divider buffer Bit 1 */
   3310    000000              #define UPQB2               (0x0400u)  /* USB -
                                PLL prescale divider buffer Bit 2 */
   3311    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3312    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3313    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3314    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3315    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3316    000000              
   3317    000000              /* USBPLLDIVB Control Bits */
   3318    000000              #define UPMB0_L             (0x0001u)  /* USB -
                                PLL feedback divider buffer Bit 0 */
   3319    000000              #define UPMB1_L             (0x0002u)  /* USB -
                                PLL feedback divider buffer Bit 1 */
   3320    000000              #define UPMB2_L             (0x0004u)  /* USB -
                                PLL feedback divider buffer Bit 2 */
   3321    000000              #define UPMB3_L             (0x0008u)  /* USB -
                                PLL feedback divider buffer Bit 3 */
   3322    000000              #define UPMB4_L             (0x0010u)  /* USB -
                                PLL feedback divider buffer Bit 4 */
   3323    000000              #define UPMB5_L             (0x0020u)  /* USB -
                                PLL feedback divider buffer Bit 5 */
   3324    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3325    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3326    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3327    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3328    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3329    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3330    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3331    000000              
   3332    000000              /* USBPLLDIVB Control Bits */
   3333    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3334    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3335    000000              #define UPQB0_H             (0x0001u)  /* USB -
                                PLL prescale divider buffer Bit 0 */
   3336    000000              #define UPQB1_H             (0x0002u)  /* USB -
                                PLL prescale divider buffer Bit 1 */
   3337    000000              #define UPQB2_H             (0x0004u)  /* USB -
                                PLL prescale divider buffer Bit 2 */
   3338    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3339    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3340    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3341    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3342    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3343    000000              
   3344    000000              #define USBPLL_SETCLK_1_5      (UPMB0*31 |
                                UPQB0*0)  /* USB - PLL Set for 1.5 MHz input
                                clock */
   3345    000000              #define USBPLL_SETCLK_1_6      (UPMB0*29 |
                                UPQB0*0)  /* USB - PLL Set for 1.6 MHz input
                                clock */
   3346    000000              #define USBPLL_SETCLK_1_7778   (UPMB0*26 |
                                UPQB0*0)  /* USB - PLL Set for 1.7778 MHz input
                                clock */
   3347    000000              #define USBPLL_SETCLK_1_8432   (UPMB0*25 |
                                UPQB0*0)  /* USB - PLL Set for 1.8432 MHz input
                                clock */
   3348    000000              #define USBPLL_SETCLK_1_8461   (UPMB0*25 |
                                UPQB0*0)  /* USB - PLL Set for 1.8461 MHz input
                                clock */
   3349    000000              #define USBPLL_SETCLK_1_92     (UPMB0*24 |
                                UPQB0*0)  /* USB - PLL Set for 1.92 MHz input
                                clock */
   3350    000000              #define USBPLL_SETCLK_2_0      (UPMB0*23 |
                                UPQB0*0)  /* USB - PLL Set for 2.0 MHz input
                                clock */
   3351    000000              #define USBPLL_SETCLK_2_4      (UPMB0*19 |
                                UPQB0*0)  /* USB - PLL Set for 2.4 MHz input
                                clock */
   3352    000000              #define USBPLL_SETCLK_2_6667   (UPMB0*17 |
                                UPQB0*0)  /* USB - PLL Set for 2.6667 MHz input
                                clock */
   3353    000000              #define USBPLL_SETCLK_3_0      (UPMB0*15 |
                                UPQB0*0)  /* USB - PLL Set for 3.0 MHz input
                                clock */
   3354    000000              #define USBPLL_SETCLK_3_2      (UPMB0*29 |
                                UPQB0*1)  /* USB - PLL Set for 3.2 MHz input
                                clock */
   3355    000000              #define USBPLL_SETCLK_3_5556   (UPMB0*26 |
                                UPQB0*1)  /* USB - PLL Set for 3.5556 MHz input
                                clock */
   3356    000000              #define USBPLL_SETCLK_3_579545 (UPMB0*26 |
                                UPQB0*1)  /* USB - PLL Set for 3.579546 MHz
                                input clock */
   3357    000000              #define USBPLL_SETCLK_3_84     (UPMB0*24 |
                                UPQB0*1)  /* USB - PLL Set for 3.84 MHz input
                                clock */
   3358    000000              #define USBPLL_SETCLK_4_0      (UPMB0*23 |
                                UPQB0*1)  /* USB - PLL Set for 4.0 MHz input
                                clock */
   3359    000000              #define USBPLL_SETCLK_4_1739   (UPMB0*22 |
                                UPQB0*1)  /* USB - PLL Set for 4.1739 MHz input
                                clock */
   3360    000000              #define USBPLL_SETCLK_4_1943   (UPMB0*22 |
                                UPQB0*1)  /* USB - PLL Set for 4.1943 MHz input
                                clock */
   3361    000000              #define USBPLL_SETCLK_4_332    (UPMB0*21 |
                                UPQB0*1)  /* USB - PLL Set for 4.332 MHz input
                                clock */
   3362    000000              #define USBPLL_SETCLK_4_3636   (UPMB0*21 |
                                UPQB0*1)  /* USB - PLL Set for 4.3636 MHz input
                                clock */
   3363    000000              #define USBPLL_SETCLK_4_5      (UPMB0*31 |
                                UPQB0*2)  /* USB - PLL Set for 4.5 MHz input
                                clock */
   3364    000000              #define USBPLL_SETCLK_4_8      (UPMB0*19 |
                                UPQB0*1)  /* USB - PLL Set for 4.8 MHz input
                                clock */
   3365    000000              #define USBPLL_SETCLK_5_33     (UPMB0*17 |
                                UPQB0*1)  /* USB - PLL Set for 5.33 MHz input
                                clock */
   3366    000000              #define USBPLL_SETCLK_5_76     (UPMB0*24 |
                                UPQB0*2)  /* USB - PLL Set for 5.76 MHz input
                                clock */
   3367    000000              #define USBPLL_SETCLK_6_0      (UPMB0*23 |
                                UPQB0*2)  /* USB - PLL Set for 6.0 MHz input
                                clock */
   3368    000000              #define USBPLL_SETCLK_6_4      (UPMB0*29 |
                                UPQB0*3)  /* USB - PLL Set for 6.4 MHz input
                                clock */
   3369    000000              #define USBPLL_SETCLK_7_2      (UPMB0*19 |
                                UPQB0*2)  /* USB - PLL Set for 7.2 MHz input
                                clock */
   3370    000000              #define USBPLL_SETCLK_7_68     (UPMB0*24 |
                                UPQB0*3)  /* USB - PLL Set for 7.68 MHz input
                                clock */
   3371    000000              #define USBPLL_SETCLK_8_0      (UPMB0*17 |
                                UPQB0*2)  /* USB - PLL Set for 8.0 MHz input
                                clock */
   3372    000000              #define USBPLL_SETCLK_9_0      (UPMB0*15 |
                                UPQB0*2)  /* USB - PLL Set for 9.0 MHz input
                                clock */
   3373    000000              #define USBPLL_SETCLK_9_6      (UPMB0*19 |
                                UPQB0*3)  /* USB - PLL Set for 9.6 MHz input
                                clock */
   3374    000000              #define USBPLL_SETCLK_10_66    (UPMB0*17 |
                                UPQB0*3)  /* USB - PLL Set for 10.66 MHz input
                                clock */
   3375    000000              #define USBPLL_SETCLK_12_0     (UPMB0*15 |
                                UPQB0*3)  /* USB - PLL Set for 12.0 MHz input
                                clock */
   3376    000000              #define USBPLL_SETCLK_12_8     (UPMB0*29 |
                                UPQB0*5)  /* USB - PLL Set for 12.8 MHz input
                                clock */
   3377    000000              #define USBPLL_SETCLK_14_4     (UPMB0*19 |
                                UPQB0*4)  /* USB - PLL Set for 14.4 MHz input
                                clock */
   3378    000000              #define USBPLL_SETCLK_16_0     (UPMB0*17 |
                                UPQB0*4)  /* USB - PLL Set for 16.0 MHz input
                                clock */
   3379    000000              #define USBPLL_SETCLK_16_9344  (UPMB0*16 |
                                UPQB0*4)  /* USB - PLL Set for 16.9344 MHz
                                input clock */
   3380    000000              #define USBPLL_SETCLK_16_94118 (UPMB0*16 |
                                UPQB0*4)  /* USB - PLL Set for 16.94118 MHz
                                input clock */
   3381    000000              #define USBPLL_SETCLK_18_0     (UPMB0*15 |
                                UPQB0*4)  /* USB - PLL Set for 18.0 MHz input
                                clock */
   3382    000000              #define USBPLL_SETCLK_19_2     (UPMB0*19 |
                                UPQB0*5)  /* USB - PLL Set for 19.2 MHz input
                                clock */
   3383    000000              #define USBPLL_SETCLK_24_0     (UPMB0*15 |
                                UPQB0*5)  /* USB - PLL Set for 24.0 MHz input
                                clock */
   3384    000000              #define USBPLL_SETCLK_25_6     (UPMB0*29 |
                                UPQB0*7)  /* USB - PLL Set for 25.6 MHz input
                                clock */
   3385    000000              #define USBPLL_SETCLK_26_0     (UPMB0*23 |
                                UPQB0*6)  /* USB - PLL Set for 26.0 MHz input
                                clock */
   3386    000000              #define USBPLL_SETCLK_32_0     (UPMB0*23 |
                                UPQB0*7)  /* USB - PLL Set for 32.0 MHz input
                                clock */
   3387    000000              
   3388    000000              /* USBPLLIR Control Bits */
   3389    000000              #define USBOOLIFG           (0x0001u)  /* USB -
                                PLL out of lock Interrupt Flag */
   3390    000000              #define USBLOSIFG           (0x0002u)  /* USB -
                                PLL loss of signal Interrupt Flag */
   3391    000000              #define USBOORIFG           (0x0004u)  /* USB -
                                PLL out of range Interrupt Flag */
   3392    000000              //#define RESERVED            (0x0008u)  /* USB
                                -  */
   3393    000000              //#define RESERVED            (0x0010u)  /* USB
                                -  */
   3394    000000              //#define RESERVED            (0x0020u)  /* USB
                                -  */
   3395    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3396    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3397    000000              #define USBOOLIE            (0x0100u)  /* USB -
                                PLL out of lock Interrupt enable */
   3398    000000              #define USBLOSIE            (0x0200u)  /* USB -
                                PLL loss of signal Interrupt enable */
   3399    000000              #define USBOORIE            (0x0400u)  /* USB -
                                PLL out of range Interrupt enable */
   3400    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3401    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3402    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3403    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3404    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3405    000000              
   3406    000000              /* USBPLLIR Control Bits */
   3407    000000              #define USBOOLIFG_L         (0x0001u)  /* USB -
                                PLL out of lock Interrupt Flag */
   3408    000000              #define USBLOSIFG_L         (0x0002u)  /* USB -
                                PLL loss of signal Interrupt Flag */
   3409    000000              #define USBOORIFG_L         (0x0004u)  /* USB -
                                PLL out of range Interrupt Flag */
   3410    000000              //#define RESERVED            (0x0008u)  /* USB
                                -  */
   3411    000000              //#define RESERVED            (0x0010u)  /* USB
                                -  */
   3412    000000              //#define RESERVED            (0x0020u)  /* USB
                                -  */
   3413    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3414    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3415    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3416    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3417    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3418    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3419    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3420    000000              
   3421    000000              /* USBPLLIR Control Bits */
   3422    000000              //#define RESERVED            (0x0008u)  /* USB
                                -  */
   3423    000000              //#define RESERVED            (0x0010u)  /* USB
                                -  */
   3424    000000              //#define RESERVED            (0x0020u)  /* USB
                                -  */
   3425    000000              //#define RESERVED            (0x0040u)  /* USB
                                -  */
   3426    000000              //#define RESERVED            (0x0080u)  /* USB
                                -  */
   3427    000000              #define USBOOLIE_H          (0x0001u)  /* USB -
                                PLL out of lock Interrupt enable */
   3428    000000              #define USBLOSIE_H          (0x0002u)  /* USB -
                                PLL loss of signal Interrupt enable */
   3429    000000              #define USBOORIE_H          (0x0004u)  /* USB -
                                PLL out of range Interrupt enable */
   3430    000000              //#define RESERVED            (0x0800u)  /* USB
                                -  */
   3431    000000              //#define RESERVED            (0x1000u)  /* USB
                                -  */
   3432    000000              //#define RESERVED            (0x2000u)  /* USB
                                -  */
   3433    000000              //#define RESERVED            (0x4000u)  /* USB
                                -  */
   3434    000000              //#define RESERVED            (0x8000u)  /* USB
                                -  */
   3435    000000              
   3436    000000              /* =============================================
                               ============================ */
   3437    000000              /* USB Control Registers */
   3438    000000              /* =============================================
                               ============================ */
   3439    000000              #define USBIEPCNF_0_   (0x0920u)    /* USB Input
                                endpoint_0: Configuration */
   3440    000000              DEFC(   USBIEPCNF_0  , USBIEPCNF_0_)
   3441    000000              #define USBIEPCNT_0_   (0x0921u)    /* USB Input
                                endpoint_0: Byte Count */
   3442    000000              DEFC(   USBIEPCNT_0  , USBIEPCNT_0_)
   3443    000000              #define USBOEPCNF_0_   (0x0922u)    /* USB
                                Output endpoint_0: Configuration */
   3444    000000              DEFC(   USBOEPCNF_0  , USBOEPCNF_0_)
   3445    000000              #define USBOEPCNT_0_   (0x0923u)    /* USB
                                Output endpoint_0: byte count */
   3446    000000              DEFC(   USBOEPCNT_0  , USBOEPCNT_0_)
   3447    000000              #define USBIEPIE_      (0x092Eu)    /* USB Input
                                endpoint interrupt enable flags */
   3448    000000              DEFC(   USBIEPIE     , USBIEPIE_)
   3449    000000              #define USBOEPIE_      (0x092Fu)    /* USB
                                Output endpoint interrupt enable flags
                                */
   3450    000000              DEFC(   USBOEPIE     , USBOEPIE_)
   3451    000000              #define USBIEPIFG_     (0x0930u)    /* USB Input
                                endpoint interrupt flags */
   3452    000000              DEFC(   USBIEPIFG    , USBIEPIFG_)
   3453    000000              #define USBOEPIFG_     (0x0931u)    /* USB
                                Output endpoint interrupt flags */
   3454    000000              DEFC(   USBOEPIFG    , USBOEPIFG_)
   3455    000000              #define USBVECINT_     (0x0932u)    /* USB
                                Vector interrupt register */
   3456    000000              DEFCW(  USBVECINT    , USBVECINT_)
   3456.1  000000              sfrb USBVECINT_L = (0x0932u);
   3456.2  000000              sfrb USBVECINT_H = (0x0932u)+1;
   3456.3  000000              sfrw USBVECINT   = (0x0932u);
   3456.4  000000                    endm
   3457    000000              #define USBMAINT_      (0x0936u)    /* USB
                                maintenance register */
   3458    000000              DEFCW(  USBMAINT     , USBMAINT_)
   3458.1  000000              sfrb USBMAINT_L = (0x0936u);
   3458.2  000000              sfrb USBMAINT_H = (0x0936u)+1;
   3458.3  000000              sfrw USBMAINT   = (0x0936u);
   3458.4  000000                    endm
   3459    000000              #define USBTSREG_      (0x0938u)    /* USB Time
                                Stamp register */
   3460    000000              DEFCW(  USBTSREG     , USBTSREG_)
   3460.1  000000              sfrb USBTSREG_L = (0x0938u);
   3460.2  000000              sfrb USBTSREG_H = (0x0938u)+1;
   3460.3  000000              sfrw USBTSREG   = (0x0938u);
   3460.4  000000                    endm
   3461    000000              #define USBFN_         (0x093Au)    /* USB Frame
                                number */
   3462    000000              DEFCW(  USBFN        , USBFN_)
   3462.1  000000              sfrb USBFN_L = (0x093Au);
   3462.2  000000              sfrb USBFN_H = (0x093Au)+1;
   3462.3  000000              sfrw USBFN   = (0x093Au);
   3462.4  000000                    endm
   3463    000000              #define USBCTL_        (0x093Cu)    /* USB
                                control register */
   3464    000000              DEFC(   USBCTL       , USBCTL_)
   3465    000000              #define USBIE_         (0x093Du)    /* USB
                                interrupt enable register */
   3466    000000              DEFC(   USBIE        , USBIE_)
   3467    000000              #define USBIFG_        (0x093Eu)    /* USB
                                interrupt flag register */
   3468    000000              DEFC(   USBIFG       , USBIFG_)
   3469    000000              #define USBFUNADR_     (0x093Fu)    /* USB
                                Function address register */
   3470    000000              DEFC(   USBFUNADR    , USBFUNADR_)
   3471    000000              
   3472    000000              #define USBIV          USBVECINT   /* USB Vector
                                interrupt register (alternate define)
                                */
   3473    000000              
   3474    000000              /* USBIEPCNF_0 Control Bits */
   3475    000000              /* USBOEPCNF_0 Control Bits */
   3476    000000              //#define RESERVED       (0x0001u)  /* USB - 
                                */
   3477    000000              //#define RESERVED       (0x0001u)  /* USB - 
                                */
   3478    000000              #define USBIIE         (0x0004u)  /* USB -
                                Transaction Interrupt indication enable
                                */
   3479    000000              #define STALL          (0x0008u)  /* USB - Stall
                                Condition */
   3480    000000              //#define RESERVED       (0x0010u)  /* USB - 
                                */
   3481    000000              #define TOGGLE         (0x0020u)  /* USB -
                                Toggle Bit */
   3482    000000              //#define RESERVED       (0x0040u)  /* USB - 
                                */
   3483    000000              #define UBME           (0x0080u)  /* USB - UBM
                                In-Endpoint Enable */
   3484    000000              
   3485    000000              /* USBIEPBCNT_0 Control Bits */
   3486    000000              /* USBOEPBCNT_0 Control Bits */
   3487    000000              #define CNT0           (0x0001u)  /* USB - Byte
                                Count Bit 0 */
   3488    000000              #define CNT1           (0x0001u)  /* USB - Byte
                                Count Bit 1 */
   3489    000000              #define CNT2           (0x0004u)  /* USB - Byte
                                Count Bit 2 */
   3490    000000              #define CNT3           (0x0008u)  /* USB - Byte
                                Count Bit 3 */
   3491    000000              //#define RESERVED       (0x0010u)  /* USB - 
                                */
   3492    000000              //#define RESERVED       (0x0020u)  /* USB - 
                                */
   3493    000000              //#define RESERVED       (0x0040u)  /* USB - 
                                */
   3494    000000              #define NAK            (0x0080u)  /* USB - No
                                Acknowledge Status Bit */
   3495    000000              
   3496    000000              /* USBMAINT Control Bits */
   3497    000000              #define UTIFG          (0x0001u)  /* USB - Timer
                                Interrupt Flag */
   3498    000000              #define UTIE           (0x0002u)  /* USB - Timer
                                Interrupt Enable */
   3499    000000              //#define RESERVED       (0x0004u)  /* USB - 
                                */
   3500    000000              //#define RESERVED       (0x0008u)  /* USB - 
                                */
   3501    000000              //#define RESERVED       (0x0010u)  /* USB - 
                                */
   3502    000000              //#define RESERVED       (0x0020u)  /* USB - 
                                */
   3503    000000              //#define RESERVED       (0x0040u)  /* USB - 
                                */
   3504    000000              //#define RESERVED       (0x0080u)  /* USB - 
                                */
   3505    000000              #define TSGEN          (0x0100u)  /* USB - Time
                                Stamp Generator Enable */
   3506    000000              #define TSESEL0        (0x0200u)  /* USB - Time
                                Stamp Event Select Bit 0 */
   3507    000000              #define TSESEL1        (0x0400u)  /* USB - Time
                                Stamp Event Select Bit 1 */
   3508    000000              #define TSE3           (0x0800u)  /* USB - Time
                                Stamp Event #3 Bit */
   3509    000000              //#define RESERVED       (0x1000u)  /* USB - 
                                */
   3510    000000              #define UTSEL0         (0x2000u)  /* USB - Timer
                                Select Bit 0 */
   3511    000000              #define UTSEL1         (0x4000u)  /* USB - Timer
                                Select Bit 1 */
   3512    000000              #define UTSEL2         (0x8000u)  /* USB - Timer
                                Select Bit 2 */
   3513    000000              
   3514    000000              /* USBMAINT Control Bits */
   3515    000000              #define UTIFG_L             (0x0001u)  /* USB -
                                Timer Interrupt Flag */
   3516    000000              #define UTIE_L              (0x0002u)  /* USB -
                                Timer Interrupt Enable */
   3517    000000              //#define RESERVED       (0x0004u)  /* USB - 
                                */
   3518    000000              //#define RESERVED       (0x0008u)  /* USB - 
                                */
   3519    000000              //#define RESERVED       (0x0010u)  /* USB - 
                                */
   3520    000000              //#define RESERVED       (0x0020u)  /* USB - 
                                */
   3521    000000              //#define RESERVED       (0x0040u)  /* USB - 
                                */
   3522    000000              //#define RESERVED       (0x0080u)  /* USB - 
                                */
   3523    000000              //#define RESERVED       (0x1000u)  /* USB - 
                                */
   3524    000000              
   3525    000000              /* USBMAINT Control Bits */
   3526    000000              //#define RESERVED       (0x0004u)  /* USB - 
                                */
   3527    000000              //#define RESERVED       (0x0008u)  /* USB - 
                                */
   3528    000000              //#define RESERVED       (0x0010u)  /* USB - 
                                */
   3529    000000              //#define RESERVED       (0x0020u)  /* USB - 
                                */
   3530    000000              //#define RESERVED       (0x0040u)  /* USB - 
                                */
   3531    000000              //#define RESERVED       (0x0080u)  /* USB - 
                                */
   3532    000000              #define TSGEN_H             (0x0001u)  /* USB -
                                Time Stamp Generator Enable */
   3533    000000              #define TSESEL0_H           (0x0002u)  /* USB -
                                Time Stamp Event Select Bit 0 */
   3534    000000              #define TSESEL1_H           (0x0004u)  /* USB -
                                Time Stamp Event Select Bit 1 */
   3535    000000              #define TSE3_H              (0x0008u)  /* USB -
                                Time Stamp Event #3 Bit */
   3536    000000              //#define RESERVED       (0x1000u)  /* USB - 
                                */
   3537    000000              #define UTSEL0_H            (0x0020u)  /* USB -
                                Timer Select Bit 0 */
   3538    000000              #define UTSEL1_H            (0x0040u)  /* USB -
                                Timer Select Bit 1 */
   3539    000000              #define UTSEL2_H            (0x0080u)  /* USB -
                                Timer Select Bit 2 */
   3540    000000              
   3541    000000              #define TSESEL_0       (0x0000u)  /* USB - Time
                                Stamp Event Select: 0 */
   3542    000000              #define TSESEL_1       (0x0200u)  /* USB - Time
                                Stamp Event Select: 1 */
   3543    000000              #define TSESEL_2       (0x0400u)  /* USB - Time
                                Stamp Event Select: 2 */
   3544    000000              #define TSESEL_3       (0x0600u)  /* USB - Time
                                Stamp Event Select: 3 */
   3545    000000              
   3546    000000              #define UTSEL_0        (0x0000u)  /* USB - Timer
                                Select: 0 */
   3547    000000              #define UTSEL_1        (0x2000u)  /* USB - Timer
                                Select: 1 */
   3548    000000              #define UTSEL_2        (0x4000u)  /* USB - Timer
                                Select: 2 */
   3549    000000              #define UTSEL_3        (0x6000u)  /* USB - Timer
                                Select: 3 */
   3550    000000              #define UTSEL_4        (0x8000u)  /* USB - Timer
                                Select: 4 */
   3551    000000              #define UTSEL_5        (0xA000u)  /* USB - Timer
                                Select: 5 */
   3552    000000              #define UTSEL_6        (0xC000u)  /* USB - Timer
                                Select: 6 */
   3553    000000              #define UTSEL_7        (0xE000u)  /* USB - Timer
                                Select: 7 */
   3554    000000              
   3555    000000              /* USBCTL Control Bits */
   3556    000000              #define DIR            (0x0001u)  /* USB - Data
                                Response Bit */
   3557    000000              //#define RESERVED       (0x0002u)  /* USB - 
                                */
   3558    000000              //#define RESERVED       (0x0004u)  /* USB - 
                                */
   3559    000000              //#define RESERVED       (0x0008u)  /* USB - 
                                */
   3560    000000              #define FRSTE          (0x0010u)  /* USB -
                                Function Reset Connection Enable */
   3561    000000              #define RWUP           (0x0020u)  /* USB -
                                Device Remote Wakeup Request */
   3562    000000              #define FEN            (0x0040u)  /* USB -
                                Function Enable Bit */
   3563    000000              //#define RESERVED       (0x0080u)  /* USB - 
                                */
   3564    000000              
   3565    000000              /* USBIE Control Bits */
   3566    000000              #define STPOWIE        (0x0001u)  /* USB - Setup
                                Overwrite Interrupt Enable */
   3567    000000              //#define RESERVED       (0x0002u)  /* USB - 
                                */
   3568    000000              #define SETUPIE        (0x0004u)  /* USB - Setup
                                Interrupt Enable */
   3569    000000              //#define RESERVED       (0x0008u)  /* USB - 
                                */
   3570    000000              //#define RESERVED       (0x0010u)  /* USB - 
                                */
   3571    000000              #define RESRIE         (0x0020u)  /* USB -
                                Function Resume Request Interrupt Enable
                                */
   3572    000000              #define SUSRIE         (0x0040u)  /* USB -
                                Function Suspend Request Interrupt Enable
                                */
   3573    000000              #define RSTRIE         (0x0080u)  /* USB -
                                Function Reset Request Interrupt Enable
                                */
   3574    000000              
   3575    000000              /* USBIFG Control Bits */
   3576    000000              #define STPOWIFG       (0x0001u)  /* USB - Setup
                                Overwrite Interrupt Flag */
   3577    000000              //#define RESERVED       (0x0002u)  /* USB - 
                                */
   3578    000000              #define SETUPIFG       (0x0004u)  /* USB - Setup
                                Interrupt Flag */
   3579    000000              //#define RESERVED       (0x0008u)  /* USB - 
                                */
   3580    000000              //#define RESERVED       (0x0010u)  /* USB - 
                                */
   3581    000000              #define RESRIFG        (0x0020u)  /* USB -
                                Function Resume Request Interrupt Flag
                                */
   3582    000000              #define SUSRIFG        (0x0040u)  /* USB -
                                Function Suspend Request Interrupt Flag
                                */
   3583    000000              #define RSTRIFG        (0x0080u)  /* USB -
                                Function Reset Request Interrupt Flag
                                */
   3584    000000              
   3585    000000              //values of USBVECINT when USB-interrupt
                                occured
   3586    000000              #define     USBVECINT_NONE                    
                                0x00
   3587    000000              #define     USBVECINT_PWR_DROP                
                                0x02
   3588    000000              #define     USBVECINT_PLL_LOCK                
                                0x04
   3589    000000              #define     USBVECINT_PLL_SIGNAL              
                                0x06
   3590    000000              #define     USBVECINT_PLL_RANGE               
                                0x08
   3591    000000              #define     USBVECINT_PWR_VBUSOn              
                                0x0A
   3592    000000              #define     USBVECINT_PWR_VBUSOff             
                                0x0C
   3593    000000              #define     USBVECINT_USB_TIMESTAMP           
                                0x10
   3594    000000              #define     USBVECINT_INPUT_ENDPOINT0         
                                0x12
   3595    000000              #define     USBVECINT_OUTPUT_ENDPOINT0        
                                0x14
   3596    000000              #define     USBVECINT_RSTR                    
                                0x16
   3597    000000              #define     USBVECINT_SUSR                    
                                0x18
   3598    000000              #define     USBVECINT_RESR                    
                                0x1A
   3599    000000              #define     USBVECINT_SETUP_PACKET_RECEIVED   
                                0x20
   3600    000000              #define     USBVECINT_STPOW_PACKET_RECEIVED   
                                0x22
   3601    000000              #define     USBVECINT_INPUT_ENDPOINT1         
                                0x24
   3602    000000              #define     USBVECINT_INPUT_ENDPOINT2         
                                0x26
   3603    000000              #define     USBVECINT_INPUT_ENDPOINT3         
                                0x28
   3604    000000              #define     USBVECINT_INPUT_ENDPOINT4         
                                0x2A
   3605    000000              #define     USBVECINT_INPUT_ENDPOINT5         
                                0x2C
   3606    000000              #define     USBVECINT_INPUT_ENDPOINT6         
                                0x2E
   3607    000000              #define     USBVECINT_INPUT_ENDPOINT7         
                                0x30
   3608    000000              #define     USBVECINT_OUTPUT_ENDPOINT1        
                                0x32
   3609    000000              #define     USBVECINT_OUTPUT_ENDPOINT2        
                                0x34
   3610    000000              #define     USBVECINT_OUTPUT_ENDPOINT3        
                                0x36
   3611    000000              #define     USBVECINT_OUTPUT_ENDPOINT4        
                                0x38
   3612    000000              #define     USBVECINT_OUTPUT_ENDPOINT5        
                                0x3A
   3613    000000              #define     USBVECINT_OUTPUT_ENDPOINT6        
                                0x3C
   3614    000000              #define     USBVECINT_OUTPUT_ENDPOINT7        
                                0x3E
   3615    000000              
   3616    000000              
   3617    000000              /* =============================================
                               ============================ */
   3618    000000              /* USB Operation Registers */
   3619    000000              /* =============================================
                               ============================ */
   3620    000000              
   3621    000000              #define USBIEPSIZXY_7_    (0x23FFu)    /* Input
                                Endpoint_7: X/Y-buffer size  */
   3622    000000              DEFC(   USBIEPSIZXY_7   , USBIEPSIZXY_7_)
   3623    000000              #define USBIEPBCTY_7_     (0x23FEu)    /* Input
                                Endpoint_7: Y-byte count  */
   3624    000000              DEFC(   USBIEPBCTY_7    , USBIEPBCTY_7_)
   3625    000000              #define USBIEPBBAY_7_     (0x23FDu)    /* Input
                                Endpoint_7: Y-buffer base addr.  */
   3626    000000              DEFC(   USBIEPBBAY_7    , USBIEPBBAY_7_)
   3627    000000              //sfrb    Spare    (0x23FC)   /* Not used 
                                */
   3628    000000              //sfrb    Spare    (0x23FB)   /* Not used 
                                */
   3629    000000              #define USBIEPBCTX_7_     (0x23FAu)    /* Input
                                Endpoint_7: X-byte count  */
   3630    000000              DEFC(   USBIEPBCTX_7    , USBIEPBCTX_7_)
   3631    000000              #define USBIEPBBAX_7_     (0x23F9u)    /* Input
                                Endpoint_7: X-buffer base addr. */
   3632    000000              DEFC(   USBIEPBBAX_7    , USBIEPBBAX_7_)
   3633    000000              #define USBIEPCNF_7_      (0x23F8u)    /* Input
                                Endpoint_7: Configuration  */
   3634    000000              DEFC(   USBIEPCNF_7     , USBIEPCNF_7_)
   3635    000000              #define USBIEPSIZXY_6_    (0x23F7u)    /* Input
                                Endpoint_6: X/Y-buffer size  */
   3636    000000              DEFC(   USBIEPSIZXY_6   , USBIEPSIZXY_6_)
   3637    000000              #define USBIEPBCTY_6_     (0x23F6u)    /* Input
                                Endpoint_6: Y-byte count */
   3638    000000              DEFC(   USBIEPBCTY_6    , USBIEPBCTY_6_)
   3639    000000              #define USBIEPBBAY_6_     (0x23F5u)    /* Input
                                Endpoint_6: Y-buffer base addr. */
   3640    000000              DEFC(   USBIEPBBAY_6    , USBIEPBBAY_6_)
   3641    000000              //sfrb    Spare    (0x23F4)   /* Not used 
                                */
   3642    000000              //sfrb    Spare    (0x23F3)   /* Not used 
                                */
   3643    000000              #define USBIEPBCTX_6_     (0x23F2u)    /* Input
                                Endpoint_6: X-byte count */
   3644    000000              DEFC(   USBIEPBCTX_6    , USBIEPBCTX_6_)
   3645    000000              #define USBIEPBBAX_6_     (0x23F1u)    /* Input
                                Endpoint_6: X-buffer base addr. */
   3646    000000              DEFC(   USBIEPBBAX_6    , USBIEPBBAX_6_)
   3647    000000              #define USBIEPCNF_6_      (0x23F0u)    /* Input
                                Endpoint_6: Configuration */
   3648    000000              DEFC(   USBIEPCNF_6     , USBIEPCNF_6_)
   3649    000000              #define USBIEPSIZXY_5_    (0x23EFu)    /* Input
                                Endpoint_5: X/Y-buffer size */
   3650    000000              DEFC(   USBIEPSIZXY_5   , USBIEPSIZXY_5_)
   3651    000000              #define USBIEPBCTY_5_     (0x23EEu)    /* Input
                                Endpoint_5: Y-byte count */
   3652    000000              DEFC(   USBIEPBCTY_5    , USBIEPBCTY_5_)
   3653    000000              #define USBIEPBBAY_5_     (0x23EDu)    /* Input
                                Endpoint_5: Y-buffer base addr. */
   3654    000000              DEFC(   USBIEPBBAY_5    , USBIEPBBAY_5_)
   3655    000000              //sfrb    Spare    (0x23EC)   /* Not used
                                */
   3656    000000              //sfrb    Spare    (0x23EB)   /* Not used
                                */
   3657    000000              #define USBIEPBCTX_5_     (0x23EAu)    /* Input
                                Endpoint_5: X-byte count */
   3658    000000              DEFC(   USBIEPBCTX_5    , USBIEPBCTX_5_)
   3659    000000              #define USBIEPBBAX_5_     (0x23E9u)    /* Input
                                Endpoint_5: X-buffer base addr. */
   3660    000000              DEFC(   USBIEPBBAX_5    , USBIEPBBAX_5_)
   3661    000000              #define USBIEPCNF_5_      (0x23E8u)    /* Input
                                Endpoint_5: Configuration */
   3662    000000              DEFC(   USBIEPCNF_5     , USBIEPCNF_5_)
   3663    000000              #define USBIEPSIZXY_4_    (0x23E7u)    /* Input
                                Endpoint_4: X/Y-buffer size */
   3664    000000              DEFC(   USBIEPSIZXY_4   , USBIEPSIZXY_4_)
   3665    000000              #define USBIEPBCTY_4_     (0x23E6u)    /* Input
                                Endpoint_4: Y-byte count */
   3666    000000              DEFC(   USBIEPBCTY_4    , USBIEPBCTY_4_)
   3667    000000              #define USBIEPBBAY_4_     (0x23E5u)    /* Input
                                Endpoint_4: Y-buffer base addr. */
   3668    000000              DEFC(   USBIEPBBAY_4    , USBIEPBBAY_4_)
   3669    000000              //sfrb    Spare    (0x23E4)   /* Not used
                                */
   3670    000000              //sfrb    Spare    (0x23E3)   /* Not used
                                */
   3671    000000              #define USBIEPBCTX_4_     (0x23E2u)    /* Input
                                Endpoint_4: X-byte count */
   3672    000000              DEFC(   USBIEPBCTX_4    , USBIEPBCTX_4_)
   3673    000000              #define USBIEPBBAX_4_     (0x23E1u)    /* Input
                                Endpoint_4: X-buffer base addr. */
   3674    000000              DEFC(   USBIEPBBAX_4    , USBIEPBBAX_4_)
   3675    000000              #define USBIEPCNF_4_      (0x23E0u)    /* Input
                                Endpoint_4: Configuration */
   3676    000000              DEFC(   USBIEPCNF_4     , USBIEPCNF_4_)
   3677    000000              #define USBIEPSIZXY_3_    (0x23DFu)    /* Input
                                Endpoint_3: X/Y-buffer size */
   3678    000000              DEFC(   USBIEPSIZXY_3   , USBIEPSIZXY_3_)
   3679    000000              #define USBIEPBCTY_3_     (0x23DEu)    /* Input
                                Endpoint_3: Y-byte count */
   3680    000000              DEFC(   USBIEPBCTY_3    , USBIEPBCTY_3_)
   3681    000000              #define USBIEPBBAY_3_     (0x23DDu)    /* Input
                                Endpoint_3: Y-buffer base addr. */
   3682    000000              DEFC(   USBIEPBBAY_3    , USBIEPBBAY_3_)
   3683    000000              //sfrb    Spare    (0x23DC)   /* Not used
                                */
   3684    000000              //sfrb    Spare    (0x23DB)   /* Not used
                                */
   3685    000000              #define USBIEPBCTX_3_     (0x23DAu)    /* Input
                                Endpoint_3: X-byte count */
   3686    000000              DEFC(   USBIEPBCTX_3    , USBIEPBCTX_3_)
   3687    000000              #define USBIEPBBAX_3_     (0x23D9u)    /* Input
                                Endpoint_3: X-buffer base addr. */
   3688    000000              DEFC(   USBIEPBBAX_3    , USBIEPBBAX_3_)
   3689    000000              #define USBIEPCNF_3_      (0x23D8u)    /* Input
                                Endpoint_3: Configuration */
   3690    000000              DEFC(   USBIEPCNF_3     , USBIEPCNF_3_)
   3691    000000              #define USBIEPSIZXY_2_    (0x23D7u)    /* Input
                                Endpoint_2: X/Y-buffer size */
   3692    000000              DEFC(   USBIEPSIZXY_2   , USBIEPSIZXY_2_)
   3693    000000              #define USBIEPBCTY_2_     (0x23D6u)    /* Input
                                Endpoint_2: Y-byte count */
   3694    000000              DEFC(   USBIEPBCTY_2    , USBIEPBCTY_2_)
   3695    000000              #define USBIEPBBAY_2_     (0x23D5u)    /* Input
                                Endpoint_2: Y-buffer base addr. */
   3696    000000              DEFC(   USBIEPBBAY_2    , USBIEPBBAY_2_)
   3697    000000              //sfrb    Spare    (0x23D4)   /* Not used
                                */
   3698    000000              //sfrb    Spare    (0x23D3)   /* Not used
                                */
   3699    000000              #define USBIEPBCTX_2_     (0x23D2u)    /* Input
                                Endpoint_2: X-byte count */
   3700    000000              DEFC(   USBIEPBCTX_2    , USBIEPBCTX_2_)
   3701    000000              #define USBIEPBBAX_2_     (0x23D1u)    /* Input
                                Endpoint_2: X-buffer base addr. */
   3702    000000              DEFC(   USBIEPBBAX_2    , USBIEPBBAX_2_)
   3703    000000              #define USBIEPCNF_2_      (0x23D0u)    /* Input
                                Endpoint_2: Configuration */
   3704    000000              DEFC(   USBIEPCNF_2     , USBIEPCNF_2_)
   3705    000000              #define USBIEPSIZXY_1_    (0x23CFu)    /* Input
                                Endpoint_1: X/Y-buffer size */
   3706    000000              DEFC(   USBIEPSIZXY_1   , USBIEPSIZXY_1_)
   3707    000000              #define USBIEPBCTY_1_     (0x23CEu)    /* Input
                                Endpoint_1: Y-byte count */
   3708    000000              DEFC(   USBIEPBCTY_1    , USBIEPBCTY_1_)
   3709    000000              #define USBIEPBBAY_1_     (0x23CDu)    /* Input
                                Endpoint_1: Y-buffer base addr. */
   3710    000000              DEFC(   USBIEPBBAY_1    , USBIEPBBAY_1_)
   3711    000000              //sfrb    Spare    (0x23CC)   /* Not used
                                */
   3712    000000              //sfrb    Spare    (0x23CB)   /* Not used
                                */
   3713    000000              #define USBIEPBCTX_1_     (0x23CAu)    /* Input
                                Endpoint_1: X-byte count */
   3714    000000              DEFC(   USBIEPBCTX_1    , USBIEPBCTX_1_)
   3715    000000              #define USBIEPBBAX_1_     (0x23C9u)    /* Input
                                Endpoint_1: X-buffer base addr. */
   3716    000000              DEFC(   USBIEPBBAX_1    , USBIEPBBAX_1_)
   3717    000000              #define USBIEPCNF_1_      (0x23C8u)    /* Input
                                Endpoint_1: Configuration */
   3718    000000              DEFC(   USBIEPCNF_1     , USBIEPCNF_1_)
   3719    000000              //sfrb       (0x23C7)   0x0000 */
   3720    000000              //sfrb     RESERVED      (0x1C00)    /*
                                */
   3721    000000              //sfrb       (0x23C0)   0x0000 */
   3722    000000              #define USBOEPSIZXY_7_    (0x23BFu)    /* Output
                                Endpoint_7: X/Y-buffer size */
   3723    000000              DEFC(   USBOEPSIZXY_7   , USBOEPSIZXY_7_)
   3724    000000              #define USBOEPBCTY_7_     (0x23BEu)    /* Output
                                Endpoint_7: Y-byte count */
   3725    000000              DEFC(   USBOEPBCTY_7    , USBOEPBCTY_7_)
   3726    000000              #define USBOEPBBAY_7_     (0x23BDu)    /* Output
                                Endpoint_7: Y-buffer base addr. */
   3727    000000              DEFC(   USBOEPBBAY_7    , USBOEPBBAY_7_)
   3728    000000              //sfrb    Spare    (0x23BC)   /* Not used
                                */
   3729    000000              //sfrb    Spare    (0x23BB)   /* Not used
                                */
   3730    000000              #define USBOEPBCTX_7_     (0x23BAu)    /* Output
                                Endpoint_7: X-byte count */
   3731    000000              DEFC(   USBOEPBCTX_7    , USBOEPBCTX_7_)
   3732    000000              #define USBOEPBBAX_7_     (0x23B9u)    /* Output
                                Endpoint_7: X-buffer base addr. */
   3733    000000              DEFC(   USBOEPBBAX_7    , USBOEPBBAX_7_)
   3734    000000              #define USBOEPCNF_7_   (0x23B8u)   /* Output
                                Endpoint_7: Configuration */
   3735    000000              DEFC(   USBOEPCNF_7  , USBOEPCNF_7_)
   3736    000000              #define USBOEPSIZXY_6_    (0x23B7u)    /* Output
                                Endpoint_6: X/Y-buffer size */
   3737    000000              DEFC(   USBOEPSIZXY_6   , USBOEPSIZXY_6_)
   3738    000000              #define USBOEPBCTY_6_     (0x23B6u)    /* Output
                                Endpoint_6: Y-byte count */
   3739    000000              DEFC(   USBOEPBCTY_6    , USBOEPBCTY_6_)
   3740    000000              #define USBOEPBBAY_6_     (0x23B5u)    /* Output
                                Endpoint_6: Y-buffer base addr. */
   3741    000000              DEFC(   USBOEPBBAY_6    , USBOEPBBAY_6_)
   3742    000000              //sfrb    Spare    (0x23B4)   /* Not used
                                */
   3743    000000              //sfrb    Spare    (0x23B3)   /* Not used
                                */
   3744    000000              #define USBOEPBCTX_6_     (0x23B2u)    /* Output
                                Endpoint_6: X-byte count */
   3745    000000              DEFC(   USBOEPBCTX_6    , USBOEPBCTX_6_)
   3746    000000              #define USBOEPBBAX_6_     (0x23B1u)    /* Output
                                Endpoint_6: X-buffer base addr. */
   3747    000000              DEFC(   USBOEPBBAX_6    , USBOEPBBAX_6_)
   3748    000000              #define USBOEPCNF_6_      (0x23B0u)    /* Output
                                Endpoint_6: Configuration */
   3749    000000              DEFC(   USBOEPCNF_6     , USBOEPCNF_6_)
   3750    000000              #define USBOEPSIZXY_5_    (0x23AFu)    /* Output
                                Endpoint_5: X/Y-buffer size */
   3751    000000              DEFC(   USBOEPSIZXY_5   , USBOEPSIZXY_5_)
   3752    000000              #define USBOEPBCTY_5_     (0x23AEu)    /* Output
                                Endpoint_5: Y-byte count */
   3753    000000              DEFC(   USBOEPBCTY_5    , USBOEPBCTY_5_)
   3754    000000              #define USBOEPBBAY_5_     (0x23ADu)    /* Output
                                Endpoint_5: Y-buffer base addr. */
   3755    000000              DEFC(   USBOEPBBAY_5    , USBOEPBBAY_5_)
   3756    000000              //sfrb    Spare    (0x23AC)   /* Not used
                                */
   3757    000000              //sfrb    Spare    (0x23AB)   /* Not used
                                */
   3758    000000              #define USBOEPBCTX_5_     (0x23AAu)    /* Output
                                Endpoint_5: X-byte count */
   3759    000000              DEFC(   USBOEPBCTX_5    , USBOEPBCTX_5_)
   3760    000000              #define USBOEPBBAX_5_     (0x23A9u)    /* Output
                                Endpoint_5: X-buffer base addr. */
   3761    000000              DEFC(   USBOEPBBAX_5    , USBOEPBBAX_5_)
   3762    000000              #define USBOEPCNF_5_      (0x23A8u)    /* Output
                                Endpoint_5: Configuration */
   3763    000000              DEFC(   USBOEPCNF_5     , USBOEPCNF_5_)
   3764    000000              #define USBOEPSIZXY_4_    (0x23A7u)    /* Output
                                Endpoint_4: X/Y-buffer size */
   3765    000000              DEFC(   USBOEPSIZXY_4   , USBOEPSIZXY_4_)
   3766    000000              #define USBOEPBCTY_4_     (0x23A6u)    /* Output
                                Endpoint_4: Y-byte count */
   3767    000000              DEFC(   USBOEPBCTY_4    , USBOEPBCTY_4_)
   3768    000000              #define USBOEPBBAY_4_     (0x23A5u)    /* Output
                                Endpoint_4: Y-buffer base addr. */
   3769    000000              DEFC(   USBOEPBBAY_4    , USBOEPBBAY_4_)
   3770    000000              //sfrb    Spare    (0x23A4)   /* Not used
                                */
   3771    000000              //sfrb    Spare    (0x23A3)   /* Not used
                                */
   3772    000000              #define USBOEPBCTX_4_     (0x23A2u)    /* Output
                                Endpoint_4: X-byte count */
   3773    000000              DEFC(   USBOEPBCTX_4    , USBOEPBCTX_4_)
   3774    000000              #define USBOEPBBAX_4_     (0x23A1u)    /* Output
                                Endpoint_4: X-buffer base addr. */
   3775    000000              DEFC(   USBOEPBBAX_4    , USBOEPBBAX_4_)
   3776    000000              #define USBOEPCNF_4_      (0x23A0u)    /* Output
                                Endpoint_4: Configuration */
   3777    000000              DEFC(   USBOEPCNF_4     , USBOEPCNF_4_)
   3778    000000              #define USBOEPSIZXY_3_    (0x239Fu)    /* Output
                                Endpoint_3: X/Y-buffer size */
   3779    000000              DEFC(   USBOEPSIZXY_3   , USBOEPSIZXY_3_)
   3780    000000              #define USBOEPBCTY_3_     (0x239Eu)    /* Output
                                Endpoint_3: Y-byte count */
   3781    000000              DEFC(   USBOEPBCTY_3    , USBOEPBCTY_3_)
   3782    000000              #define USBOEPBBAY_3_     (0x239Du)    /* Output
                                Endpoint_3: Y-buffer base addr. */
   3783    000000              DEFC(   USBOEPBBAY_3    , USBOEPBBAY_3_)
   3784    000000              //sfrb    Spare    (0x239C)   /* Not used
                                */
   3785    000000              //sfrb    Spare    (0x239B)   /* Not used
                                */
   3786    000000              #define USBOEPBCTX_3_     (0x239Au)    /* Output
                                Endpoint_3: X-byte count */
   3787    000000              DEFC(   USBOEPBCTX_3    , USBOEPBCTX_3_)
   3788    000000              #define USBOEPBBAX_3_     (0x2399u)    /* Output
                                Endpoint_3: X-buffer base addr. */
   3789    000000              DEFC(   USBOEPBBAX_3    , USBOEPBBAX_3_)
   3790    000000              #define USBOEPCNF_3_      (0x2398u)    /* Output
                                Endpoint_3: Configuration */
   3791    000000              DEFC(   USBOEPCNF_3     , USBOEPCNF_3_)
   3792    000000              #define USBOEPSIZXY_2_    (0x2397u)    /* Output
                                Endpoint_2: X/Y-buffer size */
   3793    000000              DEFC(   USBOEPSIZXY_2   , USBOEPSIZXY_2_)
   3794    000000              #define USBOEPBCTY_2_     (0x2396u)    /* Output
                                Endpoint_2: Y-byte count */
   3795    000000              DEFC(   USBOEPBCTY_2    , USBOEPBCTY_2_)
   3796    000000              #define USBOEPBBAY_2_     (0x2395u)    /* Output
                                Endpoint_2: Y-buffer base addr. */
   3797    000000              DEFC(   USBOEPBBAY_2    , USBOEPBBAY_2_)
   3798    000000              //sfrb    Spare    (0x2394)   /* Not used
                                */
   3799    000000              //sfrb    Spare    (0x2393)   /* Not used
                                */
   3800    000000              #define USBOEPBCTX_2_     (0x2392u)    /* Output
                                Endpoint_2: X-byte count */
   3801    000000              DEFC(   USBOEPBCTX_2    , USBOEPBCTX_2_)
   3802    000000              #define USBOEPBBAX_2_     (0x2391u)    /* Output
                                Endpoint_2: X-buffer base addr. */
   3803    000000              DEFC(   USBOEPBBAX_2    , USBOEPBBAX_2_)
   3804    000000              #define USBOEPCNF_2_      (0x2390u)    /* Output
                                Endpoint_2: Configuration */
   3805    000000              DEFC(   USBOEPCNF_2     , USBOEPCNF_2_)
   3806    000000              #define USBOEPSIZXY_1_    (0x238Fu)    /* Output
                                Endpoint_1: X/Y-buffer size */
   3807    000000              DEFC(   USBOEPSIZXY_1   , USBOEPSIZXY_1_)
   3808    000000              #define USBOEPBCTY_1_     (0x238Eu)    /* Output
                                Endpoint_1: Y-byte count */
   3809    000000              DEFC(   USBOEPBCTY_1    , USBOEPBCTY_1_)
   3810    000000              #define USBOEPBBAY_1_     (0x238Du)    /* Output
                                Endpoint_1: Y-buffer base addr. */
   3811    000000              DEFC(   USBOEPBBAY_1    , USBOEPBBAY_1_)
   3812    000000              //sfrb    Spare    (0x238C)   /* Not used
                                */
   3813    000000              //sfrb    Spare    (0x238B)   /* Not used
                                */
   3814    000000              #define USBOEPBCTX_1_     (0x238Au)    /* Output
                                Endpoint_1: X-byte count */
   3815    000000              DEFC(   USBOEPBCTX_1    , USBOEPBCTX_1_)
   3816    000000              #define USBOEPBBAX_1_     (0x2389u)    /* Output
                                Endpoint_1: X-buffer base addr. */
   3817    000000              DEFC(   USBOEPBBAX_1    , USBOEPBBAX_1_)
   3818    000000              #define USBOEPCNF_1_      (0x2388u)    /* Output
                                Endpoint_1: Configuration */
   3819    000000              DEFC(   USBOEPCNF_1     , USBOEPCNF_1_)
   3820    000000              #define USBSUBLK_         (0x2380u)    /* Setup
                                Packet Block */
   3821    000000              DEFC(   USBSUBLK        , USBSUBLK_)
   3822    000000              #define USBIEP0BUF_       (0x2378u)    /* Input
                                endpoint_0 buffer */
   3823    000000              DEFC(   USBIEP0BUF      , USBIEP0BUF_)
   3824    000000              #define USBOEP0BUF_       (0x2370u)    /* Output
                                endpoint_0 buffer */
   3825    000000              DEFC(   USBOEP0BUF      , USBOEP0BUF_)
   3826    000000              #define USBTOPBUFF_       (0x236Fu)    /* Top of
                                buffer space */
   3827    000000              DEFC(   USBTOPBUFF      , USBTOPBUFF_)
   3828    000000              //         (1904 Bytes)               /* Buffer
                                space */
   3829    000000              #define USBSTABUFF_       (0x1C00u)    /* Start
                                of buffer space */
   3830    000000              DEFC(   USBSTABUFF      , USBSTABUFF_)
   3831    000000              
   3832    000000              /* USBIEPCNF_n Control Bits */
   3833    000000              /* USBOEPCNF_n Control Bits */
   3834    000000              //#define RESERVED       (0x0001u)  /* USB - 
                                */
   3835    000000              //#define RESERVED       (0x0001u)  /* USB - 
                                */
   3836    000000              #define DBUF           (0x0010u)  /* USB -
                                Double Buffer Enable */
   3837    000000              //#define RESERVED       (0x0040u)  /* USB - 
                                */
   3838    000000              
   3839    000000              /* USBIEPBCNT_n Control Bits */
   3840    000000              /* USBOEPBCNT_n Control Bits */
   3841    000000              #define CNT4           (0x0010u)  /* USB - Byte
                                Count Bit 3 */
   3842    000000              #define CNT5           (0x0020u)  /* USB - Byte
                                Count Bit 3 */
   3843    000000              #define CNT6           (0x0040u)  /* USB - Byte
                                Count Bit 3 */
   3844    000000              /***********************************************
                               *************
   3845    000000              * UNIFIED CLOCK SYSTEM
   3846    000000              ************************************************
                               ************/
   3847    000000              #define __MSP430_HAS_UCS__            /*
                                Definition to show that Module is available
                                */
   3848    000000              #define __MSP430_BASEADDRESS_UCS__ 0x0160
   3849    000000              
   3850    000000              #define  UCSCTL0_            (0x0160u)  /* UCS
                                Control Register 0 */
   3851    000000              DEFCW(   UCSCTL0           , UCSCTL0_)
   3851.1  000000              sfrb UCSCTL0_L = (0x0160u);
   3851.2  000000              sfrb UCSCTL0_H = (0x0160u)+1;
   3851.3  000000              sfrw UCSCTL0   = (0x0160u);
   3851.4  000000                    endm
   3852    000000              #define  UCSCTL1_            (0x0162u)  /* UCS
                                Control Register 1 */
   3853    000000              DEFCW(   UCSCTL1           , UCSCTL1_)
   3853.1  000000              sfrb UCSCTL1_L = (0x0162u);
   3853.2  000000              sfrb UCSCTL1_H = (0x0162u)+1;
   3853.3  000000              sfrw UCSCTL1   = (0x0162u);
   3853.4  000000                    endm
   3854    000000              #define  UCSCTL2_            (0x0164u)  /* UCS
                                Control Register 2 */
   3855    000000              DEFCW(   UCSCTL2           , UCSCTL2_)
   3855.1  000000              sfrb UCSCTL2_L = (0x0164u);
   3855.2  000000              sfrb UCSCTL2_H = (0x0164u)+1;
   3855.3  000000              sfrw UCSCTL2   = (0x0164u);
   3855.4  000000                    endm
   3856    000000              #define  UCSCTL3_            (0x0166u)  /* UCS
                                Control Register 3 */
   3857    000000              DEFCW(   UCSCTL3           , UCSCTL3_)
   3857.1  000000              sfrb UCSCTL3_L = (0x0166u);
   3857.2  000000              sfrb UCSCTL3_H = (0x0166u)+1;
   3857.3  000000              sfrw UCSCTL3   = (0x0166u);
   3857.4  000000                    endm
   3858    000000              #define  UCSCTL4_            (0x0168u)  /* UCS
                                Control Register 4 */
   3859    000000              DEFCW(   UCSCTL4           , UCSCTL4_)
   3859.1  000000              sfrb UCSCTL4_L = (0x0168u);
   3859.2  000000              sfrb UCSCTL4_H = (0x0168u)+1;
   3859.3  000000              sfrw UCSCTL4   = (0x0168u);
   3859.4  000000                    endm
   3860    000000              #define  UCSCTL5_            (0x016Au)  /* UCS
                                Control Register 5 */
   3861    000000              DEFCW(   UCSCTL5           , UCSCTL5_)
   3861.1  000000              sfrb UCSCTL5_L = (0x016Au);
   3861.2  000000              sfrb UCSCTL5_H = (0x016Au)+1;
   3861.3  000000              sfrw UCSCTL5   = (0x016Au);
   3861.4  000000                    endm
   3862    000000              #define  UCSCTL6_            (0x016Cu)  /* UCS
                                Control Register 6 */
   3863    000000              DEFCW(   UCSCTL6           , UCSCTL6_)
   3863.1  000000              sfrb UCSCTL6_L = (0x016Cu);
   3863.2  000000              sfrb UCSCTL6_H = (0x016Cu)+1;
   3863.3  000000              sfrw UCSCTL6   = (0x016Cu);
   3863.4  000000                    endm
   3864    000000              #define  UCSCTL7_            (0x016Eu)  /* UCS
                                Control Register 7 */
   3865    000000              DEFCW(   UCSCTL7           , UCSCTL7_)
   3865.1  000000              sfrb UCSCTL7_L = (0x016Eu);
   3865.2  000000              sfrb UCSCTL7_H = (0x016Eu)+1;
   3865.3  000000              sfrw UCSCTL7   = (0x016Eu);
   3865.4  000000                    endm
   3866    000000              #define  UCSCTL8_            (0x0170u)  /* UCS
                                Control Register 8 */
   3867    000000              DEFCW(   UCSCTL8           , UCSCTL8_)
   3867.1  000000              sfrb UCSCTL8_L = (0x0170u);
   3867.2  000000              sfrb UCSCTL8_H = (0x0170u)+1;
   3867.3  000000              sfrw UCSCTL8   = (0x0170u);
   3867.4  000000                    endm
   3868    000000              
   3869    000000              /* UCSCTL0 Control Bits */
   3870    000000              //#define RESERVED            (0x0001u)    /*
                                RESERVED */
   3871    000000              //#define RESERVED            (0x0002u)    /*
                                RESERVED */
   3872    000000              //#define RESERVED            (0x0004u)    /*
                                RESERVED */
   3873    000000              #define MOD0                (0x0008u)    /*
                                Modulation Bit Counter Bit : 0 */
   3874    000000              #define MOD1                (0x0010u)    /*
                                Modulation Bit Counter Bit : 1 */
   3875    000000              #define MOD2                (0x0020u)    /*
                                Modulation Bit Counter Bit : 2 */
   3876    000000              #define MOD3                (0x0040u)    /*
                                Modulation Bit Counter Bit : 3 */
   3877    000000              #define MOD4                (0x0080u)    /*
                                Modulation Bit Counter Bit : 4 */
   3878    000000              #define DCO0                (0x0100u)    /* DCO
                                TAP Bit : 0 */
   3879    000000              #define DCO1                (0x0200u)    /* DCO
                                TAP Bit : 1 */
   3880    000000              #define DCO2                (0x0400u)    /* DCO
                                TAP Bit : 2 */
   3881    000000              #define DCO3                (0x0800u)    /* DCO
                                TAP Bit : 3 */
   3882    000000              #define DCO4                (0x1000u)    /* DCO
                                TAP Bit : 4 */
   3883    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   3884    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   3885    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   3886    000000              
   3887    000000              /* UCSCTL0 Control Bits */
   3888    000000              //#define RESERVED            (0x0001u)    /*
                                RESERVED */
   3889    000000              //#define RESERVED            (0x0002u)    /*
                                RESERVED */
   3890    000000              //#define RESERVED            (0x0004u)    /*
                                RESERVED */
   3891    000000              #define MOD0_L              (0x0008u)    /*
                                Modulation Bit Counter Bit : 0 */
   3892    000000              #define MOD1_L              (0x0010u)    /*
                                Modulation Bit Counter Bit : 1 */
   3893    000000              #define MOD2_L              (0x0020u)    /*
                                Modulation Bit Counter Bit : 2 */
   3894    000000              #define MOD3_L              (0x0040u)    /*
                                Modulation Bit Counter Bit : 3 */
   3895    000000              #define MOD4_L              (0x0080u)    /*
                                Modulation Bit Counter Bit : 4 */
   3896    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   3897    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   3898    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   3899    000000              
   3900    000000              /* UCSCTL0 Control Bits */
   3901    000000              //#define RESERVED            (0x0001u)    /*
                                RESERVED */
   3902    000000              //#define RESERVED            (0x0002u)    /*
                                RESERVED */
   3903    000000              //#define RESERVED            (0x0004u)    /*
                                RESERVED */
   3904    000000              #define DCO0_H              (0x0001u)    /* DCO
                                TAP Bit : 0 */
   3905    000000              #define DCO1_H              (0x0002u)    /* DCO
                                TAP Bit : 1 */
   3906    000000              #define DCO2_H              (0x0004u)    /* DCO
                                TAP Bit : 2 */
   3907    000000              #define DCO3_H              (0x0008u)    /* DCO
                                TAP Bit : 3 */
   3908    000000              #define DCO4_H              (0x0010u)    /* DCO
                                TAP Bit : 4 */
   3909    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   3910    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   3911    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   3912    000000              
   3913    000000              /* UCSCTL1 Control Bits */
   3914    000000              #define DISMOD              (0x0001u)    /*
                                Disable Modulation */
   3915    000000              //#define RESERVED            (0x0002u)    /*
                                RESERVED */
   3916    000000              //#define RESERVED            (0x0004u)    /*
                                RESERVED */
   3917    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   3918    000000              #define DCORSEL0            (0x0010u)    /* DCO
                                Freq. Range Select Bit : 0 */
   3919    000000              #define DCORSEL1            (0x0020u)    /* DCO
                                Freq. Range Select Bit : 1 */
   3920    000000              #define DCORSEL2            (0x0040u)    /* DCO
                                Freq. Range Select Bit : 2 */
   3921    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   3922    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   3923    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   3924    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   3925    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   3926    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   3927    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   3928    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   3929    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   3930    000000              
   3931    000000              /* UCSCTL1 Control Bits */
   3932    000000              #define DISMOD_L            (0x0001u)    /*
                                Disable Modulation */
   3933    000000              //#define RESERVED            (0x0002u)    /*
                                RESERVED */
   3934    000000              //#define RESERVED            (0x0004u)    /*
                                RESERVED */
   3935    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   3936    000000              #define DCORSEL0_L          (0x0010u)    /* DCO
                                Freq. Range Select Bit : 0 */
   3937    000000              #define DCORSEL1_L          (0x0020u)    /* DCO
                                Freq. Range Select Bit : 1 */
   3938    000000              #define DCORSEL2_L          (0x0040u)    /* DCO
                                Freq. Range Select Bit : 2 */
   3939    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   3940    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   3941    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   3942    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   3943    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   3944    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   3945    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   3946    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   3947    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   3948    000000              
   3949    000000              /* UCSCTL1 Control Bits */
   3950    000000              //#define RESERVED            (0x0002u)    /*
                                RESERVED */
   3951    000000              //#define RESERVED            (0x0004u)    /*
                                RESERVED */
   3952    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   3953    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   3954    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   3955    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   3956    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   3957    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   3958    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   3959    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   3960    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   3961    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   3962    000000              
   3963    000000              #define DCORSEL_0           (0x0000u)    /* DCO
                                RSEL 0 */
   3964    000000              #define DCORSEL_1           (0x0010u)    /* DCO
                                RSEL 1 */
   3965    000000              #define DCORSEL_2           (0x0020u)    /* DCO
                                RSEL 2 */
   3966    000000              #define DCORSEL_3           (0x0030u)    /* DCO
                                RSEL 3 */
   3967    000000              #define DCORSEL_4           (0x0040u)    /* DCO
                                RSEL 4 */
   3968    000000              #define DCORSEL_5           (0x0050u)    /* DCO
                                RSEL 5 */
   3969    000000              #define DCORSEL_6           (0x0060u)    /* DCO
                                RSEL 6 */
   3970    000000              #define DCORSEL_7           (0x0070u)    /* DCO
                                RSEL 7 */
   3971    000000              
   3972    000000              /* UCSCTL2 Control Bits */
   3973    000000              #define FLLN0               (0x0001u)    /* FLL
                                Multipier Bit : 0 */
   3974    000000              #define FLLN1               (0x0002u)    /* FLL
                                Multipier Bit : 1 */
   3975    000000              #define FLLN2               (0x0004u)    /* FLL
                                Multipier Bit : 2 */
   3976    000000              #define FLLN3               (0x0008u)    /* FLL
                                Multipier Bit : 3 */
   3977    000000              #define FLLN4               (0x0010u)    /* FLL
                                Multipier Bit : 4 */
   3978    000000              #define FLLN5               (0x0020u)    /* FLL
                                Multipier Bit : 5 */
   3979    000000              #define FLLN6               (0x0040u)    /* FLL
                                Multipier Bit : 6 */
   3980    000000              #define FLLN7               (0x0080u)    /* FLL
                                Multipier Bit : 7 */
   3981    000000              #define FLLN8               (0x0100u)    /* FLL
                                Multipier Bit : 8 */
   3982    000000              #define FLLN9               (0x0200u)    /* FLL
                                Multipier Bit : 9 */
   3983    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   3984    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   3985    000000              #define FLLD0               (0x1000u)    /* Loop
                                Divider Bit : 0 */
   3986    000000              #define FLLD1               (0x2000u)    /* Loop
                                Divider Bit : 1 */
   3987    000000              #define FLLD2               (0x4000u)    /* Loop
                                Divider Bit : 1 */
   3988    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   3989    000000              
   3990    000000              /* UCSCTL2 Control Bits */
   3991    000000              #define FLLN0_L             (0x0001u)    /* FLL
                                Multipier Bit : 0 */
   3992    000000              #define FLLN1_L             (0x0002u)    /* FLL
                                Multipier Bit : 1 */
   3993    000000              #define FLLN2_L             (0x0004u)    /* FLL
                                Multipier Bit : 2 */
   3994    000000              #define FLLN3_L             (0x0008u)    /* FLL
                                Multipier Bit : 3 */
   3995    000000              #define FLLN4_L             (0x0010u)    /* FLL
                                Multipier Bit : 4 */
   3996    000000              #define FLLN5_L             (0x0020u)    /* FLL
                                Multipier Bit : 5 */
   3997    000000              #define FLLN6_L             (0x0040u)    /* FLL
                                Multipier Bit : 6 */
   3998    000000              #define FLLN7_L             (0x0080u)    /* FLL
                                Multipier Bit : 7 */
   3999    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4000    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4001    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4002    000000              
   4003    000000              /* UCSCTL2 Control Bits */
   4004    000000              #define FLLN8_H             (0x0001u)    /* FLL
                                Multipier Bit : 8 */
   4005    000000              #define FLLN9_H             (0x0002u)    /* FLL
                                Multipier Bit : 9 */
   4006    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4007    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4008    000000              #define FLLD0_H             (0x0010u)    /* Loop
                                Divider Bit : 0 */
   4009    000000              #define FLLD1_H             (0x0020u)    /* Loop
                                Divider Bit : 1 */
   4010    000000              #define FLLD2_H             (0x0040u)    /* Loop
                                Divider Bit : 1 */
   4011    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4012    000000              
   4013    000000              #define FLLD_0             (0x0000u)    /*
                                Multiply Selected Loop Freq. 1 */
   4014    000000              #define FLLD_1             (0x1000u)    /*
                                Multiply Selected Loop Freq. 2 */
   4015    000000              #define FLLD_2             (0x2000u)    /*
                                Multiply Selected Loop Freq. 4 */
   4016    000000              #define FLLD_3             (0x3000u)    /*
                                Multiply Selected Loop Freq. 8 */
   4017    000000              #define FLLD_4             (0x4000u)    /*
                                Multiply Selected Loop Freq. 16 */
   4018    000000              #define FLLD_5             (0x5000u)    /*
                                Multiply Selected Loop Freq. 32 */
   4019    000000              #define FLLD_6             (0x6000u)    /*
                                Multiply Selected Loop Freq. 32 */
   4020    000000              #define FLLD_7             (0x7000u)    /*
                                Multiply Selected Loop Freq. 32 */
   4021    000000              #define FLLD__1            (0x0000u)    /*
                                Multiply Selected Loop Freq. By 1 */
   4022    000000              #define FLLD__2            (0x1000u)    /*
                                Multiply Selected Loop Freq. By 2 */
   4023    000000              #define FLLD__4            (0x2000u)    /*
                                Multiply Selected Loop Freq. By 4 */
   4024    000000              #define FLLD__8            (0x3000u)    /*
                                Multiply Selected Loop Freq. By 8 */
   4025    000000              #define FLLD__16           (0x4000u)    /*
                                Multiply Selected Loop Freq. By 16 */
   4026    000000              #define FLLD__32           (0x5000u)    /*
                                Multiply Selected Loop Freq. By 32 */
   4027    000000              
   4028    000000              /* UCSCTL3 Control Bits */
   4029    000000              #define FLLREFDIV0          (0x0001u)    /*
                                Reference Divider Bit : 0 */
   4030    000000              #define FLLREFDIV1          (0x0002u)    /*
                                Reference Divider Bit : 1 */
   4031    000000              #define FLLREFDIV2          (0x0004u)    /*
                                Reference Divider Bit : 2 */
   4032    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   4033    000000              #define SELREF0             (0x0010u)    /* FLL
                                Reference Clock Select Bit : 0 */
   4034    000000              #define SELREF1             (0x0020u)    /* FLL
                                Reference Clock Select Bit : 1 */
   4035    000000              #define SELREF2             (0x0040u)    /* FLL
                                Reference Clock Select Bit : 2 */
   4036    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4037    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   4038    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4039    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4040    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4041    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4042    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4043    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4044    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4045    000000              
   4046    000000              /* UCSCTL3 Control Bits */
   4047    000000              #define FLLREFDIV0_L        (0x0001u)    /*
                                Reference Divider Bit : 0 */
   4048    000000              #define FLLREFDIV1_L        (0x0002u)    /*
                                Reference Divider Bit : 1 */
   4049    000000              #define FLLREFDIV2_L        (0x0004u)    /*
                                Reference Divider Bit : 2 */
   4050    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   4051    000000              #define SELREF0_L           (0x0010u)    /* FLL
                                Reference Clock Select Bit : 0 */
   4052    000000              #define SELREF1_L           (0x0020u)    /* FLL
                                Reference Clock Select Bit : 1 */
   4053    000000              #define SELREF2_L           (0x0040u)    /* FLL
                                Reference Clock Select Bit : 2 */
   4054    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4055    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   4056    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4057    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4058    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4059    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4060    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4061    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4062    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4063    000000              
   4064    000000              /* UCSCTL3 Control Bits */
   4065    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   4066    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4067    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   4068    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4069    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4070    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4071    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4072    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4073    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4074    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4075    000000              
   4076    000000              #define FLLREFDIV_0         (0x0000u)    /*
                                Reference Divider: f(LFCLK)/1 */
   4077    000000              #define FLLREFDIV_1         (0x0001u)    /*
                                Reference Divider: f(LFCLK)/2 */
   4078    000000              #define FLLREFDIV_2         (0x0002u)    /*
                                Reference Divider: f(LFCLK)/4 */
   4079    000000              #define FLLREFDIV_3         (0x0003u)    /*
                                Reference Divider: f(LFCLK)/8 */
   4080    000000              #define FLLREFDIV_4         (0x0004u)    /*
                                Reference Divider: f(LFCLK)/12 */
   4081    000000              #define FLLREFDIV_5         (0x0005u)    /*
                                Reference Divider: f(LFCLK)/16 */
   4082    000000              #define FLLREFDIV_6         (0x0006u)    /*
                                Reference Divider: f(LFCLK)/16 */
   4083    000000              #define FLLREFDIV_7         (0x0007u)    /*
                                Reference Divider: f(LFCLK)/16 */
   4084    000000              #define FLLREFDIV__1        (0x0000u)    /*
                                Reference Divider: f(LFCLK)/1 */
   4085    000000              #define FLLREFDIV__2        (0x0001u)    /*
                                Reference Divider: f(LFCLK)/2 */
   4086    000000              #define FLLREFDIV__4        (0x0002u)    /*
                                Reference Divider: f(LFCLK)/4 */
   4087    000000              #define FLLREFDIV__8        (0x0003u)    /*
                                Reference Divider: f(LFCLK)/8 */
   4088    000000              #define FLLREFDIV__12       (0x0004u)    /*
                                Reference Divider: f(LFCLK)/12 */
   4089    000000              #define FLLREFDIV__16       (0x0005u)    /*
                                Reference Divider: f(LFCLK)/16 */
   4090    000000              #define SELREF_0            (0x0000u)    /* FLL
                                Reference Clock Select 0 */
   4091    000000              #define SELREF_1            (0x0010u)    /* FLL
                                Reference Clock Select 1 */
   4092    000000              #define SELREF_2            (0x0020u)    /* FLL
                                Reference Clock Select 2 */
   4093    000000              #define SELREF_3            (0x0030u)    /* FLL
                                Reference Clock Select 3 */
   4094    000000              #define SELREF_4            (0x0040u)    /* FLL
                                Reference Clock Select 4 */
   4095    000000              #define SELREF_5            (0x0050u)    /* FLL
                                Reference Clock Select 5 */
   4096    000000              #define SELREF_6            (0x0060u)    /* FLL
                                Reference Clock Select 6 */
   4097    000000              #define SELREF_7            (0x0070u)    /* FLL
                                Reference Clock Select 7 */
   4098    000000              #define SELREF__XT1CLK      (0x0000u)    /*
                                Multiply Selected Loop Freq. By XT1CLK
                                */
   4099    000000              #define SELREF__REFOCLK     (0x0020u)    /*
                                Multiply Selected Loop Freq. By REFOCLK
                                */
   4100    000000              #define SELREF__XT2CLK      (0x0050u)    /*
                                Multiply Selected Loop Freq. By XT2CLK
                                */
   4101    000000              
   4102    000000              /* UCSCTL4 Control Bits */
   4103    000000              #define SELM0               (0x0001u)   /* MCLK
                                Source Select Bit: 0 */
   4104    000000              #define SELM1               (0x0002u)   /* MCLK
                                Source Select Bit: 1 */
   4105    000000              #define SELM2               (0x0004u)   /* MCLK
                                Source Select Bit: 2 */
   4106    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   4107    000000              #define SELS0               (0x0010u)   /* SMCLK
                                Source Select Bit: 0 */
   4108    000000              #define SELS1               (0x0020u)   /* SMCLK
                                Source Select Bit: 1 */
   4109    000000              #define SELS2               (0x0040u)   /* SMCLK
                                Source Select Bit: 2 */
   4110    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4111    000000              #define SELA0               (0x0100u)   /* ACLK
                                Source Select Bit: 0 */
   4112    000000              #define SELA1               (0x0200u)   /* ACLK
                                Source Select Bit: 1 */
   4113    000000              #define SELA2               (0x0400u)   /* ACLK
                                Source Select Bit: 2 */
   4114    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4115    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4116    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4117    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4118    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4119    000000              
   4120    000000              /* UCSCTL4 Control Bits */
   4121    000000              #define SELM0_L             (0x0001u)   /* MCLK
                                Source Select Bit: 0 */
   4122    000000              #define SELM1_L             (0x0002u)   /* MCLK
                                Source Select Bit: 1 */
   4123    000000              #define SELM2_L             (0x0004u)   /* MCLK
                                Source Select Bit: 2 */
   4124    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   4125    000000              #define SELS0_L             (0x0010u)   /* SMCLK
                                Source Select Bit: 0 */
   4126    000000              #define SELS1_L             (0x0020u)   /* SMCLK
                                Source Select Bit: 1 */
   4127    000000              #define SELS2_L             (0x0040u)   /* SMCLK
                                Source Select Bit: 2 */
   4128    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4129    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4130    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4131    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4132    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4133    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4134    000000              
   4135    000000              /* UCSCTL4 Control Bits */
   4136    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   4137    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4138    000000              #define SELA0_H             (0x0001u)   /* ACLK
                                Source Select Bit: 0 */
   4139    000000              #define SELA1_H             (0x0002u)   /* ACLK
                                Source Select Bit: 1 */
   4140    000000              #define SELA2_H             (0x0004u)   /* ACLK
                                Source Select Bit: 2 */
   4141    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4142    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4143    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4144    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4145    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4146    000000              
   4147    000000              #define SELM_0              (0x0000u)   /* MCLK
                                Source Select 0 */
   4148    000000              #define SELM_1              (0x0001u)   /* MCLK
                                Source Select 1 */
   4149    000000              #define SELM_2              (0x0002u)   /* MCLK
                                Source Select 2 */
   4150    000000              #define SELM_3              (0x0003u)   /* MCLK
                                Source Select 3 */
   4151    000000              #define SELM_4              (0x0004u)   /* MCLK
                                Source Select 4 */
   4152    000000              #define SELM_5              (0x0005u)   /* MCLK
                                Source Select 5 */
   4153    000000              #define SELM_6              (0x0006u)   /* MCLK
                                Source Select 6 */
   4154    000000              #define SELM_7              (0x0007u)   /* MCLK
                                Source Select 7 */
   4155    000000              #define SELM__XT1CLK        (0x0000u)   /* MCLK
                                Source Select XT1CLK */
   4156    000000              #define SELM__VLOCLK        (0x0001u)   /* MCLK
                                Source Select VLOCLK */
   4157    000000              #define SELM__REFOCLK       (0x0002u)   /* MCLK
                                Source Select REFOCLK */
   4158    000000              #define SELM__DCOCLK        (0x0003u)   /* MCLK
                                Source Select DCOCLK */
   4159    000000              #define SELM__DCOCLKDIV     (0x0004u)   /* MCLK
                                Source Select DCOCLKDIV */
   4160    000000              #define SELM__XT2CLK        (0x0005u)   /* MCLK
                                Source Select XT2CLK */
   4161    000000              
   4162    000000              #define SELS_0              (0x0000u)   /* SMCLK
                                Source Select 0 */
   4163    000000              #define SELS_1              (0x0010u)   /* SMCLK
                                Source Select 1 */
   4164    000000              #define SELS_2              (0x0020u)   /* SMCLK
                                Source Select 2 */
   4165    000000              #define SELS_3              (0x0030u)   /* SMCLK
                                Source Select 3 */
   4166    000000              #define SELS_4              (0x0040u)   /* SMCLK
                                Source Select 4 */
   4167    000000              #define SELS_5              (0x0050u)   /* SMCLK
                                Source Select 5 */
   4168    000000              #define SELS_6              (0x0060u)   /* SMCLK
                                Source Select 6 */
   4169    000000              #define SELS_7              (0x0070u)   /* SMCLK
                                Source Select 7 */
   4170    000000              #define SELS__XT1CLK        (0x0000u)   /* SMCLK
                                Source Select XT1CLK */
   4171    000000              #define SELS__VLOCLK        (0x0010u)   /* SMCLK
                                Source Select VLOCLK */
   4172    000000              #define SELS__REFOCLK       (0x0020u)   /* SMCLK
                                Source Select REFOCLK */
   4173    000000              #define SELS__DCOCLK        (0x0030u)   /* SMCLK
                                Source Select DCOCLK */
   4174    000000              #define SELS__DCOCLKDIV     (0x0040u)   /* SMCLK
                                Source Select DCOCLKDIV */
   4175    000000              #define SELS__XT2CLK        (0x0050u)   /* SMCLK
                                Source Select XT2CLK */
   4176    000000              
   4177    000000              #define SELA_0              (0x0000u)   /* ACLK
                                Source Select 0 */
   4178    000000              #define SELA_1              (0x0100u)   /* ACLK
                                Source Select 1 */
   4179    000000              #define SELA_2              (0x0200u)   /* ACLK
                                Source Select 2 */
   4180    000000              #define SELA_3              (0x0300u)   /* ACLK
                                Source Select 3 */
   4181    000000              #define SELA_4              (0x0400u)   /* ACLK
                                Source Select 4 */
   4182    000000              #define SELA_5              (0x0500u)   /* ACLK
                                Source Select 5 */
   4183    000000              #define SELA_6              (0x0600u)   /* ACLK
                                Source Select 6 */
   4184    000000              #define SELA_7              (0x0700u)   /* ACLK
                                Source Select 7 */
   4185    000000              #define SELA__XT1CLK        (0x0000u)   /* ACLK
                                Source Select XT1CLK */
   4186    000000              #define SELA__VLOCLK        (0x0100u)   /* ACLK
                                Source Select VLOCLK */
   4187    000000              #define SELA__REFOCLK       (0x0200u)   /* ACLK
                                Source Select REFOCLK */
   4188    000000              #define SELA__DCOCLK        (0x0300u)   /* ACLK
                                Source Select DCOCLK */
   4189    000000              #define SELA__DCOCLKDIV     (0x0400u)   /* ACLK
                                Source Select DCOCLKDIV */
   4190    000000              #define SELA__XT2CLK        (0x0500u)   /* ACLK
                                Source Select XT2CLK */
   4191    000000              
   4192    000000              /* UCSCTL5 Control Bits */
   4193    000000              #define DIVM0               (0x0001u)   /* MCLK
                                Divider Bit: 0 */
   4194    000000              #define DIVM1               (0x0002u)   /* MCLK
                                Divider Bit: 1 */
   4195    000000              #define DIVM2               (0x0004u)   /* MCLK
                                Divider Bit: 2 */
   4196    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   4197    000000              #define DIVS0               (0x0010u)   /* SMCLK
                                Divider Bit: 0 */
   4198    000000              #define DIVS1               (0x0020u)   /* SMCLK
                                Divider Bit: 1 */
   4199    000000              #define DIVS2               (0x0040u)   /* SMCLK
                                Divider Bit: 2 */
   4200    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4201    000000              #define DIVA0               (0x0100u)   /* ACLK
                                Divider Bit: 0 */
   4202    000000              #define DIVA1               (0x0200u)   /* ACLK
                                Divider Bit: 1 */
   4203    000000              #define DIVA2               (0x0400u)   /* ACLK
                                Divider Bit: 2 */
   4204    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4205    000000              #define DIVPA0              (0x1000u)   /* ACLK
                                from Pin Divider Bit: 0 */
   4206    000000              #define DIVPA1              (0x2000u)   /* ACLK
                                from Pin Divider Bit: 1 */
   4207    000000              #define DIVPA2              (0x4000u)   /* ACLK
                                from Pin Divider Bit: 2 */
   4208    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4209    000000              
   4210    000000              /* UCSCTL5 Control Bits */
   4211    000000              #define DIVM0_L             (0x0001u)   /* MCLK
                                Divider Bit: 0 */
   4212    000000              #define DIVM1_L             (0x0002u)   /* MCLK
                                Divider Bit: 1 */
   4213    000000              #define DIVM2_L             (0x0004u)   /* MCLK
                                Divider Bit: 2 */
   4214    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   4215    000000              #define DIVS0_L             (0x0010u)   /* SMCLK
                                Divider Bit: 0 */
   4216    000000              #define DIVS1_L             (0x0020u)   /* SMCLK
                                Divider Bit: 1 */
   4217    000000              #define DIVS2_L             (0x0040u)   /* SMCLK
                                Divider Bit: 2 */
   4218    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4219    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4220    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4221    000000              
   4222    000000              /* UCSCTL5 Control Bits */
   4223    000000              //#define RESERVED            (0x0008u)    /*
                                RESERVED */
   4224    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4225    000000              #define DIVA0_H             (0x0001u)   /* ACLK
                                Divider Bit: 0 */
   4226    000000              #define DIVA1_H             (0x0002u)   /* ACLK
                                Divider Bit: 1 */
   4227    000000              #define DIVA2_H             (0x0004u)   /* ACLK
                                Divider Bit: 2 */
   4228    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4229    000000              #define DIVPA0_H            (0x0010u)   /* ACLK
                                from Pin Divider Bit: 0 */
   4230    000000              #define DIVPA1_H            (0x0020u)   /* ACLK
                                from Pin Divider Bit: 1 */
   4231    000000              #define DIVPA2_H            (0x0040u)   /* ACLK
                                from Pin Divider Bit: 2 */
   4232    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4233    000000              
   4234    000000              #define DIVM_0              (0x0000u)    /* MCLK
                                Source Divider 0 */
   4235    000000              #define DIVM_1              (0x0001u)    /* MCLK
                                Source Divider 1 */
   4236    000000              #define DIVM_2              (0x0002u)    /* MCLK
                                Source Divider 2 */
   4237    000000              #define DIVM_3              (0x0003u)    /* MCLK
                                Source Divider 3 */
   4238    000000              #define DIVM_4              (0x0004u)    /* MCLK
                                Source Divider 4 */
   4239    000000              #define DIVM_5              (0x0005u)    /* MCLK
                                Source Divider 5 */
   4240    000000              #define DIVM_6              (0x0006u)    /* MCLK
                                Source Divider 6 */
   4241    000000              #define DIVM_7              (0x0007u)    /* MCLK
                                Source Divider 7 */
   4242    000000              #define DIVM__1             (0x0000u)    /* MCLK
                                Source Divider f(MCLK)/1 */
   4243    000000              #define DIVM__2             (0x0001u)    /* MCLK
                                Source Divider f(MCLK)/2 */
   4244    000000              #define DIVM__4             (0x0002u)    /* MCLK
                                Source Divider f(MCLK)/4 */
   4245    000000              #define DIVM__8             (0x0003u)    /* MCLK
                                Source Divider f(MCLK)/8 */
   4246    000000              #define DIVM__16            (0x0004u)    /* MCLK
                                Source Divider f(MCLK)/16 */
   4247    000000              #define DIVM__32            (0x0005u)    /* MCLK
                                Source Divider f(MCLK)/32 */
   4248    000000              
   4249    000000              #define DIVS_0              (0x0000u)    /*
                                SMCLK Source Divider 0 */
   4250    000000              #define DIVS_1              (0x0010u)    /*
                                SMCLK Source Divider 1 */
   4251    000000              #define DIVS_2              (0x0020u)    /*
                                SMCLK Source Divider 2 */
   4252    000000              #define DIVS_3              (0x0030u)    /*
                                SMCLK Source Divider 3 */
   4253    000000              #define DIVS_4              (0x0040u)    /*
                                SMCLK Source Divider 4 */
   4254    000000              #define DIVS_5              (0x0050u)    /*
                                SMCLK Source Divider 5 */
   4255    000000              #define DIVS_6              (0x0060u)    /*
                                SMCLK Source Divider 6 */
   4256    000000              #define DIVS_7              (0x0070u)    /*
                                SMCLK Source Divider 7 */
   4257    000000              #define DIVS__1             (0x0000u)    /*
                                SMCLK Source Divider f(SMCLK)/1 */
   4258    000000              #define DIVS__2             (0x0010u)    /*
                                SMCLK Source Divider f(SMCLK)/2 */
   4259    000000              #define DIVS__4             (0x0020u)    /*
                                SMCLK Source Divider f(SMCLK)/4 */
   4260    000000              #define DIVS__8             (0x0030u)    /*
                                SMCLK Source Divider f(SMCLK)/8 */
   4261    000000              #define DIVS__16            (0x0040u)    /*
                                SMCLK Source Divider f(SMCLK)/16 */
   4262    000000              #define DIVS__32            (0x0050u)    /*
                                SMCLK Source Divider f(SMCLK)/32 */
   4263    000000              
   4264    000000              #define DIVA_0              (0x0000u)    /* ACLK
                                Source Divider 0 */
   4265    000000              #define DIVA_1              (0x0100u)    /* ACLK
                                Source Divider 1 */
   4266    000000              #define DIVA_2              (0x0200u)    /* ACLK
                                Source Divider 2 */
   4267    000000              #define DIVA_3              (0x0300u)    /* ACLK
                                Source Divider 3 */
   4268    000000              #define DIVA_4              (0x0400u)    /* ACLK
                                Source Divider 4 */
   4269    000000              #define DIVA_5              (0x0500u)    /* ACLK
                                Source Divider 5 */
   4270    000000              #define DIVA_6              (0x0600u)    /* ACLK
                                Source Divider 6 */
   4271    000000              #define DIVA_7              (0x0700u)    /* ACLK
                                Source Divider 7 */
   4272    000000              #define DIVA__1             (0x0000u)    /* ACLK
                                Source Divider f(ACLK)/1 */
   4273    000000              #define DIVA__2             (0x0100u)    /* ACLK
                                Source Divider f(ACLK)/2 */
   4274    000000              #define DIVA__4             (0x0200u)    /* ACLK
                                Source Divider f(ACLK)/4 */
   4275    000000              #define DIVA__8             (0x0300u)    /* ACLK
                                Source Divider f(ACLK)/8 */
   4276    000000              #define DIVA__16            (0x0400u)    /* ACLK
                                Source Divider f(ACLK)/16 */
   4277    000000              #define DIVA__32            (0x0500u)    /* ACLK
                                Source Divider f(ACLK)/32 */
   4278    000000              
   4279    000000              #define DIVPA_0             (0x0000u)    /* ACLK
                                from Pin Source Divider 0 */
   4280    000000              #define DIVPA_1             (0x1000u)    /* ACLK
                                from Pin Source Divider 1 */
   4281    000000              #define DIVPA_2             (0x2000u)    /* ACLK
                                from Pin Source Divider 2 */
   4282    000000              #define DIVPA_3             (0x3000u)    /* ACLK
                                from Pin Source Divider 3 */
   4283    000000              #define DIVPA_4             (0x4000u)    /* ACLK
                                from Pin Source Divider 4 */
   4284    000000              #define DIVPA_5             (0x5000u)    /* ACLK
                                from Pin Source Divider 5 */
   4285    000000              #define DIVPA_6             (0x6000u)    /* ACLK
                                from Pin Source Divider 6 */
   4286    000000              #define DIVPA_7             (0x7000u)    /* ACLK
                                from Pin Source Divider 7 */
   4287    000000              #define DIVPA__1            (0x0000u)    /* ACLK
                                from Pin Source Divider f(ACLK)/1 */
   4288    000000              #define DIVPA__2            (0x1000u)    /* ACLK
                                from Pin Source Divider f(ACLK)/2 */
   4289    000000              #define DIVPA__4            (0x2000u)    /* ACLK
                                from Pin Source Divider f(ACLK)/4 */
   4290    000000              #define DIVPA__8            (0x3000u)    /* ACLK
                                from Pin Source Divider f(ACLK)/8 */
   4291    000000              #define DIVPA__16           (0x4000u)    /* ACLK
                                from Pin Source Divider f(ACLK)/16 */
   4292    000000              #define DIVPA__32           (0x5000u)    /* ACLK
                                from Pin Source Divider f(ACLK)/32 */
   4293    000000              
   4294    000000              /* UCSCTL6 Control Bits */
   4295    000000              #define XT1OFF              (0x0001u)    /* High
                                Frequency Oscillator 1 (XT1) disable */
   4296    000000              #define SMCLKOFF            (0x0002u)    /*
                                SMCLK Off */
   4297    000000              #define XCAP0               (0x0004u)   /*
                                XIN/XOUT Cap Bit: 0 */
   4298    000000              #define XCAP1               (0x0008u)   /*
                                XIN/XOUT Cap Bit: 1 */
   4299    000000              #define XT1BYPASS           (0x0010u)    /* XT1
                                bypass mode : 0: internal 1:sourced from
                                external pin */
   4300    000000              #define XTS                 (0x0020u)   /* 1:
                                Selects high-freq. oscillator */
   4301    000000              #define XT1DRIVE0           (0x0040u)    /* XT1
                                Drive Level mode Bit 0 */
   4302    000000              #define XT1DRIVE1           (0x0080u)    /* XT1
                                Drive Level mode Bit 1 */
   4303    000000              #define XT2OFF              (0x0100u)    /* High
                                Frequency Oscillator 2 (XT2) disable */
   4304    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4305    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4306    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4307    000000              #define XT2BYPASS           (0x1000u)    /* XT2
                                bypass mode : 0: internal 1:sourced from
                                external pin */
   4308    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4309    000000              #define XT2DRIVE0           (0x4000u)    /* XT2
                                Drive Level mode Bit 0 */
   4310    000000              #define XT2DRIVE1           (0x8000u)    /* XT2
                                Drive Level mode Bit 1 */
   4311    000000              
   4312    000000              /* UCSCTL6 Control Bits */
   4313    000000              #define XT1OFF_L            (0x0001u)    /* High
                                Frequency Oscillator 1 (XT1) disable */
   4314    000000              #define SMCLKOFF_L          (0x0002u)    /*
                                SMCLK Off */
   4315    000000              #define XCAP0_L             (0x0004u)   /*
                                XIN/XOUT Cap Bit: 0 */
   4316    000000              #define XCAP1_L             (0x0008u)   /*
                                XIN/XOUT Cap Bit: 1 */
   4317    000000              #define XT1BYPASS_L         (0x0010u)    /* XT1
                                bypass mode : 0: internal 1:sourced from
                                external pin */
   4318    000000              #define XTS_L               (0x0020u)   /* 1:
                                Selects high-freq. oscillator */
   4319    000000              #define XT1DRIVE0_L         (0x0040u)    /* XT1
                                Drive Level mode Bit 0 */
   4320    000000              #define XT1DRIVE1_L         (0x0080u)    /* XT1
                                Drive Level mode Bit 1 */
   4321    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4322    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4323    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4324    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4325    000000              
   4326    000000              /* UCSCTL6 Control Bits */
   4327    000000              #define XT2OFF_H            (0x0001u)    /* High
                                Frequency Oscillator 2 (XT2) disable */
   4328    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4329    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4330    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4331    000000              #define XT2BYPASS_H         (0x0010u)    /* XT2
                                bypass mode : 0: internal 1:sourced from
                                external pin */
   4332    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4333    000000              #define XT2DRIVE0_H         (0x0040u)    /* XT2
                                Drive Level mode Bit 0 */
   4334    000000              #define XT2DRIVE1_H         (0x0080u)    /* XT2
                                Drive Level mode Bit 1 */
   4335    000000              
   4336    000000              #define XCAP_0              (0x0000u)    /*
                                XIN/XOUT Cap 0 */
   4337    000000              #define XCAP_1              (0x0004u)    /*
                                XIN/XOUT Cap 1 */
   4338    000000              #define XCAP_2              (0x0008u)    /*
                                XIN/XOUT Cap 2 */
   4339    000000              #define XCAP_3              (0x000Cu)    /*
                                XIN/XOUT Cap 3 */
   4340    000000              #define XT1DRIVE_0          (0x0000u)    /* XT1
                                Drive Level mode: 0 */
   4341    000000              #define XT1DRIVE_1          (0x0040u)    /* XT1
                                Drive Level mode: 1 */
   4342    000000              #define XT1DRIVE_2          (0x0080u)    /* XT1
                                Drive Level mode: 2 */
   4343    000000              #define XT1DRIVE_3          (0x00C0u)    /* XT1
                                Drive Level mode: 3 */
   4344    000000              #define XT2DRIVE_0          (0x0000u)    /* XT2
                                Drive Level mode: 0 */
   4345    000000              #define XT2DRIVE_1          (0x4000u)    /* XT2
                                Drive Level mode: 1 */
   4346    000000              #define XT2DRIVE_2          (0x8000u)    /* XT2
                                Drive Level mode: 2 */
   4347    000000              #define XT2DRIVE_3          (0xC000u)    /* XT2
                                Drive Level mode: 3 */
   4348    000000              
   4349    000000              /* UCSCTL7 Control Bits */
   4350    000000              #define DCOFFG              (0x0001u)    /* DCO
                                Fault Flag */
   4351    000000              #define XT1LFOFFG           (0x0002u)    /* XT1
                                Low Frequency Oscillator Fault Flag */
   4352    000000              //#define RESERVED            (0x0004u)    /*
                                RESERVED */
   4353    000000              #define XT2OFFG             (0x0008u)    /* High
                                Frequency Oscillator 2 Fault Flag */
   4354    000000              //#define RESERVED            (0x0010u)    /*
                                RESERVED */
   4355    000000              //#define RESERVED            (0x0020u)    /*
                                RESERVED */
   4356    000000              //#define RESERVED            (0x0040u)    /*
                                RESERVED */
   4357    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4358    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   4359    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4360    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4361    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4362    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4363    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4364    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4365    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4366    000000              
   4367    000000              /* UCSCTL7 Control Bits */
   4368    000000              #define DCOFFG_L            (0x0001u)    /* DCO
                                Fault Flag */
   4369    000000              #define XT1LFOFFG_L         (0x0002u)    /* XT1
                                Low Frequency Oscillator Fault Flag */
   4370    000000              //#define RESERVED            (0x0004u)    /*
                                RESERVED */
   4371    000000              #define XT2OFFG_L           (0x0008u)    /* High
                                Frequency Oscillator 2 Fault Flag */
   4372    000000              //#define RESERVED            (0x0010u)    /*
                                RESERVED */
   4373    000000              //#define RESERVED            (0x0020u)    /*
                                RESERVED */
   4374    000000              //#define RESERVED            (0x0040u)    /*
                                RESERVED */
   4375    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4376    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   4377    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4378    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4379    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4380    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4381    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4382    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4383    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4384    000000              
   4385    000000              /* UCSCTL7 Control Bits */
   4386    000000              //#define RESERVED            (0x0004u)    /*
                                RESERVED */
   4387    000000              //#define RESERVED            (0x0010u)    /*
                                RESERVED */
   4388    000000              //#define RESERVED            (0x0020u)    /*
                                RESERVED */
   4389    000000              //#define RESERVED            (0x0040u)    /*
                                RESERVED */
   4390    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4391    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   4392    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4393    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4394    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4395    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4396    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4397    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4398    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4399    000000              
   4400    000000              /* UCSCTL8 Control Bits */
   4401    000000              #define ACLKREQEN           (0x0001u)    /* ACLK
                                Clock Request Enable */
   4402    000000              #define MCLKREQEN           (0x0002u)    /* MCLK
                                Clock Request Enable */
   4403    000000              #define SMCLKREQEN          (0x0004u)    /*
                                SMCLK Clock Request Enable */
   4404    000000              #define MODOSCREQEN         (0x0008u)    /*
                                MODOSC Clock Request Enable */
   4405    000000              //#define RESERVED            (0x0010u)    /*
                                RESERVED */
   4406    000000              //#define RESERVED            (0x0020u)    /*
                                RESERVED */
   4407    000000              //#define RESERVED            (0x0040u)    /*
                                RESERVED */
   4408    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4409    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   4410    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4411    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4412    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4413    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4414    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4415    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4416    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4417    000000              
   4418    000000              /* UCSCTL8 Control Bits */
   4419    000000              #define ACLKREQEN_L         (0x0001u)    /* ACLK
                                Clock Request Enable */
   4420    000000              #define MCLKREQEN_L         (0x0002u)    /* MCLK
                                Clock Request Enable */
   4421    000000              #define SMCLKREQEN_L        (0x0004u)    /*
                                SMCLK Clock Request Enable */
   4422    000000              #define MODOSCREQEN_L       (0x0008u)    /*
                                MODOSC Clock Request Enable */
   4423    000000              //#define RESERVED            (0x0010u)    /*
                                RESERVED */
   4424    000000              //#define RESERVED            (0x0020u)    /*
                                RESERVED */
   4425    000000              //#define RESERVED            (0x0040u)    /*
                                RESERVED */
   4426    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4427    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   4428    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4429    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4430    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4431    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4432    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4433    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4434    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4435    000000              
   4436    000000              /* UCSCTL8 Control Bits */
   4437    000000              //#define RESERVED            (0x0010u)    /*
                                RESERVED */
   4438    000000              //#define RESERVED            (0x0020u)    /*
                                RESERVED */
   4439    000000              //#define RESERVED            (0x0040u)    /*
                                RESERVED */
   4440    000000              //#define RESERVED            (0x0080u)    /*
                                RESERVED */
   4441    000000              //#define RESERVED            (0x0100u)    /*
                                RESERVED */
   4442    000000              //#define RESERVED            (0x0200u)    /*
                                RESERVED */
   4443    000000              //#define RESERVED            (0x0400u)    /*
                                RESERVED */
   4444    000000              //#define RESERVED            (0x0800u)    /*
                                RESERVED */
   4445    000000              //#define RESERVED            (0x1000u)    /*
                                RESERVED */
   4446    000000              //#define RESERVED            (0x2000u)    /*
                                RESERVED */
   4447    000000              //#define RESERVED            (0x4000u)    /*
                                RESERVED */
   4448    000000              //#define RESERVED            (0x8000u)    /*
                                RESERVED */
   4449    000000              
   4450    000000              /***********************************************
                               *************
   4451    000000              * USCI A0
   4452    000000              ************************************************
                               ************/
   4453    000000              #define __MSP430_HAS_USCI_A0__       /*
                                Definition to show that Module is available
                                */
   4454    000000              #define __MSP430_BASEADDRESS_USCI_A0__
                                0x05C0
   4455    000000              
   4456    000000              #define UCA0CTLW0_          (0x05C0u)  /* USCI
                                A0 Control Word Register 0 */
   4457    000000              DEFCW(  UCA0CTLW0         , UCA0CTLW0_)
   4457.1  000000              sfrb UCA0CTLW0_L = (0x05C0u);
   4457.2  000000              sfrb UCA0CTLW0_H = (0x05C0u)+1;
   4457.3  000000              sfrw UCA0CTLW0   = (0x05C0u);
   4457.4  000000                    endm
   4458    000000              #define UCA0CTL1            UCA0CTLW0_L  /* USCI
                                A0 Control Register 1 */
   4459    000000              #define UCA0CTL0            UCA0CTLW0_H  /* USCI
                                A0 Control Register 0 */
   4460    000000              #define UCA0BRW_            (0x05C6u)  /* USCI
                                A0 Baud Word Rate 0 */
   4461    000000              DEFCW(  UCA0BRW           , UCA0BRW_)
   4461.1  000000              sfrb UCA0BRW_L = (0x05C6u);
   4461.2  000000              sfrb UCA0BRW_H = (0x05C6u)+1;
   4461.3  000000              sfrw UCA0BRW   = (0x05C6u);
   4461.4  000000                    endm
   4462    000000              #define UCA0BR0             UCA0BRW_L /* USCI A0
                                Baud Rate 0 */
   4463    000000              #define UCA0BR1             UCA0BRW_H /* USCI A0
                                Baud Rate 1 */
   4464    000000              #define UCA0MCTL_           (0x05C8u)  /* USCI
                                A0 Modulation Control */
   4465    000000              DEFC(   UCA0MCTL          , UCA0MCTL_)
   4466    000000              #define UCA0STAT_           (0x05CAu)  /* USCI
                                A0 Status Register */
   4467    000000              DEFC(   UCA0STAT          , UCA0STAT_)
   4468    000000              #define UCA0RXBUF_          (0x05CCu)  /* USCI
                                A0 Receive Buffer */
   4469    000000              READ_ONLY DEFC( UCA0RXBUF      , UCA0RXBUF_)
   4470    000000              #define UCA0TXBUF_          (0x05CEu)  /* USCI
                                A0 Transmit Buffer */
   4471    000000              DEFC(   UCA0TXBUF         , UCA0TXBUF_)
   4472    000000              #define UCA0ABCTL_          (0x05D0u)  /* USCI
                                A0 LIN Control */
   4473    000000              DEFC(   UCA0ABCTL         , UCA0ABCTL_)
   4474    000000              #define UCA0IRCTL_          (0x05D2u)  /* USCI
                                A0 IrDA Transmit Control */
   4475    000000              DEFCW(  UCA0IRCTL         , UCA0IRCTL_)
   4475.1  000000              sfrb UCA0IRCTL_L = (0x05D2u);
   4475.2  000000              sfrb UCA0IRCTL_H = (0x05D2u)+1;
   4475.3  000000              sfrw UCA0IRCTL   = (0x05D2u);
   4475.4  000000                    endm
   4476    000000              #define UCA0IRTCTL          UCA0IRCTL_L  /* USCI
                                A0 IrDA Transmit Control */
   4477    000000              #define UCA0IRRCTL          UCA0IRCTL_H  /* USCI
                                A0 IrDA Receive Control */
   4478    000000              #define UCA0ICTL_           (0x05DCu)  /* USCI
                                A0 Interrupt Enable Register */
   4479    000000              DEFCW(  UCA0ICTL          , UCA0ICTL_)
   4479.1  000000              sfrb UCA0ICTL_L = (0x05DCu);
   4479.2  000000              sfrb UCA0ICTL_H = (0x05DCu)+1;
   4479.3  000000              sfrw UCA0ICTL   = (0x05DCu);
   4479.4  000000                    endm
   4480    000000              #define UCA0IE              UCA0ICTL_L  /* USCI
                                A0 Interrupt Enable Register */
   4481    000000              #define UCA0IFG             UCA0ICTL_H  /* USCI
                                A0 Interrupt Flags Register */
   4482    000000              #define UCA0IV_             (0x05DEu)  /* USCI
                                A0 Interrupt Vector Register */
   4483    000000              DEFW(   UCA0IV            , UCA0IV_)
   4484    000000              
   4485    000000              
   4486    000000              /***********************************************
                               *************
   4487    000000              * USCI B0
   4488    000000              ************************************************
                               ************/
   4489    000000              #define __MSP430_HAS_USCI_B0__        /*
                                Definition to show that Module is available
                                */
   4490    000000              #define __MSP430_BASEADDRESS_USCI_B0__
                                0x05E0
   4491    000000              
   4492    000000              
   4493    000000              #define UCB0CTLW0_          (0x05E0u)  /* USCI
                                B0 Control Word Register 0 */
   4494    000000              DEFCW(  UCB0CTLW0         , UCB0CTLW0_)
   4494.1  000000              sfrb UCB0CTLW0_L = (0x05E0u);
   4494.2  000000              sfrb UCB0CTLW0_H = (0x05E0u)+1;
   4494.3  000000              sfrw UCB0CTLW0   = (0x05E0u);
   4494.4  000000                    endm
   4495    000000              #define UCB0CTL1            UCB0CTLW0_L  /* USCI
                                B0 Control Register 1 */
   4496    000000              #define UCB0CTL0            UCB0CTLW0_H  /* USCI
                                B0 Control Register 0 */
   4497    000000              #define UCB0BRW_            (0x05E6u)  /* USCI
                                B0 Baud Word Rate 0 */
   4498    000000              DEFCW(  UCB0BRW           , UCB0BRW_)
   4498.1  000000              sfrb UCB0BRW_L = (0x05E6u);
   4498.2  000000              sfrb UCB0BRW_H = (0x05E6u)+1;
   4498.3  000000              sfrw UCB0BRW   = (0x05E6u);
   4498.4  000000                    endm
   4499    000000              #define UCB0BR0             UCB0BRW_L /* USCI B0
                                Baud Rate 0 */
   4500    000000              #define UCB0BR1             UCB0BRW_H /* USCI B0
                                Baud Rate 1 */
   4501    000000              #define UCB0STAT_           (0x05EAu)  /* USCI
                                B0 Status Register */
   4502    000000              DEFC(   UCB0STAT          , UCB0STAT_)
   4503    000000              #define UCB0RXBUF_          (0x05ECu)  /* USCI
                                B0 Receive Buffer */
   4504    000000              READ_ONLY DEFC( UCB0RXBUF      , UCB0RXBUF_)
   4505    000000              #define UCB0TXBUF_          (0x05EEu)  /* USCI
                                B0 Transmit Buffer */
   4506    000000              DEFC(   UCB0TXBUF         , UCB0TXBUF_)
   4507    000000              #define UCB0I2COA_          (0x05F0u)  /* USCI
                                B0 I2C Own Address */
   4508    000000              DEFCW(  UCB0I2COA         , UCB0I2COA_)
   4508.1  000000              sfrb UCB0I2COA_L = (0x05F0u);
   4508.2  000000              sfrb UCB0I2COA_H = (0x05F0u)+1;
   4508.3  000000              sfrw UCB0I2COA   = (0x05F0u);
   4508.4  000000                    endm
   4509    000000              #define UCB0I2CSA_          (0x05F2u)  /* USCI
                                B0 I2C Slave Address */
   4510    000000              DEFCW(  UCB0I2CSA         , UCB0I2CSA_)
   4510.1  000000              sfrb UCB0I2CSA_L = (0x05F2u);
   4510.2  000000              sfrb UCB0I2CSA_H = (0x05F2u)+1;
   4510.3  000000              sfrw UCB0I2CSA   = (0x05F2u);
   4510.4  000000                    endm
   4511    000000              #define UCB0ICTL_           (0x05FCu)  /* USCI
                                B0 Interrupt Enable Register */
   4512    000000              DEFCW(  UCB0ICTL          , UCB0ICTL_)
   4512.1  000000              sfrb UCB0ICTL_L = (0x05FCu);
   4512.2  000000              sfrb UCB0ICTL_H = (0x05FCu)+1;
   4512.3  000000              sfrw UCB0ICTL   = (0x05FCu);
   4512.4  000000                    endm
   4513    000000              #define UCB0IE              UCB0ICTL_L  /* USCI
                                B0 Interrupt Enable Register */
   4514    000000              #define UCB0IFG             UCB0ICTL_H  /* USCI
                                B0 Interrupt Flags Register */
   4515    000000              #define UCB0IV_             (0x05FEu)  /* USCI
                                B0 Interrupt Vector Register */
   4516    000000              DEFW(   UCB0IV            , UCB0IV_)
   4517    000000              
   4518    000000              // UCAxCTL0 UART-Mode Control Bits
   4519    000000              #define UCPEN               (0x80)    /* Async.
                                Mode: Parity enable */
   4520    000000              #define UCPAR               (0x40)    /* Async.
                                Mode: Parity     0:odd / 1:even */
   4521    000000              #define UCMSB               (0x20)    /* Async.
                                Mode: MSB first  0:LSB / 1:MSB */
   4522    000000              #define UC7BIT              (0x10)    /* Async.
                                Mode: Data Bits  0:8-bits / 1:7-bits */
   4523    000000              #define UCSPB               (0x08)    /* Async.
                                Mode: Stop Bits  0:one / 1: two */
   4524    000000              #define UCMODE1             (0x04)    /* Async.
                                Mode: USCI Mode 1 */
   4525    000000              #define UCMODE0             (0x02)    /* Async.
                                Mode: USCI Mode 0 */
   4526    000000              #define UCSYNC              (0x01)    /*
                                Sync-Mode  0:UART-Mode / 1:SPI-Mode */
   4527    000000              
   4528    000000              // UCxxCTL0 SPI-Mode Control Bits
   4529    000000              #define UCCKPH              (0x80)    /* Sync.
                                Mode: Clock Phase */
   4530    000000              #define UCCKPL              (0x40)    /* Sync.
                                Mode: Clock Polarity */
   4531    000000              #define UCMST               (0x08)    /* Sync.
                                Mode: Master Select */
   4532    000000              
   4533    000000              // UCBxCTL0 I2C-Mode Control Bits
   4534    000000              #define UCA10               (0x80)    /* 10-bit
                                Address Mode */
   4535    000000              #define UCSLA10             (0x40)    /* 10-bit
                                Slave Address Mode */
   4536    000000              #define UCMM                (0x20)    /*
                                Multi-Master Environment */
   4537    000000              //#define res               (0x10)    /*
                                reserved */
   4538    000000              #define UCMODE_0            (0x00)    /* Sync.
                                Mode: USCI Mode: 0 */
   4539    000000              #define UCMODE_1            (0x02)    /* Sync.
                                Mode: USCI Mode: 1 */
   4540    000000              #define UCMODE_2            (0x04)    /* Sync.
                                Mode: USCI Mode: 2 */
   4541    000000              #define UCMODE_3            (0x06)    /* Sync.
                                Mode: USCI Mode: 3 */
   4542    000000              
   4543    000000              // UCAxCTL1 UART-Mode Control Bits
   4544    000000              #define UCSSEL1             (0x80)    /* USCI 0
                                Clock Source Select 1 */
   4545    000000              #define UCSSEL0             (0x40)    /* USCI 0
                                Clock Source Select 0 */
   4546    000000              #define UCRXEIE             (0x20)    /* RX
                                Error interrupt enable */
   4547    000000              #define UCBRKIE             (0x10)    /* Break
                                interrupt enable */
   4548    000000              #define UCDORM              (0x08)    /* Dormant
                                (Sleep) Mode */
   4549    000000              #define UCTXADDR            (0x04)    /* Send
                                next Data as Address */
   4550    000000              #define UCTXBRK             (0x02)    /* Send
                                next Data as Break */
   4551    000000              #define UCSWRST             (0x01)    /* USCI
                                Software Reset */
   4552    000000              
   4553    000000              // UCxxCTL1 SPI-Mode Control Bits
   4554    000000              //#define res               (0x20)    /*
                                reserved */
   4555    000000              //#define res               (0x10)    /*
                                reserved */
   4556    000000              //#define res               (0x08)    /*
                                reserved */
   4557    000000              //#define res               (0x04)    /*
                                reserved */
   4558    000000              //#define res               (0x02)    /*
                                reserved */
   4559    000000              
   4560    000000              // UCBxCTL1 I2C-Mode Control Bits
   4561    000000              //#define res               (0x20)    /*
                                reserved */
   4562    000000              #define UCTR                (0x10)    /*
                                Transmit/Receive Select/Flag */
   4563    000000              #define UCTXNACK            (0x08)    /*
                                Transmit NACK */
   4564    000000              #define UCTXSTP             (0x04)    /*
                                Transmit STOP */
   4565    000000              #define UCTXSTT             (0x02)    /*
                                Transmit START */
   4566    000000              #define UCSSEL_0            (0x00)    /* USCI 0
                                Clock Source: 0 */
   4567    000000              #define UCSSEL_1            (0x40)    /* USCI 0
                                Clock Source: 1 */
   4568    000000              #define UCSSEL_2            (0x80)    /* USCI 0
                                Clock Source: 2 */
   4569    000000              #define UCSSEL_3            (0xC0)    /* USCI 0
                                Clock Source: 3 */
   4570    000000              #define UCSSEL__UCLK        (0x00)    /* USCI 0
                                Clock Source: UCLK */
   4571    000000              #define UCSSEL__ACLK        (0x40)    /* USCI 0
                                Clock Source: ACLK */
   4572    000000              #define UCSSEL__SMCLK       (0x80)    /* USCI 0
                                Clock Source: SMCLK */
   4573    000000              
   4574    000000              /* UCAxMCTL Control Bits */
   4575    000000              #define UCBRF3              (0x80)    /* USCI
                                First Stage Modulation Select 3 */
   4576    000000              #define UCBRF2              (0x40)    /* USCI
                                First Stage Modulation Select 2 */
   4577    000000              #define UCBRF1              (0x20)    /* USCI
                                First Stage Modulation Select 1 */
   4578    000000              #define UCBRF0              (0x10)    /* USCI
                                First Stage Modulation Select 0 */
   4579    000000              #define UCBRS2              (0x08)    /* USCI
                                Second Stage Modulation Select 2 */
   4580    000000              #define UCBRS1              (0x04)    /* USCI
                                Second Stage Modulation Select 1 */
   4581    000000              #define UCBRS0              (0x02)    /* USCI
                                Second Stage Modulation Select 0 */
   4582    000000              #define UCOS16              (0x01)    /* USCI
                                16-times Oversampling enable */
   4583    000000              
   4584    000000              #define UCBRF_0             (0x00)    /* USCI
                                First Stage Modulation: 0 */
   4585    000000              #define UCBRF_1             (0x10)    /* USCI
                                First Stage Modulation: 1 */
   4586    000000              #define UCBRF_2             (0x20)    /* USCI
                                First Stage Modulation: 2 */
   4587    000000              #define UCBRF_3             (0x30)    /* USCI
                                First Stage Modulation: 3 */
   4588    000000              #define UCBRF_4             (0x40)    /* USCI
                                First Stage Modulation: 4 */
   4589    000000              #define UCBRF_5             (0x50)    /* USCI
                                First Stage Modulation: 5 */
   4590    000000              #define UCBRF_6             (0x60)    /* USCI
                                First Stage Modulation: 6 */
   4591    000000              #define UCBRF_7             (0x70)    /* USCI
                                First Stage Modulation: 7 */
   4592    000000              #define UCBRF_8             (0x80)    /* USCI
                                First Stage Modulation: 8 */
   4593    000000              #define UCBRF_9             (0x90)    /* USCI
                                First Stage Modulation: 9 */
   4594    000000              #define UCBRF_10            (0xA0)    /* USCI
                                First Stage Modulation: A */
   4595    000000              #define UCBRF_11            (0xB0)    /* USCI
                                First Stage Modulation: B */
   4596    000000              #define UCBRF_12            (0xC0)    /* USCI
                                First Stage Modulation: C */
   4597    000000              #define UCBRF_13            (0xD0)    /* USCI
                                First Stage Modulation: D */
   4598    000000              #define UCBRF_14            (0xE0)    /* USCI
                                First Stage Modulation: E */
   4599    000000              #define UCBRF_15            (0xF0)    /* USCI
                                First Stage Modulation: F */
   4600    000000              
   4601    000000              #define UCBRS_0             (0x00)    /* USCI
                                Second Stage Modulation: 0 */
   4602    000000              #define UCBRS_1             (0x02)    /* USCI
                                Second Stage Modulation: 1 */
   4603    000000              #define UCBRS_2             (0x04)    /* USCI
                                Second Stage Modulation: 2 */
   4604    000000              #define UCBRS_3             (0x06)    /* USCI
                                Second Stage Modulation: 3 */
   4605    000000              #define UCBRS_4             (0x08)    /* USCI
                                Second Stage Modulation: 4 */
   4606    000000              #define UCBRS_5             (0x0A)    /* USCI
                                Second Stage Modulation: 5 */
   4607    000000              #define UCBRS_6             (0x0C)    /* USCI
                                Second Stage Modulation: 6 */
   4608    000000              #define UCBRS_7             (0x0E)    /* USCI
                                Second Stage Modulation: 7 */
   4609    000000              
   4610    000000              /* UCAxSTAT Control Bits */
   4611    000000              #define UCLISTEN            (0x80)    /* USCI
                                Listen mode */
   4612    000000              #define UCFE                (0x40)    /* USCI
                                Frame Error Flag */
   4613    000000              #define UCOE                (0x20)    /* USCI
                                Overrun Error Flag */
   4614    000000              #define UCPE                (0x10)    /* USCI
                                Parity Error Flag */
   4615    000000              #define UCBRK               (0x08)    /* USCI
                                Break received */
   4616    000000              #define UCRXERR             (0x04)    /* USCI RX
                                Error Flag */
   4617    000000              #define UCADDR              (0x02)    /* USCI
                                Address received Flag */
   4618    000000              #define UCBUSY              (0x01)    /* USCI
                                Busy Flag */
   4619    000000              #define UCIDLE              (0x02)    /* USCI
                                Idle line detected Flag */
   4620    000000              
   4621    000000              /* UCBxSTAT Control Bits */
   4622    000000              #define UCSCLLOW            (0x40)    /* SCL low
                                */
   4623    000000              #define UCGC                (0x20)    /* General
                                Call address received Flag */
   4624    000000              #define UCBBUSY             (0x10)    /* Bus
                                Busy Flag */
   4625    000000              
   4626    000000              /* UCAxIRTCTL Control Bits */
   4627    000000              #define UCIRTXPL5           (0x80)    /* IRDA
                                Transmit Pulse Length 5 */
   4628    000000              #define UCIRTXPL4           (0x40)    /* IRDA
                                Transmit Pulse Length 4 */
   4629    000000              #define UCIRTXPL3           (0x20)    /* IRDA
                                Transmit Pulse Length 3 */
   4630    000000              #define UCIRTXPL2           (0x10)    /* IRDA
                                Transmit Pulse Length 2 */
   4631    000000              #define UCIRTXPL1           (0x08)    /* IRDA
                                Transmit Pulse Length 1 */
   4632    000000              #define UCIRTXPL0           (0x04)    /* IRDA
                                Transmit Pulse Length 0 */
   4633    000000              #define UCIRTXCLK           (0x02)    /* IRDA
                                Transmit Pulse Clock Select */
   4634    000000              #define UCIREN              (0x01)    /* IRDA
                                Encoder/Decoder enable */
   4635    000000              
   4636    000000              /* UCAxIRRCTL Control Bits */
   4637    000000              #define UCIRRXFL5           (0x80)    /* IRDA
                                Receive Filter Length 5 */
   4638    000000              #define UCIRRXFL4           (0x40)    /* IRDA
                                Receive Filter Length 4 */
   4639    000000              #define UCIRRXFL3           (0x20)    /* IRDA
                                Receive Filter Length 3 */
   4640    000000              #define UCIRRXFL2           (0x10)    /* IRDA
                                Receive Filter Length 2 */
   4641    000000              #define UCIRRXFL1           (0x08)    /* IRDA
                                Receive Filter Length 1 */
   4642    000000              #define UCIRRXFL0           (0x04)    /* IRDA
                                Receive Filter Length 0 */
   4643    000000              #define UCIRRXPL            (0x02)    /* IRDA
                                Receive Input Polarity */
   4644    000000              #define UCIRRXFE            (0x01)    /* IRDA
                                Receive Filter enable */
   4645    000000              
   4646    000000              /* UCAxABCTL Control Bits */
   4647    000000              //#define res               (0x80)    /*
                                reserved */
   4648    000000              //#define res               (0x40)    /*
                                reserved */
   4649    000000              #define UCDELIM1            (0x20)    /* Break
                                Sync Delimiter 1 */
   4650    000000              #define UCDELIM0            (0x10)    /* Break
                                Sync Delimiter 0 */
   4651    000000              #define UCSTOE              (0x08)    /*
                                Sync-Field Timeout error */
   4652    000000              #define UCBTOE              (0x04)    /* Break
                                Timeout error */
   4653    000000              //#define res               (0x02)    /*
                                reserved */
   4654    000000              #define UCABDEN             (0x01)    /* Auto
                                Baud Rate detect enable */
   4655    000000              
   4656    000000              /* UCBxI2COA Control Bits */
   4657    000000              #define UCGCEN              (0x8000u)  /* I2C
                                General Call enable */
   4658    000000              #define UCOA9               (0x0200u)  /* I2C
                                Own Address 9 */
   4659    000000              #define UCOA8               (0x0100u)  /* I2C
                                Own Address 8 */
   4660    000000              #define UCOA7               (0x0080u)  /* I2C
                                Own Address 7 */
   4661    000000              #define UCOA6               (0x0040u)  /* I2C
                                Own Address 6 */
   4662    000000              #define UCOA5               (0x0020u)  /* I2C
                                Own Address 5 */
   4663    000000              #define UCOA4               (0x0010u)  /* I2C
                                Own Address 4 */
   4664    000000              #define UCOA3               (0x0008u)  /* I2C
                                Own Address 3 */
   4665    000000              #define UCOA2               (0x0004u)  /* I2C
                                Own Address 2 */
   4666    000000              #define UCOA1               (0x0002u)  /* I2C
                                Own Address 1 */
   4667    000000              #define UCOA0               (0x0001u)  /* I2C
                                Own Address 0 */
   4668    000000              
   4669    000000              /* UCBxI2COA Control Bits */
   4670    000000              #define UCOA7_L             (0x0080u)  /* I2C
                                Own Address 7 */
   4671    000000              #define UCOA6_L             (0x0040u)  /* I2C
                                Own Address 6 */
   4672    000000              #define UCOA5_L             (0x0020u)  /* I2C
                                Own Address 5 */
   4673    000000              #define UCOA4_L             (0x0010u)  /* I2C
                                Own Address 4 */
   4674    000000              #define UCOA3_L             (0x0008u)  /* I2C
                                Own Address 3 */
   4675    000000              #define UCOA2_L             (0x0004u)  /* I2C
                                Own Address 2 */
   4676    000000              #define UCOA1_L             (0x0002u)  /* I2C
                                Own Address 1 */
   4677    000000              #define UCOA0_L             (0x0001u)  /* I2C
                                Own Address 0 */
   4678    000000              
   4679    000000              /* UCBxI2COA Control Bits */
   4680    000000              #define UCGCEN_H            (0x0080u)  /* I2C
                                General Call enable */
   4681    000000              #define UCOA9_H             (0x0002u)  /* I2C
                                Own Address 9 */
   4682    000000              #define UCOA8_H             (0x0001u)  /* I2C
                                Own Address 8 */
   4683    000000              
   4684    000000              /* UCBxI2CSA Control Bits */
   4685    000000              #define UCSA9               (0x0200u)  /* I2C
                                Slave Address 9 */
   4686    000000              #define UCSA8               (0x0100u)  /* I2C
                                Slave Address 8 */
   4687    000000              #define UCSA7               (0x0080u)  /* I2C
                                Slave Address 7 */
   4688    000000              #define UCSA6               (0x0040u)  /* I2C
                                Slave Address 6 */
   4689    000000              #define UCSA5               (0x0020u)  /* I2C
                                Slave Address 5 */
   4690    000000              #define UCSA4               (0x0010u)  /* I2C
                                Slave Address 4 */
   4691    000000              #define UCSA3               (0x0008u)  /* I2C
                                Slave Address 3 */
   4692    000000              #define UCSA2               (0x0004u)  /* I2C
                                Slave Address 2 */
   4693    000000              #define UCSA1               (0x0002u)  /* I2C
                                Slave Address 1 */
   4694    000000              #define UCSA0               (0x0001u)  /* I2C
                                Slave Address 0 */
   4695    000000              
   4696    000000              /* UCBxI2CSA Control Bits */
   4697    000000              #define UCSA7_L             (0x0080u)  /* I2C
                                Slave Address 7 */
   4698    000000              #define UCSA6_L             (0x0040u)  /* I2C
                                Slave Address 6 */
   4699    000000              #define UCSA5_L             (0x0020u)  /* I2C
                                Slave Address 5 */
   4700    000000              #define UCSA4_L             (0x0010u)  /* I2C
                                Slave Address 4 */
   4701    000000              #define UCSA3_L             (0x0008u)  /* I2C
                                Slave Address 3 */
   4702    000000              #define UCSA2_L             (0x0004u)  /* I2C
                                Slave Address 2 */
   4703    000000              #define UCSA1_L             (0x0002u)  /* I2C
                                Slave Address 1 */
   4704    000000              #define UCSA0_L             (0x0001u)  /* I2C
                                Slave Address 0 */
   4705    000000              
   4706    000000              /* UCBxI2CSA Control Bits */
   4707    000000              #define UCSA9_H             (0x0002u)  /* I2C
                                Slave Address 9 */
   4708    000000              #define UCSA8_H             (0x0001u)  /* I2C
                                Slave Address 8 */
   4709    000000              
   4710    000000              /* UCAxIE Control Bits */
   4711    000000              #define UCTXIE              (0x0002u)  /* USCI
                                Transmit Interrupt Enable */
   4712    000000              #define UCRXIE              (0x0001u)  /* USCI
                                Receive Interrupt Enable */
   4713    000000              
   4714    000000              /* UCBxIE Control Bits */
   4715    000000              #define UCNACKIE            (0x0020u)  /* NACK
                                Condition interrupt enable */
   4716    000000              #define UCALIE              (0x0010u)  /*
                                Arbitration Lost interrupt enable */
   4717    000000              #define UCSTPIE             (0x0008u)  /* STOP
                                Condition interrupt enable */
   4718    000000              #define UCSTTIE             (0x0004u)  /* START
                                Condition interrupt enable */
   4719    000000              #define UCTXIE              (0x0002u)  /* USCI
                                Transmit Interrupt Enable */
   4720    000000              #define UCRXIE              (0x0001u)  /* USCI
                                Receive Interrupt Enable */
   4721    000000              
   4722    000000              /* UCAxIFG Control Bits */
   4723    000000              #define UCTXIFG             (0x0002u)  /* USCI
                                Transmit Interrupt Flag */
   4724    000000              #define UCRXIFG             (0x0001u)  /* USCI
                                Receive Interrupt Flag */
   4725    000000              
   4726    000000              /* UCBxIFG Control Bits */
   4727    000000              #define UCNACKIFG           (0x0020u)  /* NAK
                                Condition interrupt Flag */
   4728    000000              #define UCALIFG             (0x0010u)  /*
                                Arbitration Lost interrupt Flag */
   4729    000000              #define UCSTPIFG            (0x0008u)  /* STOP
                                Condition interrupt Flag */
   4730    000000              #define UCSTTIFG            (0x0004u)  /* START
                                Condition interrupt Flag */
   4731    000000              #define UCTXIFG             (0x0002u)  /* USCI
                                Transmit Interrupt Flag */
   4732    000000              #define UCRXIFG             (0x0001u)  /* USCI
                                Receive Interrupt Flag */
   4733    000000              
   4734    000000              /* USCI Definitions */
   4735    000000              #define USCI_NONE           (0x0000u)    /* No
                                Interrupt pending */
   4736    000000              #define USCI_UCRXIFG        (0x0002u)    /* USCI
                                UCRXIFG */
   4737    000000              #define USCI_UCTXIFG        (0x0004u)    /* USCI
                                UCTXIFG */
   4738    000000              #define USCI_I2C_UCALIFG    (0x0002u)    /* USCI
                                I2C Mode: UCALIFG */
   4739    000000              #define USCI_I2C_UCNACKIFG  (0x0004u)    /* USCI
                                I2C Mode: UCNACKIFG */
   4740    000000              #define USCI_I2C_UCSTTIFG   (0x0006u)    /* USCI
                                I2C Mode: UCSTTIFG*/
   4741    000000              #define USCI_I2C_UCSTPIFG   (0x0008u)    /* USCI
                                I2C Mode: UCSTPIFG*/
   4742    000000              #define USCI_I2C_UCRXIFG    (0x000Au)    /* USCI
                                I2C Mode: UCRXIFG */
   4743    000000              #define USCI_I2C_UCTXIFG    (0x000Cu)    /* USCI
                                I2C Mode: UCTXIFG */
   4744    000000              
   4745    000000              /***********************************************
                               *************
   4746    000000              * USCI A1
   4747    000000              ************************************************
                               ************/
   4748    000000              #define __MSP430_HAS_USCI_A1__       /*
                                Definition to show that Module is available
                                */
   4749    000000              #define __MSP430_BASEADDRESS_USCI_A1__
                                0x0600
   4750    000000              
   4751    000000              #define UCA1CTLW0_          (0x0600u)  /* USCI
                                A1 Control Word Register 0 */
   4752    000000              DEFCW(  UCA1CTLW0         , UCA1CTLW0_)
   4752.1  000000              sfrb UCA1CTLW0_L = (0x0600u);
   4752.2  000000              sfrb UCA1CTLW0_H = (0x0600u)+1;
   4752.3  000000              sfrw UCA1CTLW0   = (0x0600u);
   4752.4  000000                    endm
   4753    000000              #define UCA1CTL1            UCA1CTLW0_L  /* USCI
                                A1 Control Register 1 */
   4754    000000              #define UCA1CTL0            UCA1CTLW0_H  /* USCI
                                A1 Control Register 0 */
   4755    000000              #define UCA1BRW_            (0x0606u)  /* USCI
                                A1 Baud Word Rate 0 */
   4756    000000              DEFCW(  UCA1BRW           , UCA1BRW_)
   4756.1  000000              sfrb UCA1BRW_L = (0x0606u);
   4756.2  000000              sfrb UCA1BRW_H = (0x0606u)+1;
   4756.3  000000              sfrw UCA1BRW   = (0x0606u);
   4756.4  000000                    endm
   4757    000000              #define UCA1BR0             UCA1BRW_L /* USCI A1
                                Baud Rate 0 */
   4758    000000              #define UCA1BR1             UCA1BRW_H /* USCI A1
                                Baud Rate 1 */
   4759    000000              #define UCA1MCTL_           (0x0608u)  /* USCI
                                A1 Modulation Control */
   4760    000000              DEFC(   UCA1MCTL          , UCA1MCTL_)
   4761    000000              #define UCA1STAT_           (0x060Au)  /* USCI
                                A1 Status Register */
   4762    000000              DEFC(   UCA1STAT          , UCA1STAT_)
   4763    000000              #define UCA1RXBUF_          (0x060Cu)  /* USCI
                                A1 Receive Buffer */
   4764    000000              READ_ONLY DEFC( UCA1RXBUF      , UCA1RXBUF_)
   4765    000000              #define UCA1TXBUF_          (0x060Eu)  /* USCI
                                A1 Transmit Buffer */
   4766    000000              DEFC(   UCA1TXBUF         , UCA1TXBUF_)
   4767    000000              #define UCA1ABCTL_          (0x0610u)  /* USCI
                                A1 LIN Control */
   4768    000000              DEFC(   UCA1ABCTL         , UCA1ABCTL_)
   4769    000000              #define UCA1IRCTL_          (0x0612u)  /* USCI
                                A1 IrDA Transmit Control */
   4770    000000              DEFCW(  UCA1IRCTL         , UCA1IRCTL_)
   4770.1  000000              sfrb UCA1IRCTL_L = (0x0612u);
   4770.2  000000              sfrb UCA1IRCTL_H = (0x0612u)+1;
   4770.3  000000              sfrw UCA1IRCTL   = (0x0612u);
   4770.4  000000                    endm
   4771    000000              #define UCA1IRTCTL          UCA1IRCTL_L  /* USCI
                                A1 IrDA Transmit Control */
   4772    000000              #define UCA1IRRCTL          UCA1IRCTL_H  /* USCI
                                A1 IrDA Receive Control */
   4773    000000              #define UCA1ICTL_           (0x061Cu)  /* USCI
                                A1 Interrupt Enable Register */
   4774    000000              DEFCW(  UCA1ICTL          , UCA1ICTL_)
   4774.1  000000              sfrb UCA1ICTL_L = (0x061Cu);
   4774.2  000000              sfrb UCA1ICTL_H = (0x061Cu)+1;
   4774.3  000000              sfrw UCA1ICTL   = (0x061Cu);
   4774.4  000000                    endm
   4775    000000              #define UCA1IE              UCA1ICTL_L  /* USCI
                                A1 Interrupt Enable Register */
   4776    000000              #define UCA1IFG             UCA1ICTL_H  /* USCI
                                A1 Interrupt Flags Register */
   4777    000000              #define UCA1IV_             (0x061Eu)  /* USCI
                                A1 Interrupt Vector Register */
   4778    000000              DEFW(   UCA1IV            , UCA1IV_)
   4779    000000              
   4780    000000              
   4781    000000              /***********************************************
                               *************
   4782    000000              * USCI B1
   4783    000000              ************************************************
                               ************/
   4784    000000              #define __MSP430_HAS_USCI_B1__        /*
                                Definition to show that Module is available
                                */
   4785    000000              #define __MSP430_BASEADDRESS_USCI_B1__
                                0x0620
   4786    000000              
   4787    000000              
   4788    000000              #define UCB1CTLW0_          (0x0620u)  /* USCI
                                B1 Control Word Register 0 */
   4789    000000              DEFCW(  UCB1CTLW0         , UCB1CTLW0_)
   4789.1  000000              sfrb UCB1CTLW0_L = (0x0620u);
   4789.2  000000              sfrb UCB1CTLW0_H = (0x0620u)+1;
   4789.3  000000              sfrw UCB1CTLW0   = (0x0620u);
   4789.4  000000                    endm
   4790    000000              #define UCB1CTL1            UCB1CTLW0_L  /* USCI
                                B1 Control Register 1 */
   4791    000000              #define UCB1CTL0            UCB1CTLW0_H  /* USCI
                                B1 Control Register 0 */
   4792    000000              #define UCB1BRW_            (0x0626u)  /* USCI
                                B1 Baud Word Rate 0 */
   4793    000000              DEFCW(  UCB1BRW           , UCB1BRW_)
   4793.1  000000              sfrb UCB1BRW_L = (0x0626u);
   4793.2  000000              sfrb UCB1BRW_H = (0x0626u)+1;
   4793.3  000000              sfrw UCB1BRW   = (0x0626u);
   4793.4  000000                    endm
   4794    000000              #define UCB1BR0             UCB1BRW_L /* USCI B1
                                Baud Rate 0 */
   4795    000000              #define UCB1BR1             UCB1BRW_H /* USCI B1
                                Baud Rate 1 */
   4796    000000              #define UCB1STAT_           (0x062Au)  /* USCI
                                B1 Status Register */
   4797    000000              DEFC(   UCB1STAT          , UCB1STAT_)
   4798    000000              #define UCB1RXBUF_          (0x062Cu)  /* USCI
                                B1 Receive Buffer */
   4799    000000              READ_ONLY DEFC( UCB1RXBUF      , UCB1RXBUF_)
   4800    000000              #define UCB1TXBUF_          (0x062Eu)  /* USCI
                                B1 Transmit Buffer */
   4801    000000              DEFC(   UCB1TXBUF         , UCB1TXBUF_)
   4802    000000              #define UCB1I2COA_          (0x0630u)  /* USCI
                                B1 I2C Own Address */
   4803    000000              DEFCW(  UCB1I2COA         , UCB1I2COA_)
   4803.1  000000              sfrb UCB1I2COA_L = (0x0630u);
   4803.2  000000              sfrb UCB1I2COA_H = (0x0630u)+1;
   4803.3  000000              sfrw UCB1I2COA   = (0x0630u);
   4803.4  000000                    endm
   4804    000000              #define UCB1I2CSA_          (0x0632u)  /* USCI
                                B1 I2C Slave Address */
   4805    000000              DEFCW(  UCB1I2CSA         , UCB1I2CSA_)
   4805.1  000000              sfrb UCB1I2CSA_L = (0x0632u);
   4805.2  000000              sfrb UCB1I2CSA_H = (0x0632u)+1;
   4805.3  000000              sfrw UCB1I2CSA   = (0x0632u);
   4805.4  000000                    endm
   4806    000000              #define UCB1ICTL_           (0x063Cu)  /* USCI
                                B1 Interrupt Enable Register */
   4807    000000              DEFCW(  UCB1ICTL          , UCB1ICTL_)
   4807.1  000000              sfrb UCB1ICTL_L = (0x063Cu);
   4807.2  000000              sfrb UCB1ICTL_H = (0x063Cu)+1;
   4807.3  000000              sfrw UCB1ICTL   = (0x063Cu);
   4807.4  000000                    endm
   4808    000000              #define UCB1IE              UCB1ICTL_L  /* USCI
                                B1 Interrupt Enable Register */
   4809    000000              #define UCB1IFG             UCB1ICTL_H  /* USCI
                                B1 Interrupt Flags Register */
   4810    000000              #define UCB1IV_             (0x063Eu)  /* USCI
                                B1 Interrupt Vector Register */
   4811    000000              DEFW(   UCB1IV            , UCB1IV_)
   4812    000000              
   4813    000000              /***********************************************
                               *************
   4814    000000              * WATCHDOG TIMER A
   4815    000000              ************************************************
                               ************/
   4816    000000              #define __MSP430_HAS_WDT_A__          /*
                                Definition to show that Module is available
                                */
   4817    000000              #define __MSP430_BASEADDRESS_WDT_A__ 0x0150
   4818    000000              
   4819    000000              #define  WDTCTL_             (0x015Cu)  /*
                                Watchdog Timer Control */
   4820    000000              DEFCW(   WDTCTL            , WDTCTL_)
   4820.1  000000              sfrb WDTCTL_L = (0x015Cu);
   4820.2  000000              sfrb WDTCTL_H = (0x015Cu)+1;
   4820.3  000000              sfrw WDTCTL   = (0x015Cu);
   4820.4  000000                    endm
   4821    000000              /* The bit names have been prefixed with "WDT"
                                */
   4822    000000              /* WDTCTL Control Bits */
   4823    000000              #define WDTIS0              (0x0001u)  /* WDT -
                                Timer Interval Select 0 */
   4824    000000              #define WDTIS1              (0x0002u)  /* WDT -
                                Timer Interval Select 1 */
   4825    000000              #define WDTIS2              (0x0004u)  /* WDT -
                                Timer Interval Select 2 */
   4826    000000              #define WDTCNTCL            (0x0008u)  /* WDT -
                                Timer Clear */
   4827    000000              #define WDTTMSEL            (0x0010u)  /* WDT -
                                Timer Mode Select */
   4828    000000              #define WDTSSEL0            (0x0020u)  /* WDT -
                                Timer Clock Source Select 0 */
   4829    000000              #define WDTSSEL1            (0x0040u)  /* WDT -
                                Timer Clock Source Select 1 */
   4830    000000              #define WDTHOLD             (0x0080u)  /* WDT -
                                Timer hold */
   4831    000000              
   4832    000000              /* WDTCTL Control Bits */
   4833    000000              #define WDTIS0_L            (0x0001u)  /* WDT -
                                Timer Interval Select 0 */
   4834    000000              #define WDTIS1_L            (0x0002u)  /* WDT -
                                Timer Interval Select 1 */
   4835    000000              #define WDTIS2_L            (0x0004u)  /* WDT -
                                Timer Interval Select 2 */
   4836    000000              #define WDTCNTCL_L          (0x0008u)  /* WDT -
                                Timer Clear */
   4837    000000              #define WDTTMSEL_L          (0x0010u)  /* WDT -
                                Timer Mode Select */
   4838    000000              #define WDTSSEL0_L          (0x0020u)  /* WDT -
                                Timer Clock Source Select 0 */
   4839    000000              #define WDTSSEL1_L          (0x0040u)  /* WDT -
                                Timer Clock Source Select 1 */
   4840    000000              #define WDTHOLD_L           (0x0080u)  /* WDT -
                                Timer hold */
   4841    000000              
   4842    000000              /* WDTCTL Control Bits */
   4843    000000              
   4844    000000              #define WDTPW               (0x5A00u)
   4845    000000              
   4846    000000              #define WDTIS_0           (0*0x0001u)  /* WDT -
                                Timer Interval Select: /2G */
   4847    000000              #define WDTIS_1           (1*0x0001u)  /* WDT -
                                Timer Interval Select: /128M */
   4848    000000              #define WDTIS_2           (2*0x0001u)  /* WDT -
                                Timer Interval Select: /8192k */
   4849    000000              #define WDTIS_3           (3*0x0001u)  /* WDT -
                                Timer Interval Select: /512k */
   4850    000000              #define WDTIS_4           (4*0x0001u)  /* WDT -
                                Timer Interval Select: /32k */
   4851    000000              #define WDTIS_5           (5*0x0001u)  /* WDT -
                                Timer Interval Select: /8192 */
   4852    000000              #define WDTIS_6           (6*0x0001u)  /* WDT -
                                Timer Interval Select: /512 */
   4853    000000              #define WDTIS_7           (7*0x0001u)  /* WDT -
                                Timer Interval Select: /64 */
   4854    000000              #define WDTIS__2G         (0*0x0001u)  /* WDT -
                                Timer Interval Select: /2G */
   4855    000000              #define WDTIS__128M       (1*0x0001u)  /* WDT -
                                Timer Interval Select: /128M */
   4856    000000              #define WDTIS__8192K      (2*0x0001u)  /* WDT -
                                Timer Interval Select: /8192k */
   4857    000000              #define WDTIS__512K       (3*0x0001u)  /* WDT -
                                Timer Interval Select: /512k */
   4858    000000              #define WDTIS__32K        (4*0x0001u)  /* WDT -
                                Timer Interval Select: /32k */
   4859    000000              #define WDTIS__8192       (5*0x0001u)  /* WDT -
                                Timer Interval Select: /8192 */
   4860    000000              #define WDTIS__512        (6*0x0001u)  /* WDT -
                                Timer Interval Select: /512 */
   4861    000000              #define WDTIS__64         (7*0x0001u)  /* WDT -
                                Timer Interval Select: /64 */
   4862    000000              
   4863    000000              #define WDTSSEL_0         (0*0x0020u)  /* WDT -
                                Timer Clock Source Select: SMCLK */
   4864    000000              #define WDTSSEL_1         (1*0x0020u)  /* WDT -
                                Timer Clock Source Select: ACLK */
   4865    000000              #define WDTSSEL_2         (2*0x0020u)  /* WDT -
                                Timer Clock Source Select: VLO_CLK */
   4866    000000              #define WDTSSEL_3         (3*0x0020u)  /* WDT -
                                Timer Clock Source Select: reserved */
   4867    000000              #define WDTSSEL__SMCLK    (0*0x0020u)  /* WDT -
                                Timer Clock Source Select: SMCLK */
   4868    000000              #define WDTSSEL__ACLK     (1*0x0020u)  /* WDT -
                                Timer Clock Source Select: ACLK */
   4869    000000              #define WDTSSEL__VLO      (2*0x0020u)  /* WDT -
                                Timer Clock Source Select: VLO_CLK */
   4870    000000              
   4871    000000              /* WDT-interval times [1ms] coded with Bits 0-2
                                */
   4872    000000              /* WDT is clocked by fSMCLK (assumed 1MHz)
                                */
   4873    000000              #define WDT_MDLY_32         (WDTPW+WDTTMSEL+WDTC
                               NTCL+WDTIS2)                         /* 32ms
                                interval (default) */
   4874    000000              #define WDT_MDLY_8          (WDTPW+WDTTMSEL+WDTC
                               NTCL+WDTIS2+WDTIS0)                  /* 8ms    
                                " */
   4875    000000              #define WDT_MDLY_0_5        (WDTPW+WDTTMSEL+WDTC
                               NTCL+WDTIS2+WDTIS1)                  /* 0.5ms  
                                " */
   4876    000000              #define WDT_MDLY_0_064      (WDTPW+WDTTMSEL+WDTC
                               NTCL+WDTIS2+WDTIS1+WDTIS0)           /* 0.064ms
                                " */
   4877    000000              /* WDT is clocked by fACLK (assumed 32KHz)
                                */
   4878    000000              #define WDT_ADLY_1000       (WDTPW+WDTTMSEL+WDTC
                               NTCL+WDTIS2+WDTSSEL0)                /* 1000ms 
                                " */
   4879    000000              #define WDT_ADLY_250        (WDTPW+WDTTMSEL+WDTC
                               NTCL+WDTIS2+WDTSSEL0+WDTIS0)         /* 250ms  
                                " */
   4880    000000              #define WDT_ADLY_16         (WDTPW+WDTTMSEL+WDTC
                               NTCL+WDTIS2+WDTSSEL0+WDTIS1)         /* 16ms   
                                " */
   4881    000000              #define WDT_ADLY_1_9        (WDTPW+WDTTMSEL+WDTC
                               NTCL+WDTIS2+WDTSSEL0+WDTIS1+WDTIS0)  /* 1.9ms  
                                " */
   4882    000000              /* Watchdog mode -> reset after expired time
                                */
   4883    000000              /* WDT is clocked by fSMCLK (assumed 1MHz)
                                */
   4884    000000              #define WDT_MRST_32         (WDTPW+WDTCNTCL+WDTI
                               S2)                                  /* 32ms
                                interval (default) */
   4885    000000              #define WDT_MRST_8          (WDTPW+WDTCNTCL+WDTI
                               S2+WDTIS0)                           /* 8ms    
                                " */
   4886    000000              #define WDT_MRST_0_5        (WDTPW+WDTCNTCL+WDTI
                               S2+WDTIS1)                           /* 0.5ms  
                                " */
   4887    000000              #define WDT_MRST_0_064      (WDTPW+WDTCNTCL+WDTI
                               S2+WDTIS1+WDTIS0)                    /* 0.064ms
                                " */
   4888    000000              /* WDT is clocked by fACLK (assumed 32KHz)
                                */
   4889    000000              #define WDT_ARST_1000       (WDTPW+WDTCNTCL+WDTS
                               SEL0+WDTIS2)                         /* 1000ms 
                                " */
   4890    000000              #define WDT_ARST_250        (WDTPW+WDTCNTCL+WDTS
                               SEL0+WDTIS2+WDTIS0)                  /* 250ms  
                                " */
   4891    000000              #define WDT_ARST_16         (WDTPW+WDTCNTCL+WDTS
                               SEL0+WDTIS2+WDTIS1)                  /* 16ms   
                                " */
   4892    000000              #define WDT_ARST_1_9        (WDTPW+WDTCNTCL+WDTS
                               SEL0+WDTIS2+WDTIS1+WDTIS0)           /* 1.9ms  
                                " */
   4893    000000              
   4894    000000              
   4895    000000              /***********************************************
                               *************
   4896    000000              * TLV Descriptors
   4897    000000              ************************************************
                               ************/
   4898    000000              #define __MSP430_HAS_TLV__              /*
                                Definition to show that Module is available
                                */
   4899    000000              
   4900    000000              #define TLV_START             (0x1A08u)    /*
                                Start Address of the TLV structure */
   4901    000000              #define TLV_END               (0x1AFFu)    /*
                                End Address of the TLV structure */
   4902    000000              
   4903    000000              #define TLV_LDTAG             (0x01)      /* 
                                Legacy descriptor (1xx, 2xx, 4xx families)
                                */
   4904    000000              #define TLV_PDTAG             (0x02)      /* 
                                Peripheral discovery descriptor */
   4905    000000              #define TLV_Reserved3         (0x03)      /* 
                                Future usage */
   4906    000000              #define TLV_Reserved4         (0x04)      /* 
                                Future usage */
   4907    000000              #define TLV_BLANK             (0x05)      /* 
                                Blank descriptor */
   4908    000000              #define TLV_Reserved6         (0x06)      /* 
                                Future usage */
   4909    000000              #define TLV_Reserved7         (0x07)      /* 
                                Serial Number */
   4910    000000              #define TLV_DIERECORD         (0x08)      /* 
                                Die Record  */
   4911    000000              #define TLV_ADCCAL            (0x11)      /* 
                                ADC12 calibration */
   4912    000000              #define TLV_ADC12CAL          (0x11)      /* 
                                ADC12 calibration */
   4913    000000              #define TLV_ADC10CAL          (0x13)      /* 
                                ADC10 calibration */
   4914    000000              #define TLV_REFCAL            (0x12)      /* 
                                REF calibration */
   4915    000000              #define TLV_TAGEXT            (0xFE)      /* 
                                Tag extender */
   4916    000000              #define TLV_TAGEND            (0xFF)      // 
                                Tag End of Table
   4917    000000              
   4918    000000              /***********************************************
                               *************
   4919    000000              * Interrupt Vectors (offset from 0xFF80)
   4920    000000              ************************************************
                               ************/
   4921    000000              
   4922    000000              
   4923    000000              #define RTC_VECTOR          (41 * 2u) /* 0xFFD2
                                RTC */
   4924    000000              #define PORT2_VECTOR        (42 * 2u) /* 0xFFD4
                                Port 2 */
   4925    000000              #define TIMER2_A1_VECTOR    (43 * 2u) /* 0xFFD6
                                Timer0_A5 CC1-4, TA */
   4926    000000              #define TIMER2_A0_VECTOR    (44 * 2u) /* 0xFFD8
                                Timer0_A5 CC0 */
   4927    000000              #define USCI_B1_VECTOR      (45 * 2u) /* 0xFFDA
                                USCI B1 Receive/Transmit */
   4928    000000              #define USCI_A1_VECTOR      (46 * 2u) /* 0xFFDC
                                USCI A1 Receive/Transmit */
   4929    000000              #define PORT1_VECTOR        (47 * 2u) /* 0xFFDE
                                Port 1 */
   4930    000000              #define TIMER1_A1_VECTOR    (48 * 2u) /* 0xFFE0
                                Timer1_A3 CC1-2, TA1 */
   4931    000000              #define TIMER1_A0_VECTOR    (49 * 2u) /* 0xFFE2
                                Timer1_A3 CC0 */
   4932    000000              #define DMA_VECTOR          (50 * 2u) /* 0xFFE4
                                DMA */
   4933    000000              #define USB_UBM_VECTOR      (51 * 2u) /* 0xFFE6
                                USB Timer / cable event / USB reset */
   4934    000000              #define TIMER0_A1_VECTOR    (52 * 2u) /* 0xFFE8
                                Timer0_A5 CC1-4, TA */
   4935    000000              #define TIMER0_A0_VECTOR    (53 * 2u) /* 0xFFEA
                                Timer0_A5 CC0 */
   4936    000000              #define ADC12_VECTOR        (54 * 2u) /* 0xFFEC
                                ADC */
   4937    000000              #define USCI_B0_VECTOR      (55 * 2u) /* 0xFFEE
                                USCI B0 Receive/Transmit */
   4938    000000              #define USCI_A0_VECTOR      (56 * 2u) /* 0xFFF0
                                USCI A0 Receive/Transmit */
   4939    000000              #define WDT_VECTOR          (57 * 2u) /* 0xFFF2
                                Watchdog Timer */
   4940    000000              #define TIMER0_B1_VECTOR    (58 * 2u) /* 0xFFF4
                                Timer0_B7 CC1-6, TB */
   4941    000000              #define TIMER0_B0_VECTOR    (59 * 2u) /* 0xFFF6
                                Timer0_B7 CC0 */
   4942    000000              #define COMP_B_VECTOR       (60 * 2u) /* 0xFFF8
                                Comparator B */
   4943    000000              #define UNMI_VECTOR         (61 * 2u) /* 0xFFFA
                                User Non-maskable */
   4944    000000              #define SYSNMI_VECTOR       (62 * 2u) /* 0xFFFC
                                System Non-maskable */
   4945    000000              #define RESET_VECTOR        (63 * 2u) /* 0xFFFE
                                Reset [Highest Priority] */
   4946    000000              
   4947    000000              /***********************************************
                               *************
   4948    000000              * End of Modules
   4949    000000              ************************************************
                               ************/
   4950    000000              #pragma language=default
   4951    000000              
   4952    000000              #endif /* #ifndef __MSP430F5529 */
   4953    000000              
     17    000000              
     18    000000              ;***********************************************
                               ************************************************
                               *********
     19    000000              ;                                          
                                MACRO DEFINITIONS
     20    000000              ;***********************************************
                               ************************************************
                               *********
     21    000000              
     22    000000              PUSHALL     MACRO
     23    000000                          push.w   r4           ;push    
                                r4
     24    000000                          push.w   r5           ;push    
                                r5
     25    000000                          push.w   r6           ;push    
                                r6
     26    000000                          push.w   r7           ;push    
                                r7
     27    000000                          push.w   r8           ;push    
                                r8
     28    000000                          push.w   r9           ;push    
                                r9
     29    000000                          push.w   r10          ;push    
                                r10
     30    000000                          push.w   r11          ;push    
                                r11
     31    000000                          push.w   r12          ;push    
                                r12
     32    000000                          push.w   r13          ;push    
                                r13
     33    000000                          push.w   r14          ;push    
                                r14
     34    000000                          push.w   r15          ;push    
                                r15
     35    000000                          ENDM
     36    000000              
     37    000000              POPALL      MACRO
     38    000000                          pop.w    r15          ;pop     
                                r15
     39    000000                          pop.w    r14          ;pop     
                                r14
     40    000000                          pop.w    r13          ;pop     
                                r13
     41    000000                          pop.w    r12          ;pop     
                                r12
     42    000000                          pop.w    r11          ;pop     
                                r11
     43    000000                          pop.w    r10          ;pop     
                                r10
     44    000000                          pop.w    r9           ;pop     
                                r9
     45    000000                          pop.w    r8           ;pop     
                                r8
     46    000000                          pop.w    r7           ;pop     
                                r7
     47    000000                          pop.w    r6           ;pop     
                                r6
     48    000000                          pop.w    r5           ;pop     
                                r5
     49    000000                          pop.w    r4           ;pop      r4  
                                       
     50    000000                          ENDM
     51    000000                          
     52    000000              ;***********************************************
                               ************************************************
                               *********
     53    000000              ;                                  PUBLIC AND
                                EXTERNAL DECLARATIONS
     54    000000              ;***********************************************
                               ************************************************
                               *********
     55    000000              
     56    000000                          EXTERN  OSIntExit
     57    000000                          EXTERN  OSIntNesting
     58    000000              
     59    000000                          EXTERN  OSISRStkPtr
     60    000000              
     61    000000                          EXTERN  OSPrioCur
     62    000000                          EXTERN  OSPrioHighRdy
     63    000000              
     64    000000                          EXTERN  OSRunning
     65    000000              
     66    000000                          EXTERN  OSTCBCur
     67    000000                          EXTERN  OSTCBHighRdy
     68    000000              
     69    000000                          EXTERN  OSTaskSwHook
     70    000000                          EXTERN  OSTimeTick
     71    000000              
     72    000000                          PUBLIC  OSCtxSw
     73    000000                          PUBLIC  OSCPURestoreSR
     74    000000                          PUBLIC  OSCPUSaveSR
     75    000000                          PUBLIC  OSIntCtxSw
     76    000000                          PUBLIC  OSStartHighRdy
     77    000000                          PUBLIC  TICKS_ISR
     78    000000              
     79    000000              ;***********************************************
                               ************************************************
                               *********
     80    000000              ;                                  START HIGHEST
                                PRIORITY READY TASK
     81    000000              ;
     82    000000              ; Description: This function is called by
                                OSStart() to start the highest priority task
                                that is ready to run.
     83    000000              ;
     84    000000              ; Note       : OSStartHighRdy() MUST:
     85    000000              ;                 a) Call OSTaskSwHook()
                                then,
     86    000000              ;                 b) Set OSRunning to TRUE,
     87    000000              ;                 c) Switch to the highest
                                priority task.
     88    000000              ;***********************************************
                               ************************************************
                               *********
     89    000000              
     90    000000                          RSEG    CODE                    ;
  Program code
     91    000000              
     92    000000              OSStartHighRdy
     93    000000 ........                 calla    #OSTaskSwHook
     94    000004              
     95    000004 D243....                 mov.b    #1, &OSRunning         ;
  kernel running
     96    000008              
     97    000008 8241....                 mov.w    SP, &OSISRStkPtr       ;
                                                         save interrupt stack  
                                                                    
     98    00000C              
     99    00000C 1D42....                 mov.w    &OSTCBHighRdy, R13     ;
                                                                    load
                                                                    highest
                                                                    ready task
                                                                    stack
    100    000010 214D                     mov.w    @R13, SP
    101    000012              
    102    000012                          POPALL                          ;
                                pop all registers
    102.1  000012 3F41                     pop.w    r15          ;pop     
  r15
    102.2  000014 3E41                     pop.w    r14          ;pop     
  r14
    102.3  000016 3D41                     pop.w    r13          ;pop     
  r13
    102.4  000018 3C41                     pop.w    r12          ;pop     
  r12
    102.5  00001A 3B41                     pop.w    r11          ;pop     
  r11
    102.6  00001C 3A41                     pop.w    r10          ;pop     
  r10
    102.7  00001E 3941                     pop.w    r9           ;pop     
  r9
    102.8  000020 3841                     pop.w    r8           ;pop     
  r8
    102.9  000022 3741                     pop.w    r7           ;pop     
  r7
    102.10 000024 3641                     pop.w    r6           ;pop     
  r6
    102.11 000026 3541                     pop.w    r5           ;pop     
  r5
    102.12 000028 3441                     pop.w    r4           ;pop      r4  
         
    102.13 00002A                          ENDM
    103    00002A                           
    104    00002A 0013                     reti                            ;
  emulate return from interrupt
    105    00002C               
    106    00002C              
    107    00002C              ;***********************************************
                               ************************************************
                               *********
    108    00002C              ;                                     TASK LEVEL
                                CONTEXT SWITCH
    109    00002C              ;
    110    00002C              ; Description: This function is called by
                                OS_Sched() to perform a task level context
                                switch.
    111    00002C              ;
    112    00002C              ; Note       : OSCtxSw() MUST:
    113    00002C              ;                 a) Save the current task's
                                registers onto the current task stack
    114    00002C              ;                 b) Save the SP into the
                                current task's OS_TCB
    115    00002C              ;                 c) Call OSTaskSwHook()
    116    00002C              ;                 d) Copy OSPrioHighRdy to
                                OSPrioCur
    117    00002C              ;                 e) Copy OSTCBHighRdy to
                                OSTCBCur
    118    00002C              ;                 f) Load the SP with OSTCBHighR
                               dy->OSTCBStkPtr
    119    00002C              ;                 g) Restore all the registers
                                from the high priority task stack
    120    00002C              ;                 h) Perform a return from
                                interrupt
    121    00002C              ;***********************************************
                               ************************************************
                               *********
    122    00002C              
    123    00002C              OSCtxSw
    124    00002C                          PUSHALL                         ;
                                push all registers 
    124.1  00002C 0412                     push.w   r4           ;push    
  r4
    124.2  00002E 0512                     push.w   r5           ;push    
  r5
    124.3  000030 0612                     push.w   r6           ;push    
  r6
    124.4  000032 0712                     push.w   r7           ;push    
  r7
    124.5  000034 0812                     push.w   r8           ;push    
  r8
    124.6  000036 0912                     push.w   r9           ;push    
  r9
    124.7  000038 0A12                     push.w   r10          ;push    
  r10
    124.8  00003A 0B12                     push.w   r11          ;push    
  r11
    124.9  00003C 0C12                     push.w   r12          ;push    
  r12
    124.10 00003E 0D12                     push.w   r13          ;push    
  r13
    124.11 000040 0E12                     push.w   r14          ;push    
  r14
    124.12 000042 0F12                     push.w   r15          ;push    
  r15
    124.13 000044                          ENDM
    125    000044 0442                     mov.w     sr,R4                
                                                         ;
    126    000046 0D41                     mov.w     SP,R13               
                                                         ;
    127    000048 154D1A00                 mov.w     26(R13),R5           
                                                             ;
    128    00004C 9D4D18001A00             mov.w     24(R13),26(R13)      
                                                             ;
    129    000052                         
    130    000052 0555                     RLA       R5
    131    000054 0555                     RLA       R5
    132    000056 0555                     RLA       R5
    133    000058 0555                     RLA       R5
    134    00005A 0555                     RLA       R5
    135    00005C 0555                     RLA       R5
    136    00005E 0555                     RLA       R5
    137    000060 0555                     RLA       R5
    138    000062 0555                     RLA       R5
    139    000064 0555                     RLA       R5
    140    000066 0555                     RLA       R5
    141    000068 0555                     RLA       R5
    142    00006A 04D5                     BIS       R5,R4
    143    00006C 8D441800                 mov.w     R4,24(R13)
    144    000070                                     
    145    000070 1D42....                 mov.w     &OSTCBCur, R13        ;
                                                                 OSTCBCur->OSTC
                                                                BStkPtr =
                                                                 SP
    146    000074 8D410000                 mov.w     SP, 0(R13)
    147    000078 ........                 calla     #OSTaskSwHook
    148    00007C              
    149    00007C 5D42....                 mov.b     &OSPrioHighRdy, R13   ;
                                                                      OSPrioCur
                                                                      =
                                                                      OSPrioHig
                                                                     hRdy
    150    000080 C24D....                 mov.b     R13, &OSPrioCur      
                                                           ;
    151    000084                                        
    152    000084 1D42....                 mov.w     &OSTCBHighRdy, R13    ;
                                                                     OSTCBCur 
                                                                     =
                                                                     OSTCBHighR
                                                                    dy
    153    000088 824D....                 mov.w     R13, &OSTCBCur       
                                                           ;
    154    00008C                                        
    155    00008C 214D                     mov.w     @R13, SP              ; SP
                                                                   = OSTCBHighR
                                                           dy->OSTCBStkPtr
    156    00008E                           
    157    00008E                          POPALL                          ;
                                pop all registers
    157.1  00008E 3F41                     pop.w    r15          ;pop     
  r15
    157.2  000090 3E41                     pop.w    r14          ;pop     
  r14
    157.3  000092 3D41                     pop.w    r13          ;pop     
  r13
    157.4  000094 3C41                     pop.w    r12          ;pop     
  r12
    157.5  000096 3B41                     pop.w    r11          ;pop     
  r11
    157.6  000098 3A41                     pop.w    r10          ;pop     
  r10
    157.7  00009A 3941                     pop.w    r9           ;pop     
  r9
    157.8  00009C 3841                     pop.w    r8           ;pop     
  r8
    157.9  00009E 3741                     pop.w    r7           ;pop     
  r7
    157.10 0000A0 3641                     pop.w    r6           ;pop     
  r6
    157.11 0000A2 3541                     pop.w    r5           ;pop     
  r5
    157.12 0000A4 3441                     pop.w    r4           ;pop      r4  
         
    157.13 0000A6                          ENDM
    158    0000A6                           
    159    0000A6 0013                     reti                            ;
  return from interrup
    160    0000A8              
    161    0000A8              
    162    0000A8              
    163    0000A8              ;***********************************************
                               ************************************************
                               *********
    164    0000A8              ;                                       ISR
                                LEVEL CONTEXT SWITCH
    165    0000A8              ;
    166    0000A8              ; Description: This function is called by
                                OSIntExit() to perform an ISR level context
                                switch.
    167    0000A8              ;
    168    0000A8              ; Note       : OSIntCtxSw() MUST:
    169    0000A8              ;                 a) Call OSTaskSwHook()
    170    0000A8              ;                 b) Copy OSPrioHighRdy to
                                OSPrioCur
    171    0000A8              ;                 c) Copy OSTCBHighRdy to
                                OSTCBCur
    172    0000A8              ;                 d) Load the SP with OSTCBHighR
                               dy->OSTCBStkPtr
    173    0000A8              ;                 e) Restore all the registers
                                from the high priority task stack
    174    0000A8              ;                 f) Perform a return from
                                interrupt
    175    0000A8              ;***********************************************
                               ************************************************
                               *********
    176    0000A8              
    177    0000A8              OSIntCtxSw
    178    0000A8                           
    179    0000A8 ........                 calla     #OSTaskSwHook
    180    0000AC              
    181    0000AC 5D42....                 mov.b     &OSPrioHighRdy, R13   ;
                                                                      OSPrioCur
                                                                      =
                                                                      OSPrioHig
                                                                     hRdy
    182    0000B0 C24D....                 mov.b     R13, &OSPrioCur      
                                                           ;
    183    0000B4                                        
    184    0000B4 1D42....                 mov.w     &OSTCBHighRdy, R13    ;
                                                                     OSTCBCur 
                                                                     =
                                                                     OSTCBHighR
                                                                    dy
    185    0000B8 824D....                 mov.w     R13, &OSTCBCur       
                                                           ;
    186    0000BC                                        
    187    0000BC 214D                     mov.w     @R13, SP              ; SP
                                                                   = OSTCBHighR
                                                           dy->OSTCBStkPtr
    188    0000BE                           
    189    0000BE                          POPALL                          ;
                                pop all registers
    189.1  0000BE 3F41                     pop.w    r15          ;pop     
  r15
    189.2  0000C0 3E41                     pop.w    r14          ;pop     
  r14
    189.3  0000C2 3D41                     pop.w    r13          ;pop     
  r13
    189.4  0000C4 3C41                     pop.w    r12          ;pop     
  r12
    189.5  0000C6 3B41                     pop.w    r11          ;pop     
  r11
    189.6  0000C8 3A41                     pop.w    r10          ;pop     
  r10
    189.7  0000CA 3941                     pop.w    r9           ;pop     
  r9
    189.8  0000CC 3841                     pop.w    r8           ;pop     
  r8
    189.9  0000CE 3741                     pop.w    r7           ;pop     
  r7
    189.10 0000D0 3641                     pop.w    r6           ;pop     
  r6
    189.11 0000D2 3541                     pop.w    r5           ;pop     
  r5
    189.12 0000D4 3441                     pop.w    r4           ;pop      r4  
         
    189.13 0000D6                          ENDM
    190    0000D6                           
    191    0000D6 0013                     reti                            ;
  return from interrup
    192    0000D8              
    193    0000D8              
    194    0000D8              ;***********************************************
                               ************************************************
                               *********
    195    0000D8              ;                                             
                                TICK ISR
    196    0000D8              ;
    197    0000D8              ; Description: This ISR handles tick interrupts.
                                 This ISR uses the Watchdog timer as the tick
                                source.
    198    0000D8              ;
    199    0000D8              ; Notes      : 1) The following C pseudo-code
                                describes the operations being performed in the
                                code below.
    200    0000D8              ;
    201    0000D8              ;                 Save all the CPU registers
    202    0000D8              ;                 if (OSIntNesting == 0)
                                {
    203    0000D8              ;                     OSTCBCur->OSTCBStkPtr =
                                SP;
    204    0000D8              ;                     SP                    =
                                OSISRStkPtr;  /* Use the ISR stack from now on 
                                         */
    205    0000D8              ;                 }
    206    0000D8              ;                 OSIntNesting++;
    207    0000D8              ;                 Enable interrupt nesting;     
                                           /* Allow nesting of interrupts (if
                                needed) */
    208    0000D8              ;                 Clear the interrupt source;
    209    0000D8              ;                 OSTimeTick();                 
                                           /* Call uC/OS-II's tick handler     
                                      */
    210    0000D8              ;                 DISABLE general interrupts;   
                                           /* Must DI before calling OSIntExit(
                               )      */
    211    0000D8              ;                 OSIntExit();
    212    0000D8              ;                 if (OSIntNesting == 0)
                                {
    213    0000D8              ;                     SP = OSTCBHighRdy->OSTCBSt
                               kPtr;       /* Restore the current task's stack 
                                      */
    214    0000D8              ;                 }
    215    0000D8              ;                 Restore the CPU registers
    216    0000D8              ;                 Return from interrupt.
    217    0000D8              ;
    218    0000D8              ;              2) ALL ISRs should be written
                                like this!
    219    0000D8              ;
    220    0000D8              ;              3) You MUST disable general
                                interrupts BEFORE you call OSIntExit() because
                                an interrupt 
    221    0000D8              ;                 COULD occur just as OSIntExit(
                               ) returns and thus, the new ISR would save the
                                SP of 
    222    0000D8              ;                 the ISR stack and NOT the SP
                                of the task stack.  This of course will most
                                likely cause
    223    0000D8              ;                 the code to crash.  By
                                disabling interrupts BEFORE OSIntExit(),
                                interrupts would be
    224    0000D8              ;                 disabled when OSIntExit()
                                would return.  This assumes that you are using
                                OS_CRITICAL_METHOD
    225    0000D8              ;                 #3 (which is the prefered
                                method).
    226    0000D8              ;
    227    0000D8              ;              4) If you DON'T use a separate
                                ISR stack then you don't need to disable
                                general interrupts 
    228    0000D8              ;                 just before calling OSIntExit(
                               ).  The pseudo-code for an ISR would thus look
                                like this:
    229    0000D8              ;
    230    0000D8              ;                 Save all the CPU registers
    231    0000D8              ;                 if (OSIntNesting == 0)
                                {
    232    0000D8              ;                     OSTCBCur->OSTCBStkPtr =
                                SP;
    233    0000D8              ;                 }
    234    0000D8              ;                 OSIntNesting++;
    235    0000D8              ;                 Enable interrupt nesting;     
                                           /* Allow nesting of interrupts (if
                                needed) */
    236    0000D8              ;                 Clear the interrupt source;
    237    0000D8              ;                 OSTimeTick();                 
                                           /* Call uC/OS-II's tick handler     
                                      */
    238    0000D8              ;                 OSIntExit();
    239    0000D8              ;                 Restore the CPU registers
    240    0000D8              ;                 Return from interrupt.
    241    0000D8              ;***********************************************
                               ************************************************
                               *********
    242    0000D8              
    243    0000D8              TICKS_ISR                                     ;
                                wd timer ISR
    244    0000D8                          PUSHALL                         ;
                                push all registers             
    244.1  0000D8 0412                     push.w   r4           ;push    
  r4
    244.2  0000DA 0512                     push.w   r5           ;push    
  r5
    244.3  0000DC 0612                     push.w   r6           ;push    
  r6
    244.4  0000DE 0712                     push.w   r7           ;push    
  r7
    244.5  0000E0 0812                     push.w   r8           ;push    
  r8
    244.6  0000E2 0912                     push.w   r9           ;push    
  r9
    244.7  0000E4 0A12                     push.w   r10          ;push    
  r10
    244.8  0000E6 0B12                     push.w   r11          ;push    
  r11
    244.9  0000E8 0C12                     push.w   r12          ;push    
  r12
    244.10 0000EA 0D12                     push.w   r13          ;push    
  r13
    244.11 0000EC 0E12                     push.w   r14          ;push    
  r14
    244.12 0000EE 0F12                     push.w   r15          ;push    
  r15
    244.13 0000F0                          ENDM
    245    0000F0                           
    246    0000F0 D0C3....                 bic.b    #0x01, SFRIE1_L        ;
  bic.b    #0x01, SFRIE1             ; disable wd timer interrupt
    247    0000F4                           
    248    0000F4 C293....                 cmp.b    #0, &OSIntNesting      ; if
  (OSIntNesting == 0)  
    249    0000F8 0620                     jne      TICKS_ISR_1
    250    0000FA                                             
    251    0000FA 1D42....                 mov.w    &OSTCBCur, R13         ;   
                                                                 save task
                                                                stack
    252    0000FE 8D410000                 mov.w    SP, 0(R13)
    253    000102              
    254    000102 1142....                 mov.w    &OSISRStkPtr, SP       ;   
                                                                    load
                                                                   interrupt
                                                                   stack       
                                                                       
                                                                   
    255    000106              
    256    000106              TICKS_ISR_1
    257    000106 D253....                 inc.b    &OSIntNesting          ;
  increase OSIntNesting
    258    00010A D0D3....                 bis.b    #0x01, SFRIE1_L         
  ;bis.b    #0x01, SFRIE1             ; enable wd timer interrupt
    259    00010E                           
    260    00010E 32D2                     EINT                            ;
  enable general interrupt to allow for interrupt nesting
    261    000110              
    262    000110 ........                 calla    #OSTimeTick            ;
  call ticks routine             
    263    000114              
    264    000114 32C2                     DINT                            ;
  IMPORTANT: disable general interrupt BEFORE calling OSIntExit()
    265    000116              
    266    000116 ........                 calla    #OSIntExit             ;
  call ticks routine
    267    00011A                          //没发生任务切换的，执行以下代码
    268    00011A C293....                 cmp.b    #0, &OSIntNesting      ; if
  (OSIntNesting == 0) 
    269    00011E 0320                     jne      TICKS_ISR_2
    270    000120              
    271    000120 1D42....                 mov.w    &OSTCBHighRdy, R13     ;   
                                                                     restore
                                                                    task stack
                                                                    SP
    272    000124 214D                     mov.w    @R13, SP
    273    000126                                     
    274    000126              TICKS_ISR_2
    275    000126                          POPALL                          ;
                                pop all registers
    275.1  000126 3F41                     pop.w    r15          ;pop     
  r15
    275.2  000128 3E41                     pop.w    r14          ;pop     
  r14
    275.3  00012A 3D41                     pop.w    r13          ;pop     
  r13
    275.4  00012C 3C41                     pop.w    r12          ;pop     
  r12
    275.5  00012E 3B41                     pop.w    r11          ;pop     
  r11
    275.6  000130 3A41                     pop.w    r10          ;pop     
  r10
    275.7  000132 3941                     pop.w    r9           ;pop     
  r9
    275.8  000134 3841                     pop.w    r8           ;pop     
  r8
    275.9  000136 3741                     pop.w    r7           ;pop     
  r7
    275.10 000138 3641                     pop.w    r6           ;pop     
  r6
    275.11 00013A 3541                     pop.w    r5           ;pop     
  r5
    275.12 00013C 3441                     pop.w    r4           ;pop      r4  
         
    275.13 00013E                          ENDM
    276    00013E                           
    277    00013E 0013                     reti                            ;
  return from interrupt
    278    000140                                                        
                                
    279    000140              
    280    000140              ;***********************************************
                               ************************************************
                               *********
    281    000140              ;                             SAVE AND RESTORE
                                THE CPU'S STATUS REGISTER
    282    000140              ;
    283    000140              ; Description: These functions are used to
                                implement OS_CRITICAL_METHOD #3 by saving the
                                status register
    284    000140              ;              in a local variable of the
                                calling function and then, disables interrupts.
                                
    285    000140              ;
    286    000140              ; Notes      : R12 is assumed to hold the
                                argument passed to OSCPUSaveSR() and also, the
                                value returned
    287    000140              ;              by OSCPURestoreSR().
    288    000140              ;***********************************************
                               ************************************************
                               *********
    289    000140              
    290    000140              OSCPUSaveSR
    291    000140 0C42                     MOV.W    SR,R12
    292    000142 32C2                     DINT
    293    000144 1001                     RETA
    294    000146              
    295    000146              
    296    000146              OSCPURestoreSR
    297    000146 024C                     MOV.W    R12,SR
    298    000148 1001                     RETA
    299    00014A              
    300    00014A              ;***********************************************
                               ************************************************
                               *********
    301    00014A              ;                                 WD TIMER
                                INTERRUPT VECTOR ENTRY
    302    00014A              ;
    303    00014A              ;  Interrupt vectors             
    304    00014A              ;***********************************************
                               ************************************************
                               *********
    305    000000                          COMMON  INTVEC
    306    000000              
    307    000072                          ORG     WDT_VECTOR 
    308    000072 ....         WDT_VEC     DW      TICKS_ISR                 ;
                                                     interrupt vector.
                                                     Watchdog/Timer, Timer
                                                     mode
    309    000074              
    310    000074                          END



Segment             Type 	Mode
----------------------------------------
CODE                UNTYPED  	REL 
INTVEC              UNTYPED  	COMMON 

Label               Mode   Type                   Segment    Value/Offset
------------------------------------------------------------------------------
ADC12CTL0           ABS    CONST UNTYP.           ASEG       700 
ADC12CTL0_H         ABS    CONST UNTYP.           ASEG       701 
ADC12CTL0_L         ABS    CONST UNTYP.           ASEG       700 
ADC12CTL1           ABS    CONST UNTYP.           ASEG       702 
ADC12CTL1_H         ABS    CONST UNTYP.           ASEG       703 
ADC12CTL1_L         ABS    CONST UNTYP.           ASEG       702 
ADC12CTL2           ABS    CONST UNTYP.           ASEG       704 
ADC12CTL2_H         ABS    CONST UNTYP.           ASEG       705 
ADC12CTL2_L         ABS    CONST UNTYP.           ASEG       704 
ADC12IE             ABS    CONST UNTYP.           ASEG       70C 
ADC12IE_H           ABS    CONST UNTYP.           ASEG       70D 
ADC12IE_L           ABS    CONST UNTYP.           ASEG       70C 
ADC12IFG            ABS    CONST UNTYP.           ASEG       70A 
ADC12IFG_H          ABS    CONST UNTYP.           ASEG       70B 
ADC12IFG_L          ABS    CONST UNTYP.           ASEG       70A 
ADC12IV             ABS    CONST UNTYP.           ASEG       70E 
ADC12IV_H           ABS    CONST UNTYP.           ASEG       70F 
ADC12IV_L           ABS    CONST UNTYP.           ASEG       70E 
ADC12MCTL0          ABS    CONST UNTYP.           ASEG       710 
ADC12MCTL1          ABS    CONST UNTYP.           ASEG       711 
ADC12MCTL10         ABS    CONST UNTYP.           ASEG       71A 
ADC12MCTL11         ABS    CONST UNTYP.           ASEG       71B 
ADC12MCTL12         ABS    CONST UNTYP.           ASEG       71C 
ADC12MCTL13         ABS    CONST UNTYP.           ASEG       71D 
ADC12MCTL14         ABS    CONST UNTYP.           ASEG       71E 
ADC12MCTL15         ABS    CONST UNTYP.           ASEG       71F 
ADC12MCTL2          ABS    CONST UNTYP.           ASEG       712 
ADC12MCTL3          ABS    CONST UNTYP.           ASEG       713 
ADC12MCTL4          ABS    CONST UNTYP.           ASEG       714 
ADC12MCTL5          ABS    CONST UNTYP.           ASEG       715 
ADC12MCTL6          ABS    CONST UNTYP.           ASEG       716 
ADC12MCTL7          ABS    CONST UNTYP.           ASEG       717 
ADC12MCTL8          ABS    CONST UNTYP.           ASEG       718 
ADC12MCTL9          ABS    CONST UNTYP.           ASEG       719 
ADC12MEM0           ABS    CONST UNTYP.           ASEG       720 
ADC12MEM0_H         ABS    CONST UNTYP.           ASEG       721 
ADC12MEM0_L         ABS    CONST UNTYP.           ASEG       720 
ADC12MEM1           ABS    CONST UNTYP.           ASEG       722 
ADC12MEM10          ABS    CONST UNTYP.           ASEG       734 
ADC12MEM10_H        ABS    CONST UNTYP.           ASEG       735 
ADC12MEM10_L        ABS    CONST UNTYP.           ASEG       734 
ADC12MEM11          ABS    CONST UNTYP.           ASEG       736 
ADC12MEM11_H        ABS    CONST UNTYP.           ASEG       737 
ADC12MEM11_L        ABS    CONST UNTYP.           ASEG       736 
ADC12MEM12          ABS    CONST UNTYP.           ASEG       738 
ADC12MEM12_H        ABS    CONST UNTYP.           ASEG       739 
ADC12MEM12_L        ABS    CONST UNTYP.           ASEG       738 
ADC12MEM13          ABS    CONST UNTYP.           ASEG       73A 
ADC12MEM13_H        ABS    CONST UNTYP.           ASEG       73B 
ADC12MEM13_L        ABS    CONST UNTYP.           ASEG       73A 
ADC12MEM14          ABS    CONST UNTYP.           ASEG       73C 
ADC12MEM14_H        ABS    CONST UNTYP.           ASEG       73D 
ADC12MEM14_L        ABS    CONST UNTYP.           ASEG       73C 
ADC12MEM15          ABS    CONST UNTYP.           ASEG       73E 
ADC12MEM15_H        ABS    CONST UNTYP.           ASEG       73F 
ADC12MEM15_L        ABS    CONST UNTYP.           ASEG       73E 
ADC12MEM1_H         ABS    CONST UNTYP.           ASEG       723 
ADC12MEM1_L         ABS    CONST UNTYP.           ASEG       722 
ADC12MEM2           ABS    CONST UNTYP.           ASEG       724 
ADC12MEM2_H         ABS    CONST UNTYP.           ASEG       725 
ADC12MEM2_L         ABS    CONST UNTYP.           ASEG       724 
ADC12MEM3           ABS    CONST UNTYP.           ASEG       726 
ADC12MEM3_H         ABS    CONST UNTYP.           ASEG       727 
ADC12MEM3_L         ABS    CONST UNTYP.           ASEG       726 
ADC12MEM4           ABS    CONST UNTYP.           ASEG       728 
ADC12MEM4_H         ABS    CONST UNTYP.           ASEG       729 
ADC12MEM4_L         ABS    CONST UNTYP.           ASEG       728 
ADC12MEM5           ABS    CONST UNTYP.           ASEG       72A 
ADC12MEM5_H         ABS    CONST UNTYP.           ASEG       72B 
ADC12MEM5_L         ABS    CONST UNTYP.           ASEG       72A 
ADC12MEM6           ABS    CONST UNTYP.           ASEG       72C 
ADC12MEM6_H         ABS    CONST UNTYP.           ASEG       72D 
ADC12MEM6_L         ABS    CONST UNTYP.           ASEG       72C 
ADC12MEM7           ABS    CONST UNTYP.           ASEG       72E 
ADC12MEM7_H         ABS    CONST UNTYP.           ASEG       72F 
ADC12MEM7_L         ABS    CONST UNTYP.           ASEG       72E 
ADC12MEM8           ABS    CONST UNTYP.           ASEG       730 
ADC12MEM8_H         ABS    CONST UNTYP.           ASEG       731 
ADC12MEM8_L         ABS    CONST UNTYP.           ASEG       730 
ADC12MEM9           ABS    CONST UNTYP.           ASEG       732 
ADC12MEM9_H         ABS    CONST UNTYP.           ASEG       733 
ADC12MEM9_L         ABS    CONST UNTYP.           ASEG       732 
CBCTL0              ABS    CONST UNTYP.           ASEG       8C0 
CBCTL0_H            ABS    CONST UNTYP.           ASEG       8C1 
CBCTL0_L            ABS    CONST UNTYP.           ASEG       8C0 
CBCTL1              ABS    CONST UNTYP.           ASEG       8C2 
CBCTL1_H            ABS    CONST UNTYP.           ASEG       8C3 
CBCTL1_L            ABS    CONST UNTYP.           ASEG       8C2 
CBCTL2              ABS    CONST UNTYP.           ASEG       8C4 
CBCTL2_H            ABS    CONST UNTYP.           ASEG       8C5 
CBCTL2_L            ABS    CONST UNTYP.           ASEG       8C4 
CBCTL3              ABS    CONST UNTYP.           ASEG       8C6 
CBCTL3_H            ABS    CONST UNTYP.           ASEG       8C7 
CBCTL3_L            ABS    CONST UNTYP.           ASEG       8C6 
CBINT               ABS    CONST UNTYP.           ASEG       8CC 
CBINT_H             ABS    CONST UNTYP.           ASEG       8CD 
CBINT_L             ABS    CONST UNTYP.           ASEG       8CC 
CBIV                ABS    CONST UNTYP.           ASEG       8CE 
CRCDI               ABS    CONST UNTYP.           ASEG       150 
CRCDIRB             ABS    CONST UNTYP.           ASEG       152 
CRCDIRB_H           ABS    CONST UNTYP.           ASEG       153 
CRCDIRB_L           ABS    CONST UNTYP.           ASEG       152 
CRCDI_H             ABS    CONST UNTYP.           ASEG       151 
CRCDI_L             ABS    CONST UNTYP.           ASEG       150 
CRCINIRES           ABS    CONST UNTYP.           ASEG       154 
CRCINIRES_H         ABS    CONST UNTYP.           ASEG       155 
CRCINIRES_L         ABS    CONST UNTYP.           ASEG       154 
CRCRESR             ABS    CONST UNTYP.           ASEG       156 
CRCRESR_H           ABS    CONST UNTYP.           ASEG       157 
CRCRESR_L           ABS    CONST UNTYP.           ASEG       156 
DMA0CTL             ABS    CONST UNTYP.           ASEG       510 
DMA0CTL_H           ABS    CONST UNTYP.           ASEG       511 
DMA0CTL_L           ABS    CONST UNTYP.           ASEG       510 
DMA0DA              ABS    CONST UNTYP.           ASEG       516 
DMA0DAH             ABS    CONST UNTYP.           ASEG       518 
DMA0DAL             ABS    CONST UNTYP.           ASEG       516 
DMA0DA_H            ABS    CONST UNTYP.           ASEG       517 
DMA0DA_L            ABS    CONST UNTYP.           ASEG       516 
DMA0SA              ABS    CONST UNTYP.           ASEG       512 
DMA0SAH             ABS    CONST UNTYP.           ASEG       514 
DMA0SAL             ABS    CONST UNTYP.           ASEG       512 
DMA0SA_H            ABS    CONST UNTYP.           ASEG       513 
DMA0SA_L            ABS    CONST UNTYP.           ASEG       512 
DMA0SZ              ABS    CONST UNTYP.           ASEG       51A 
DMA1CTL             ABS    CONST UNTYP.           ASEG       520 
DMA1CTL_H           ABS    CONST UNTYP.           ASEG       521 
DMA1CTL_L           ABS    CONST UNTYP.           ASEG       520 
DMA1DA              ABS    CONST UNTYP.           ASEG       526 
DMA1DAH             ABS    CONST UNTYP.           ASEG       528 
DMA1DAL             ABS    CONST UNTYP.           ASEG       526 
DMA1DA_H            ABS    CONST UNTYP.           ASEG       527 
DMA1DA_L            ABS    CONST UNTYP.           ASEG       526 
DMA1SA              ABS    CONST UNTYP.           ASEG       522 
DMA1SAH             ABS    CONST UNTYP.           ASEG       524 
DMA1SAL             ABS    CONST UNTYP.           ASEG       522 
DMA1SA_H            ABS    CONST UNTYP.           ASEG       523 
DMA1SA_L            ABS    CONST UNTYP.           ASEG       522 
DMA1SZ              ABS    CONST UNTYP.           ASEG       52A 
DMA2CTL             ABS    CONST UNTYP.           ASEG       530 
DMA2CTL_H           ABS    CONST UNTYP.           ASEG       531 
DMA2CTL_L           ABS    CONST UNTYP.           ASEG       530 
DMA2DA              ABS    CONST UNTYP.           ASEG       536 
DMA2DAH             ABS    CONST UNTYP.           ASEG       538 
DMA2DAL             ABS    CONST UNTYP.           ASEG       536 
DMA2DA_H            ABS    CONST UNTYP.           ASEG       537 
DMA2DA_L            ABS    CONST UNTYP.           ASEG       536 
DMA2SA              ABS    CONST UNTYP.           ASEG       532 
DMA2SAH             ABS    CONST UNTYP.           ASEG       534 
DMA2SAL             ABS    CONST UNTYP.           ASEG       532 
DMA2SA_H            ABS    CONST UNTYP.           ASEG       533 
DMA2SA_L            ABS    CONST UNTYP.           ASEG       532 
DMA2SZ              ABS    CONST UNTYP.           ASEG       53A 
DMACTL0             ABS    CONST UNTYP.           ASEG       500 
DMACTL0_H           ABS    CONST UNTYP.           ASEG       501 
DMACTL0_L           ABS    CONST UNTYP.           ASEG       500 
DMACTL1             ABS    CONST UNTYP.           ASEG       502 
DMACTL1_H           ABS    CONST UNTYP.           ASEG       503 
DMACTL1_L           ABS    CONST UNTYP.           ASEG       502 
DMACTL2             ABS    CONST UNTYP.           ASEG       504 
DMACTL2_H           ABS    CONST UNTYP.           ASEG       505 
DMACTL2_L           ABS    CONST UNTYP.           ASEG       504 
DMACTL3             ABS    CONST UNTYP.           ASEG       506 
DMACTL3_H           ABS    CONST UNTYP.           ASEG       507 
DMACTL3_L           ABS    CONST UNTYP.           ASEG       506 
DMACTL4             ABS    CONST UNTYP.           ASEG       508 
DMACTL4_H           ABS    CONST UNTYP.           ASEG       509 
DMACTL4_L           ABS    CONST UNTYP.           ASEG       508 
DMAIV               ABS    CONST UNTYP.           ASEG       50E 
DMAIV_H             ABS    CONST UNTYP.           ASEG       50F 
DMAIV_L             ABS    CONST UNTYP.           ASEG       50E 
FCTL1               ABS    CONST UNTYP.           ASEG       140 
FCTL1_H             ABS    CONST UNTYP.           ASEG       141 
FCTL1_L             ABS    CONST UNTYP.           ASEG       140 
FCTL3               ABS    CONST UNTYP.           ASEG       144 
FCTL3_H             ABS    CONST UNTYP.           ASEG       145 
FCTL3_L             ABS    CONST UNTYP.           ASEG       144 
FCTL4               ABS    CONST UNTYP.           ASEG       146 
FCTL4_H             ABS    CONST UNTYP.           ASEG       147 
FCTL4_L             ABS    CONST UNTYP.           ASEG       146 
MAC                 ABS    CONST UNTYP.           ASEG       4C4 
MAC32H              ABS    CONST UNTYP.           ASEG       4DA 
MAC32H_H            ABS    CONST UNTYP.           ASEG       4DB 
MAC32H_L            ABS    CONST UNTYP.           ASEG       4DA 
MAC32L              ABS    CONST UNTYP.           ASEG       4D8 
MAC32L_H            ABS    CONST UNTYP.           ASEG       4D9 
MAC32L_L            ABS    CONST UNTYP.           ASEG       4D8 
MACS                ABS    CONST UNTYP.           ASEG       4C6 
MACS32H             ABS    CONST UNTYP.           ASEG       4DE 
MACS32H_H           ABS    CONST UNTYP.           ASEG       4DF 
MACS32H_L           ABS    CONST UNTYP.           ASEG       4DE 
MACS32L             ABS    CONST UNTYP.           ASEG       4DC 
MACS32L_H           ABS    CONST UNTYP.           ASEG       4DD 
MACS32L_L           ABS    CONST UNTYP.           ASEG       4DC 
MACS_H              ABS    CONST UNTYP.           ASEG       4C7 
MACS_L              ABS    CONST UNTYP.           ASEG       4C6 
MAC_H               ABS    CONST UNTYP.           ASEG       4C5 
MAC_L               ABS    CONST UNTYP.           ASEG       4C4 
MPY                 ABS    CONST UNTYP.           ASEG       4C0 
MPY32CTL0           ABS    CONST UNTYP.           ASEG       4EC 
MPY32CTL0_H         ABS    CONST UNTYP.           ASEG       4ED 
MPY32CTL0_L         ABS    CONST UNTYP.           ASEG       4EC 
MPY32H              ABS    CONST UNTYP.           ASEG       4D2 
MPY32H_H            ABS    CONST UNTYP.           ASEG       4D3 
MPY32H_L            ABS    CONST UNTYP.           ASEG       4D2 
MPY32L              ABS    CONST UNTYP.           ASEG       4D0 
MPY32L_H            ABS    CONST UNTYP.           ASEG       4D1 
MPY32L_L            ABS    CONST UNTYP.           ASEG       4D0 
MPYS                ABS    CONST UNTYP.           ASEG       4C2 
MPYS32H             ABS    CONST UNTYP.           ASEG       4D6 
MPYS32H_H           ABS    CONST UNTYP.           ASEG       4D7 
MPYS32H_L           ABS    CONST UNTYP.           ASEG       4D6 
MPYS32L             ABS    CONST UNTYP.           ASEG       4D4 
MPYS32L_H           ABS    CONST UNTYP.           ASEG       4D5 
MPYS32L_L           ABS    CONST UNTYP.           ASEG       4D4 
MPYS_H              ABS    CONST UNTYP.           ASEG       4C3 
MPYS_L              ABS    CONST UNTYP.           ASEG       4C2 
MPY_H               ABS    CONST UNTYP.           ASEG       4C1 
MPY_L               ABS    CONST UNTYP.           ASEG       4C0 
OP2                 ABS    CONST UNTYP.           ASEG       4C8 
OP2H                ABS    CONST UNTYP.           ASEG       4E2 
OP2H_H              ABS    CONST UNTYP.           ASEG       4E3 
OP2H_L              ABS    CONST UNTYP.           ASEG       4E2 
OP2L                ABS    CONST UNTYP.           ASEG       4E0 
OP2L_H              ABS    CONST UNTYP.           ASEG       4E1 
OP2L_L              ABS    CONST UNTYP.           ASEG       4E0 
OP2_H               ABS    CONST UNTYP.           ASEG       4C9 
OP2_L               ABS    CONST UNTYP.           ASEG       4C8 
OSCPURestoreSR      REL    CONST PUB UNTYP.       CODE       146 
OSCPUSaveSR         REL    CONST PUB UNTYP.       CODE       140 
OSCtxSw             REL    CONST PUB UNTYP.       CODE       2C 
OSISRStkPtr         ABS    CONST EXT [002] UNTYP. __EXTERNS  Solved Extern 
OSIntCtxSw          REL    CONST PUB UNTYP.       CODE       A8 
OSIntExit           ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 
OSIntNesting        ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 
OSPrioCur           ABS    CONST EXT [003] UNTYP. __EXTERNS  Solved Extern 
OSPrioHighRdy       ABS    CONST EXT [004] UNTYP. __EXTERNS  Solved Extern 
OSRunning           ABS    CONST EXT [005] UNTYP. __EXTERNS  Solved Extern 
OSStartHighRdy      REL    CONST PUB UNTYP.       CODE       0 
OSTCBCur            ABS    CONST EXT [006] UNTYP. __EXTERNS  Solved Extern 
OSTCBHighRdy        ABS    CONST EXT [007] UNTYP. __EXTERNS  Solved Extern 
OSTaskSwHook        ABS    CONST EXT [008] UNTYP. __EXTERNS  Solved Extern 
OSTimeTick          ABS    CONST EXT [009] UNTYP. __EXTERNS  Solved Extern 
P1IV                ABS    CONST UNTYP.           ASEG       20E 
P2IV                ABS    CONST UNTYP.           ASEG       21E 
P4MAP01             ABS    CONST UNTYP.           ASEG       1E0 
P4MAP01_H           ABS    CONST UNTYP.           ASEG       1E1 
P4MAP01_L           ABS    CONST UNTYP.           ASEG       1E0 
P4MAP23             ABS    CONST UNTYP.           ASEG       1E2 
P4MAP23_H           ABS    CONST UNTYP.           ASEG       1E3 
P4MAP23_L           ABS    CONST UNTYP.           ASEG       1E2 
P4MAP45             ABS    CONST UNTYP.           ASEG       1E4 
P4MAP45_H           ABS    CONST UNTYP.           ASEG       1E5 
P4MAP45_L           ABS    CONST UNTYP.           ASEG       1E4 
P4MAP67             ABS    CONST UNTYP.           ASEG       1E6 
P4MAP67_H           ABS    CONST UNTYP.           ASEG       1E7 
P4MAP67_L           ABS    CONST UNTYP.           ASEG       1E6 
PADIR               ABS    CONST UNTYP.           ASEG       204 
PADIR_H             ABS    CONST UNTYP.           ASEG       205 
PADIR_L             ABS    CONST UNTYP.           ASEG       204 
PADS                ABS    CONST UNTYP.           ASEG       208 
PADS_H              ABS    CONST UNTYP.           ASEG       209 
PADS_L              ABS    CONST UNTYP.           ASEG       208 
PAIE                ABS    CONST UNTYP.           ASEG       21A 
PAIES               ABS    CONST UNTYP.           ASEG       218 
PAIES_H             ABS    CONST UNTYP.           ASEG       219 
PAIES_L             ABS    CONST UNTYP.           ASEG       218 
PAIE_H              ABS    CONST UNTYP.           ASEG       21B 
PAIE_L              ABS    CONST UNTYP.           ASEG       21A 
PAIFG               ABS    CONST UNTYP.           ASEG       21C 
PAIFG_H             ABS    CONST UNTYP.           ASEG       21D 
PAIFG_L             ABS    CONST UNTYP.           ASEG       21C 
PAIN                ABS    CONST UNTYP.           ASEG       200 
PAIN_H              ABS    CONST UNTYP.           ASEG       201 
PAIN_L              ABS    CONST UNTYP.           ASEG       200 
PAOUT               ABS    CONST UNTYP.           ASEG       202 
PAOUT_H             ABS    CONST UNTYP.           ASEG       203 
PAOUT_L             ABS    CONST UNTYP.           ASEG       202 
PAREN               ABS    CONST UNTYP.           ASEG       206 
PAREN_H             ABS    CONST UNTYP.           ASEG       207 
PAREN_L             ABS    CONST UNTYP.           ASEG       206 
PASEL               ABS    CONST UNTYP.           ASEG       20A 
PASEL_H             ABS    CONST UNTYP.           ASEG       20B 
PASEL_L             ABS    CONST UNTYP.           ASEG       20A 
PBDIR               ABS    CONST UNTYP.           ASEG       224 
PBDIR_H             ABS    CONST UNTYP.           ASEG       225 
PBDIR_L             ABS    CONST UNTYP.           ASEG       224 
PBDS                ABS    CONST UNTYP.           ASEG       228 
PBDS_H              ABS    CONST UNTYP.           ASEG       229 
PBDS_L              ABS    CONST UNTYP.           ASEG       228 
PBIN                ABS    CONST UNTYP.           ASEG       220 
PBIN_H              ABS    CONST UNTYP.           ASEG       221 
PBIN_L              ABS    CONST UNTYP.           ASEG       220 
PBOUT               ABS    CONST UNTYP.           ASEG       222 
PBOUT_H             ABS    CONST UNTYP.           ASEG       223 
PBOUT_L             ABS    CONST UNTYP.           ASEG       222 
PBREN               ABS    CONST UNTYP.           ASEG       226 
PBREN_H             ABS    CONST UNTYP.           ASEG       227 
PBREN_L             ABS    CONST UNTYP.           ASEG       226 
PBSEL               ABS    CONST UNTYP.           ASEG       22A 
PBSEL_H             ABS    CONST UNTYP.           ASEG       22B 
PBSEL_L             ABS    CONST UNTYP.           ASEG       22A 
PCDIR               ABS    CONST UNTYP.           ASEG       244 
PCDIR_H             ABS    CONST UNTYP.           ASEG       245 
PCDIR_L             ABS    CONST UNTYP.           ASEG       244 
PCDS                ABS    CONST UNTYP.           ASEG       248 
PCDS_H              ABS    CONST UNTYP.           ASEG       249 
PCDS_L              ABS    CONST UNTYP.           ASEG       248 
PCIN                ABS    CONST UNTYP.           ASEG       240 
PCIN_H              ABS    CONST UNTYP.           ASEG       241 
PCIN_L              ABS    CONST UNTYP.           ASEG       240 
PCOUT               ABS    CONST UNTYP.           ASEG       242 
PCOUT_H             ABS    CONST UNTYP.           ASEG       243 
PCOUT_L             ABS    CONST UNTYP.           ASEG       242 
PCREN               ABS    CONST UNTYP.           ASEG       246 
PCREN_H             ABS    CONST UNTYP.           ASEG       247 
PCREN_L             ABS    CONST UNTYP.           ASEG       246 
PCSEL               ABS    CONST UNTYP.           ASEG       24A 
PCSEL_H             ABS    CONST UNTYP.           ASEG       24B 
PCSEL_L             ABS    CONST UNTYP.           ASEG       24A 
PDDIR               ABS    CONST UNTYP.           ASEG       264 
PDDIR_H             ABS    CONST UNTYP.           ASEG       265 
PDDIR_L             ABS    CONST UNTYP.           ASEG       264 
PDDS                ABS    CONST UNTYP.           ASEG       268 
PDDS_H              ABS    CONST UNTYP.           ASEG       269 
PDDS_L              ABS    CONST UNTYP.           ASEG       268 
PDIN                ABS    CONST UNTYP.           ASEG       260 
PDIN_H              ABS    CONST UNTYP.           ASEG       261 
PDIN_L              ABS    CONST UNTYP.           ASEG       260 
PDOUT               ABS    CONST UNTYP.           ASEG       262 
PDOUT_H             ABS    CONST UNTYP.           ASEG       263 
PDOUT_L             ABS    CONST UNTYP.           ASEG       262 
PDREN               ABS    CONST UNTYP.           ASEG       266 
PDREN_H             ABS    CONST UNTYP.           ASEG       267 
PDREN_L             ABS    CONST UNTYP.           ASEG       266 
PDSEL               ABS    CONST UNTYP.           ASEG       26A 
PDSEL_H             ABS    CONST UNTYP.           ASEG       26B 
PDSEL_L             ABS    CONST UNTYP.           ASEG       26A 
PJDIR               ABS    CONST UNTYP.           ASEG       324 
PJDIR_H             ABS    CONST UNTYP.           ASEG       325 
PJDIR_L             ABS    CONST UNTYP.           ASEG       324 
PJDS                ABS    CONST UNTYP.           ASEG       328 
PJDS_H              ABS    CONST UNTYP.           ASEG       329 
PJDS_L              ABS    CONST UNTYP.           ASEG       328 
PJIN                ABS    CONST UNTYP.           ASEG       320 
PJIN_H              ABS    CONST UNTYP.           ASEG       321 
PJIN_L              ABS    CONST UNTYP.           ASEG       320 
PJOUT               ABS    CONST UNTYP.           ASEG       322 
PJOUT_H             ABS    CONST UNTYP.           ASEG       323 
PJOUT_L             ABS    CONST UNTYP.           ASEG       322 
PJREN               ABS    CONST UNTYP.           ASEG       326 
PJREN_H             ABS    CONST UNTYP.           ASEG       327 
PJREN_L             ABS    CONST UNTYP.           ASEG       326 
PM5CTL0             ABS    CONST UNTYP.           ASEG       130 
PM5CTL0_H           ABS    CONST UNTYP.           ASEG       131 
PM5CTL0_L           ABS    CONST UNTYP.           ASEG       130 
PMAPCTL             ABS    CONST UNTYP.           ASEG       1C2 
PMAPCTL_H           ABS    CONST UNTYP.           ASEG       1C3 
PMAPCTL_L           ABS    CONST UNTYP.           ASEG       1C2 
PMAPKEYID           ABS    CONST UNTYP.           ASEG       1C0 
PMAPKEYID_H         ABS    CONST UNTYP.           ASEG       1C1 
PMAPKEYID_L         ABS    CONST UNTYP.           ASEG       1C0 
PMMCTL0             ABS    CONST UNTYP.           ASEG       120 
PMMCTL0_H           ABS    CONST UNTYP.           ASEG       121 
PMMCTL0_L           ABS    CONST UNTYP.           ASEG       120 
PMMCTL1             ABS    CONST UNTYP.           ASEG       122 
PMMCTL1_H           ABS    CONST UNTYP.           ASEG       123 
PMMCTL1_L           ABS    CONST UNTYP.           ASEG       122 
PMMIFG              ABS    CONST UNTYP.           ASEG       12C 
PMMIFG_H            ABS    CONST UNTYP.           ASEG       12D 
PMMIFG_L            ABS    CONST UNTYP.           ASEG       12C 
PMMRIE              ABS    CONST UNTYP.           ASEG       12E 
PMMRIE_H            ABS    CONST UNTYP.           ASEG       12F 
PMMRIE_L            ABS    CONST UNTYP.           ASEG       12E 
RCCTL0              ABS    CONST UNTYP.           ASEG       158 
RCCTL0_H            ABS    CONST UNTYP.           ASEG       159 
RCCTL0_L            ABS    CONST UNTYP.           ASEG       158 
REFCTL0             ABS    CONST UNTYP.           ASEG       1B0 
REFCTL0_H           ABS    CONST UNTYP.           ASEG       1B1 
REFCTL0_L           ABS    CONST UNTYP.           ASEG       1B0 
RES0                ABS    CONST UNTYP.           ASEG       4E4 
RES0_H              ABS    CONST UNTYP.           ASEG       4E5 
RES0_L              ABS    CONST UNTYP.           ASEG       4E4 
RES1                ABS    CONST UNTYP.           ASEG       4E6 
RES1_H              ABS    CONST UNTYP.           ASEG       4E7 
RES1_L              ABS    CONST UNTYP.           ASEG       4E6 
RES2                ABS    CONST UNTYP.           ASEG       4E8 
RES2_H              ABS    CONST UNTYP.           ASEG       4E9 
RES2_L              ABS    CONST UNTYP.           ASEG       4E8 
RES3                ABS    CONST UNTYP.           ASEG       4EA 
RES3_H              ABS    CONST UNTYP.           ASEG       4EB 
RES3_L              ABS    CONST UNTYP.           ASEG       4EA 
RESHI               ABS    CONST UNTYP.           ASEG       4CC 
RESHI_H             ABS    CONST UNTYP.           ASEG       4CD 
RESHI_L             ABS    CONST UNTYP.           ASEG       4CC 
RESLO               ABS    CONST UNTYP.           ASEG       4CA 
RESLO_H             ABS    CONST UNTYP.           ASEG       4CB 
RESLO_L             ABS    CONST UNTYP.           ASEG       4CA 
RTCADOWDAY          ABS    CONST UNTYP.           ASEG       4BA 
RTCADOWDAY_H        ABS    CONST UNTYP.           ASEG       4BB 
RTCADOWDAY_L        ABS    CONST UNTYP.           ASEG       4BA 
RTCAMINHR           ABS    CONST UNTYP.           ASEG       4B8 
RTCAMINHR_H         ABS    CONST UNTYP.           ASEG       4B9 
RTCAMINHR_L         ABS    CONST UNTYP.           ASEG       4B8 
RTCCTL01            ABS    CONST UNTYP.           ASEG       4A0 
RTCCTL01_H          ABS    CONST UNTYP.           ASEG       4A1 
RTCCTL01_L          ABS    CONST UNTYP.           ASEG       4A0 
RTCCTL23            ABS    CONST UNTYP.           ASEG       4A2 
RTCCTL23_H          ABS    CONST UNTYP.           ASEG       4A3 
RTCCTL23_L          ABS    CONST UNTYP.           ASEG       4A2 
RTCDATE             ABS    CONST UNTYP.           ASEG       4B4 
RTCDATE_H           ABS    CONST UNTYP.           ASEG       4B5 
RTCDATE_L           ABS    CONST UNTYP.           ASEG       4B4 
RTCIV               ABS    CONST UNTYP.           ASEG       4AE 
RTCPS               ABS    CONST UNTYP.           ASEG       4AC 
RTCPS0CTL           ABS    CONST UNTYP.           ASEG       4A8 
RTCPS0CTL_H         ABS    CONST UNTYP.           ASEG       4A9 
RTCPS0CTL_L         ABS    CONST UNTYP.           ASEG       4A8 
RTCPS1CTL           ABS    CONST UNTYP.           ASEG       4AA 
RTCPS1CTL_H         ABS    CONST UNTYP.           ASEG       4AB 
RTCPS1CTL_L         ABS    CONST UNTYP.           ASEG       4AA 
RTCPS_H             ABS    CONST UNTYP.           ASEG       4AD 
RTCPS_L             ABS    CONST UNTYP.           ASEG       4AC 
RTCTIM0             ABS    CONST UNTYP.           ASEG       4B0 
RTCTIM0_H           ABS    CONST UNTYP.           ASEG       4B1 
RTCTIM0_L           ABS    CONST UNTYP.           ASEG       4B0 
RTCTIM1             ABS    CONST UNTYP.           ASEG       4B2 
RTCTIM1_H           ABS    CONST UNTYP.           ASEG       4B3 
RTCTIM1_L           ABS    CONST UNTYP.           ASEG       4B2 
RTCYEAR             ABS    CONST UNTYP.           ASEG       4B6 
RTCYEAR_H           ABS    CONST UNTYP.           ASEG       4B7 
RTCYEAR_L           ABS    CONST UNTYP.           ASEG       4B6 
SFRIE1              ABS    CONST UNTYP.           ASEG       100 
SFRIE1_H            ABS    CONST UNTYP.           ASEG       101 
SFRIE1_L            ABS    CONST UNTYP.           ASEG       100 
SFRIFG1             ABS    CONST UNTYP.           ASEG       102 
SFRIFG1_H           ABS    CONST UNTYP.           ASEG       103 
SFRIFG1_L           ABS    CONST UNTYP.           ASEG       102 
SFRRPCR             ABS    CONST UNTYP.           ASEG       104 
SFRRPCR_H           ABS    CONST UNTYP.           ASEG       105 
SFRRPCR_L           ABS    CONST UNTYP.           ASEG       104 
SUMEXT              ABS    CONST UNTYP.           ASEG       4CE 
SUMEXT_H            ABS    CONST UNTYP.           ASEG       4CF 
SUMEXT_L            ABS    CONST UNTYP.           ASEG       4CE 
SVSMHCTL            ABS    CONST UNTYP.           ASEG       124 
SVSMHCTL_H          ABS    CONST UNTYP.           ASEG       125 
SVSMHCTL_L          ABS    CONST UNTYP.           ASEG       124 
SVSMIO              ABS    CONST UNTYP.           ASEG       128 
SVSMIO_H            ABS    CONST UNTYP.           ASEG       129 
SVSMIO_L            ABS    CONST UNTYP.           ASEG       128 
SVSMLCTL            ABS    CONST UNTYP.           ASEG       126 
SVSMLCTL_H          ABS    CONST UNTYP.           ASEG       127 
SVSMLCTL_L          ABS    CONST UNTYP.           ASEG       126 
SYSBERRIV           ABS    CONST UNTYP.           ASEG       198 
SYSBERRIV_H         ABS    CONST UNTYP.           ASEG       199 
SYSBERRIV_L         ABS    CONST UNTYP.           ASEG       198 
SYSBSLC             ABS    CONST UNTYP.           ASEG       182 
SYSBSLC_H           ABS    CONST UNTYP.           ASEG       183 
SYSBSLC_L           ABS    CONST UNTYP.           ASEG       182 
SYSCTL              ABS    CONST UNTYP.           ASEG       180 
SYSCTL_H            ABS    CONST UNTYP.           ASEG       181 
SYSCTL_L            ABS    CONST UNTYP.           ASEG       180 
SYSJMBC             ABS    CONST UNTYP.           ASEG       186 
SYSJMBC_H           ABS    CONST UNTYP.           ASEG       187 
SYSJMBC_L           ABS    CONST UNTYP.           ASEG       186 
SYSJMBI0            ABS    CONST UNTYP.           ASEG       188 
SYSJMBI0_H          ABS    CONST UNTYP.           ASEG       189 
SYSJMBI0_L          ABS    CONST UNTYP.           ASEG       188 
SYSJMBI1            ABS    CONST UNTYP.           ASEG       18A 
SYSJMBI1_H          ABS    CONST UNTYP.           ASEG       18B 
SYSJMBI1_L          ABS    CONST UNTYP.           ASEG       18A 
SYSJMBO0            ABS    CONST UNTYP.           ASEG       18C 
SYSJMBO0_H          ABS    CONST UNTYP.           ASEG       18D 
SYSJMBO0_L          ABS    CONST UNTYP.           ASEG       18C 
SYSJMBO1            ABS    CONST UNTYP.           ASEG       18E 
SYSJMBO1_H          ABS    CONST UNTYP.           ASEG       18F 
SYSJMBO1_L          ABS    CONST UNTYP.           ASEG       18E 
SYSRSTIV            ABS    CONST UNTYP.           ASEG       19E 
SYSRSTIV_H          ABS    CONST UNTYP.           ASEG       19F 
SYSRSTIV_L          ABS    CONST UNTYP.           ASEG       19E 
SYSSNIV             ABS    CONST UNTYP.           ASEG       19C 
SYSSNIV_H           ABS    CONST UNTYP.           ASEG       19D 
SYSSNIV_L           ABS    CONST UNTYP.           ASEG       19C 
SYSUNIV             ABS    CONST UNTYP.           ASEG       19A 
SYSUNIV_H           ABS    CONST UNTYP.           ASEG       19B 
SYSUNIV_L           ABS    CONST UNTYP.           ASEG       19A 
TA0CCR0             ABS    CONST UNTYP.           ASEG       352 
TA0CCR1             ABS    CONST UNTYP.           ASEG       354 
TA0CCR2             ABS    CONST UNTYP.           ASEG       356 
TA0CCR3             ABS    CONST UNTYP.           ASEG       358 
TA0CCR4             ABS    CONST UNTYP.           ASEG       35A 
TA0CCTL0            ABS    CONST UNTYP.           ASEG       342 
TA0CCTL1            ABS    CONST UNTYP.           ASEG       344 
TA0CCTL2            ABS    CONST UNTYP.           ASEG       346 
TA0CCTL3            ABS    CONST UNTYP.           ASEG       348 
TA0CCTL4            ABS    CONST UNTYP.           ASEG       34A 
TA0CTL              ABS    CONST UNTYP.           ASEG       340 
TA0EX0              ABS    CONST UNTYP.           ASEG       360 
TA0IV               ABS    CONST UNTYP.           ASEG       36E 
TA0R                ABS    CONST UNTYP.           ASEG       350 
TA1CCR0             ABS    CONST UNTYP.           ASEG       392 
TA1CCR1             ABS    CONST UNTYP.           ASEG       394 
TA1CCR2             ABS    CONST UNTYP.           ASEG       396 
TA1CCTL0            ABS    CONST UNTYP.           ASEG       382 
TA1CCTL1            ABS    CONST UNTYP.           ASEG       384 
TA1CCTL2            ABS    CONST UNTYP.           ASEG       386 
TA1CTL              ABS    CONST UNTYP.           ASEG       380 
TA1EX0              ABS    CONST UNTYP.           ASEG       3A0 
TA1IV               ABS    CONST UNTYP.           ASEG       3AE 
TA1R                ABS    CONST UNTYP.           ASEG       390 
TA2CCR0             ABS    CONST UNTYP.           ASEG       412 
TA2CCR1             ABS    CONST UNTYP.           ASEG       414 
TA2CCR2             ABS    CONST UNTYP.           ASEG       416 
TA2CCTL0            ABS    CONST UNTYP.           ASEG       402 
TA2CCTL1            ABS    CONST UNTYP.           ASEG       404 
TA2CCTL2            ABS    CONST UNTYP.           ASEG       406 
TA2CTL              ABS    CONST UNTYP.           ASEG       400 
TA2EX0              ABS    CONST UNTYP.           ASEG       420 
TA2IV               ABS    CONST UNTYP.           ASEG       42E 
TA2R                ABS    CONST UNTYP.           ASEG       410 
TB0CCR0             ABS    CONST UNTYP.           ASEG       3D2 
TB0CCR1             ABS    CONST UNTYP.           ASEG       3D4 
TB0CCR2             ABS    CONST UNTYP.           ASEG       3D6 
TB0CCR3             ABS    CONST UNTYP.           ASEG       3D8 
TB0CCR4             ABS    CONST UNTYP.           ASEG       3DA 
TB0CCR5             ABS    CONST UNTYP.           ASEG       3DC 
TB0CCR6             ABS    CONST UNTYP.           ASEG       3DE 
TB0CCTL0            ABS    CONST UNTYP.           ASEG       3C2 
TB0CCTL1            ABS    CONST UNTYP.           ASEG       3C4 
TB0CCTL2            ABS    CONST UNTYP.           ASEG       3C6 
TB0CCTL3            ABS    CONST UNTYP.           ASEG       3C8 
TB0CCTL4            ABS    CONST UNTYP.           ASEG       3CA 
TB0CCTL5            ABS    CONST UNTYP.           ASEG       3CC 
TB0CCTL6            ABS    CONST UNTYP.           ASEG       3CE 
TB0CTL              ABS    CONST UNTYP.           ASEG       3C0 
TB0EX0              ABS    CONST UNTYP.           ASEG       3E0 
TB0IV               ABS    CONST UNTYP.           ASEG       3EE 
TB0R                ABS    CONST UNTYP.           ASEG       3D0 
TICKS_ISR           REL    CONST PUB UNTYP.       CODE       D8 
TICKS_ISR_1         REL    CONST UNTYP.           CODE       106 
TICKS_ISR_2         REL    CONST UNTYP.           CODE       126 
UCA0ABCTL           ABS    CONST UNTYP.           ASEG       5D0 
UCA0BRW             ABS    CONST UNTYP.           ASEG       5C6 
UCA0BRW_H           ABS    CONST UNTYP.           ASEG       5C7 
UCA0BRW_L           ABS    CONST UNTYP.           ASEG       5C6 
UCA0CTLW0           ABS    CONST UNTYP.           ASEG       5C0 
UCA0CTLW0_H         ABS    CONST UNTYP.           ASEG       5C1 
UCA0CTLW0_L         ABS    CONST UNTYP.           ASEG       5C0 
UCA0ICTL            ABS    CONST UNTYP.           ASEG       5DC 
UCA0ICTL_H          ABS    CONST UNTYP.           ASEG       5DD 
UCA0ICTL_L          ABS    CONST UNTYP.           ASEG       5DC 
UCA0IRCTL           ABS    CONST UNTYP.           ASEG       5D2 
UCA0IRCTL_H         ABS    CONST UNTYP.           ASEG       5D3 
UCA0IRCTL_L         ABS    CONST UNTYP.           ASEG       5D2 
UCA0IV              ABS    CONST UNTYP.           ASEG       5DE 
UCA0MCTL            ABS    CONST UNTYP.           ASEG       5C8 
UCA0RXBUF           ABS    CONST UNTYP.           ASEG       5CC 
UCA0STAT            ABS    CONST UNTYP.           ASEG       5CA 
UCA0TXBUF           ABS    CONST UNTYP.           ASEG       5CE 
UCA1ABCTL           ABS    CONST UNTYP.           ASEG       610 
UCA1BRW             ABS    CONST UNTYP.           ASEG       606 
UCA1BRW_H           ABS    CONST UNTYP.           ASEG       607 
UCA1BRW_L           ABS    CONST UNTYP.           ASEG       606 
UCA1CTLW0           ABS    CONST UNTYP.           ASEG       600 
UCA1CTLW0_H         ABS    CONST UNTYP.           ASEG       601 
UCA1CTLW0_L         ABS    CONST UNTYP.           ASEG       600 
UCA1ICTL            ABS    CONST UNTYP.           ASEG       61C 
UCA1ICTL_H          ABS    CONST UNTYP.           ASEG       61D 
UCA1ICTL_L          ABS    CONST UNTYP.           ASEG       61C 
UCA1IRCTL           ABS    CONST UNTYP.           ASEG       612 
UCA1IRCTL_H         ABS    CONST UNTYP.           ASEG       613 
UCA1IRCTL_L         ABS    CONST UNTYP.           ASEG       612 
UCA1IV              ABS    CONST UNTYP.           ASEG       61E 
UCA1MCTL            ABS    CONST UNTYP.           ASEG       608 
UCA1RXBUF           ABS    CONST UNTYP.           ASEG       60C 
UCA1STAT            ABS    CONST UNTYP.           ASEG       60A 
UCA1TXBUF           ABS    CONST UNTYP.           ASEG       60E 
UCB0BRW             ABS    CONST UNTYP.           ASEG       5E6 
UCB0BRW_H           ABS    CONST UNTYP.           ASEG       5E7 
UCB0BRW_L           ABS    CONST UNTYP.           ASEG       5E6 
UCB0CTLW0           ABS    CONST UNTYP.           ASEG       5E0 
UCB0CTLW0_H         ABS    CONST UNTYP.           ASEG       5E1 
UCB0CTLW0_L         ABS    CONST UNTYP.           ASEG       5E0 
UCB0I2COA           ABS    CONST UNTYP.           ASEG       5F0 
UCB0I2COA_H         ABS    CONST UNTYP.           ASEG       5F1 
UCB0I2COA_L         ABS    CONST UNTYP.           ASEG       5F0 
UCB0I2CSA           ABS    CONST UNTYP.           ASEG       5F2 
UCB0I2CSA_H         ABS    CONST UNTYP.           ASEG       5F3 
UCB0I2CSA_L         ABS    CONST UNTYP.           ASEG       5F2 
UCB0ICTL            ABS    CONST UNTYP.           ASEG       5FC 
UCB0ICTL_H          ABS    CONST UNTYP.           ASEG       5FD 
UCB0ICTL_L          ABS    CONST UNTYP.           ASEG       5FC 
UCB0IV              ABS    CONST UNTYP.           ASEG       5FE 
UCB0RXBUF           ABS    CONST UNTYP.           ASEG       5EC 
UCB0STAT            ABS    CONST UNTYP.           ASEG       5EA 
UCB0TXBUF           ABS    CONST UNTYP.           ASEG       5EE 
UCB1BRW             ABS    CONST UNTYP.           ASEG       626 
UCB1BRW_H           ABS    CONST UNTYP.           ASEG       627 
UCB1BRW_L           ABS    CONST UNTYP.           ASEG       626 
UCB1CTLW0           ABS    CONST UNTYP.           ASEG       620 
UCB1CTLW0_H         ABS    CONST UNTYP.           ASEG       621 
UCB1CTLW0_L         ABS    CONST UNTYP.           ASEG       620 
UCB1I2COA           ABS    CONST UNTYP.           ASEG       630 
UCB1I2COA_H         ABS    CONST UNTYP.           ASEG       631 
UCB1I2COA_L         ABS    CONST UNTYP.           ASEG       630 
UCB1I2CSA           ABS    CONST UNTYP.           ASEG       632 
UCB1I2CSA_H         ABS    CONST UNTYP.           ASEG       633 
UCB1I2CSA_L         ABS    CONST UNTYP.           ASEG       632 
UCB1ICTL            ABS    CONST UNTYP.           ASEG       63C 
UCB1ICTL_H          ABS    CONST UNTYP.           ASEG       63D 
UCB1ICTL_L          ABS    CONST UNTYP.           ASEG       63C 
UCB1IV              ABS    CONST UNTYP.           ASEG       63E 
UCB1RXBUF           ABS    CONST UNTYP.           ASEG       62C 
UCB1STAT            ABS    CONST UNTYP.           ASEG       62A 
UCB1TXBUF           ABS    CONST UNTYP.           ASEG       62E 
UCSCTL0             ABS    CONST UNTYP.           ASEG       160 
UCSCTL0_H           ABS    CONST UNTYP.           ASEG       161 
UCSCTL0_L           ABS    CONST UNTYP.           ASEG       160 
UCSCTL1             ABS    CONST UNTYP.           ASEG       162 
UCSCTL1_H           ABS    CONST UNTYP.           ASEG       163 
UCSCTL1_L           ABS    CONST UNTYP.           ASEG       162 
UCSCTL2             ABS    CONST UNTYP.           ASEG       164 
UCSCTL2_H           ABS    CONST UNTYP.           ASEG       165 
UCSCTL2_L           ABS    CONST UNTYP.           ASEG       164 
UCSCTL3             ABS    CONST UNTYP.           ASEG       166 
UCSCTL3_H           ABS    CONST UNTYP.           ASEG       167 
UCSCTL3_L           ABS    CONST UNTYP.           ASEG       166 
UCSCTL4             ABS    CONST UNTYP.           ASEG       168 
UCSCTL4_H           ABS    CONST UNTYP.           ASEG       169 
UCSCTL4_L           ABS    CONST UNTYP.           ASEG       168 
UCSCTL5             ABS    CONST UNTYP.           ASEG       16A 
UCSCTL5_H           ABS    CONST UNTYP.           ASEG       16B 
UCSCTL5_L           ABS    CONST UNTYP.           ASEG       16A 
UCSCTL6             ABS    CONST UNTYP.           ASEG       16C 
UCSCTL6_H           ABS    CONST UNTYP.           ASEG       16D 
UCSCTL6_L           ABS    CONST UNTYP.           ASEG       16C 
UCSCTL7             ABS    CONST UNTYP.           ASEG       16E 
UCSCTL7_H           ABS    CONST UNTYP.           ASEG       16F 
UCSCTL7_L           ABS    CONST UNTYP.           ASEG       16E 
UCSCTL8             ABS    CONST UNTYP.           ASEG       170 
UCSCTL8_H           ABS    CONST UNTYP.           ASEG       171 
UCSCTL8_L           ABS    CONST UNTYP.           ASEG       170 
USBCNF              ABS    CONST UNTYP.           ASEG       902 
USBCNF_H            ABS    CONST UNTYP.           ASEG       903 
USBCNF_L            ABS    CONST UNTYP.           ASEG       902 
USBCTL              ABS    CONST UNTYP.           ASEG       93C 
USBFN               ABS    CONST UNTYP.           ASEG       93A 
USBFN_H             ABS    CONST UNTYP.           ASEG       93B 
USBFN_L             ABS    CONST UNTYP.           ASEG       93A 
USBFUNADR           ABS    CONST UNTYP.           ASEG       93F 
USBIE               ABS    CONST UNTYP.           ASEG       93D 
USBIEP0BUF          ABS    CONST UNTYP.           ASEG       2378 
USBIEPBBAX_1        ABS    CONST UNTYP.           ASEG       23C9 
USBIEPBBAX_2        ABS    CONST UNTYP.           ASEG       23D1 
USBIEPBBAX_3        ABS    CONST UNTYP.           ASEG       23D9 
USBIEPBBAX_4        ABS    CONST UNTYP.           ASEG       23E1 
USBIEPBBAX_5        ABS    CONST UNTYP.           ASEG       23E9 
USBIEPBBAX_6        ABS    CONST UNTYP.           ASEG       23F1 
USBIEPBBAX_7        ABS    CONST UNTYP.           ASEG       23F9 
USBIEPBBAY_1        ABS    CONST UNTYP.           ASEG       23CD 
USBIEPBBAY_2        ABS    CONST UNTYP.           ASEG       23D5 
USBIEPBBAY_3        ABS    CONST UNTYP.           ASEG       23DD 
USBIEPBBAY_4        ABS    CONST UNTYP.           ASEG       23E5 
USBIEPBBAY_5        ABS    CONST UNTYP.           ASEG       23ED 
USBIEPBBAY_6        ABS    CONST UNTYP.           ASEG       23F5 
USBIEPBBAY_7        ABS    CONST UNTYP.           ASEG       23FD 
USBIEPBCTX_1        ABS    CONST UNTYP.           ASEG       23CA 
USBIEPBCTX_2        ABS    CONST UNTYP.           ASEG       23D2 
USBIEPBCTX_3        ABS    CONST UNTYP.           ASEG       23DA 
USBIEPBCTX_4        ABS    CONST UNTYP.           ASEG       23E2 
USBIEPBCTX_5        ABS    CONST UNTYP.           ASEG       23EA 
USBIEPBCTX_6        ABS    CONST UNTYP.           ASEG       23F2 
USBIEPBCTX_7        ABS    CONST UNTYP.           ASEG       23FA 
USBIEPBCTY_1        ABS    CONST UNTYP.           ASEG       23CE 
USBIEPBCTY_2        ABS    CONST UNTYP.           ASEG       23D6 
USBIEPBCTY_3        ABS    CONST UNTYP.           ASEG       23DE 
USBIEPBCTY_4        ABS    CONST UNTYP.           ASEG       23E6 
USBIEPBCTY_5        ABS    CONST UNTYP.           ASEG       23EE 
USBIEPBCTY_6        ABS    CONST UNTYP.           ASEG       23F6 
USBIEPBCTY_7        ABS    CONST UNTYP.           ASEG       23FE 
USBIEPCNF_0         ABS    CONST UNTYP.           ASEG       920 
USBIEPCNF_1         ABS    CONST UNTYP.           ASEG       23C8 
USBIEPCNF_2         ABS    CONST UNTYP.           ASEG       23D0 
USBIEPCNF_3         ABS    CONST UNTYP.           ASEG       23D8 
USBIEPCNF_4         ABS    CONST UNTYP.           ASEG       23E0 
USBIEPCNF_5         ABS    CONST UNTYP.           ASEG       23E8 
USBIEPCNF_6         ABS    CONST UNTYP.           ASEG       23F0 
USBIEPCNF_7         ABS    CONST UNTYP.           ASEG       23F8 
USBIEPCNT_0         ABS    CONST UNTYP.           ASEG       921 
USBIEPIE            ABS    CONST UNTYP.           ASEG       92E 
USBIEPIFG           ABS    CONST UNTYP.           ASEG       930 
USBIEPSIZXY_1       ABS    CONST UNTYP.           ASEG       23CF 
USBIEPSIZXY_2       ABS    CONST UNTYP.           ASEG       23D7 
USBIEPSIZXY_3       ABS    CONST UNTYP.           ASEG       23DF 
USBIEPSIZXY_4       ABS    CONST UNTYP.           ASEG       23E7 
USBIEPSIZXY_5       ABS    CONST UNTYP.           ASEG       23EF 
USBIEPSIZXY_6       ABS    CONST UNTYP.           ASEG       23F7 
USBIEPSIZXY_7       ABS    CONST UNTYP.           ASEG       23FF 
USBIFG              ABS    CONST UNTYP.           ASEG       93E 
USBKEYID            ABS    CONST UNTYP.           ASEG       900 
USBKEYID_H          ABS    CONST UNTYP.           ASEG       901 
USBKEYID_L          ABS    CONST UNTYP.           ASEG       900 
USBMAINT            ABS    CONST UNTYP.           ASEG       936 
USBMAINT_H          ABS    CONST UNTYP.           ASEG       937 
USBMAINT_L          ABS    CONST UNTYP.           ASEG       936 
USBOEP0BUF          ABS    CONST UNTYP.           ASEG       2370 
USBOEPBBAX_1        ABS    CONST UNTYP.           ASEG       2389 
USBOEPBBAX_2        ABS    CONST UNTYP.           ASEG       2391 
USBOEPBBAX_3        ABS    CONST UNTYP.           ASEG       2399 
USBOEPBBAX_4        ABS    CONST UNTYP.           ASEG       23A1 
USBOEPBBAX_5        ABS    CONST UNTYP.           ASEG       23A9 
USBOEPBBAX_6        ABS    CONST UNTYP.           ASEG       23B1 
USBOEPBBAX_7        ABS    CONST UNTYP.           ASEG       23B9 
USBOEPBBAY_1        ABS    CONST UNTYP.           ASEG       238D 
USBOEPBBAY_2        ABS    CONST UNTYP.           ASEG       2395 
USBOEPBBAY_3        ABS    CONST UNTYP.           ASEG       239D 
USBOEPBBAY_4        ABS    CONST UNTYP.           ASEG       23A5 
USBOEPBBAY_5        ABS    CONST UNTYP.           ASEG       23AD 
USBOEPBBAY_6        ABS    CONST UNTYP.           ASEG       23B5 
USBOEPBBAY_7        ABS    CONST UNTYP.           ASEG       23BD 
USBOEPBCTX_1        ABS    CONST UNTYP.           ASEG       238A 
USBOEPBCTX_2        ABS    CONST UNTYP.           ASEG       2392 
USBOEPBCTX_3        ABS    CONST UNTYP.           ASEG       239A 
USBOEPBCTX_4        ABS    CONST UNTYP.           ASEG       23A2 
USBOEPBCTX_5        ABS    CONST UNTYP.           ASEG       23AA 
USBOEPBCTX_6        ABS    CONST UNTYP.           ASEG       23B2 
USBOEPBCTX_7        ABS    CONST UNTYP.           ASEG       23BA 
USBOEPBCTY_1        ABS    CONST UNTYP.           ASEG       238E 
USBOEPBCTY_2        ABS    CONST UNTYP.           ASEG       2396 
USBOEPBCTY_3        ABS    CONST UNTYP.           ASEG       239E 
USBOEPBCTY_4        ABS    CONST UNTYP.           ASEG       23A6 
USBOEPBCTY_5        ABS    CONST UNTYP.           ASEG       23AE 
USBOEPBCTY_6        ABS    CONST UNTYP.           ASEG       23B6 
USBOEPBCTY_7        ABS    CONST UNTYP.           ASEG       23BE 
USBOEPCNF_0         ABS    CONST UNTYP.           ASEG       922 
USBOEPCNF_1         ABS    CONST UNTYP.           ASEG       2388 
USBOEPCNF_2         ABS    CONST UNTYP.           ASEG       2390 
USBOEPCNF_3         ABS    CONST UNTYP.           ASEG       2398 
USBOEPCNF_4         ABS    CONST UNTYP.           ASEG       23A0 
USBOEPCNF_5         ABS    CONST UNTYP.           ASEG       23A8 
USBOEPCNF_6         ABS    CONST UNTYP.           ASEG       23B0 
USBOEPCNF_7         ABS    CONST UNTYP.           ASEG       23B8 
USBOEPCNT_0         ABS    CONST UNTYP.           ASEG       923 
USBOEPIE            ABS    CONST UNTYP.           ASEG       92F 
USBOEPIFG           ABS    CONST UNTYP.           ASEG       931 
USBOEPSIZXY_1       ABS    CONST UNTYP.           ASEG       238F 
USBOEPSIZXY_2       ABS    CONST UNTYP.           ASEG       2397 
USBOEPSIZXY_3       ABS    CONST UNTYP.           ASEG       239F 
USBOEPSIZXY_4       ABS    CONST UNTYP.           ASEG       23A7 
USBOEPSIZXY_5       ABS    CONST UNTYP.           ASEG       23AF 
USBOEPSIZXY_6       ABS    CONST UNTYP.           ASEG       23B7 
USBOEPSIZXY_7       ABS    CONST UNTYP.           ASEG       23BF 
USBPHYCTL           ABS    CONST UNTYP.           ASEG       904 
USBPHYCTL_H         ABS    CONST UNTYP.           ASEG       905 
USBPHYCTL_L         ABS    CONST UNTYP.           ASEG       904 
USBPLLCTL           ABS    CONST UNTYP.           ASEG       910 
USBPLLCTL_H         ABS    CONST UNTYP.           ASEG       911 
USBPLLCTL_L         ABS    CONST UNTYP.           ASEG       910 
USBPLLDIVB          ABS    CONST UNTYP.           ASEG       912 
USBPLLDIVB_H        ABS    CONST UNTYP.           ASEG       913 
USBPLLDIVB_L        ABS    CONST UNTYP.           ASEG       912 
USBPLLIR            ABS    CONST UNTYP.           ASEG       914 
USBPLLIR_H          ABS    CONST UNTYP.           ASEG       915 
USBPLLIR_L          ABS    CONST UNTYP.           ASEG       914 
USBPWRCTL           ABS    CONST UNTYP.           ASEG       908 
USBPWRCTL_H         ABS    CONST UNTYP.           ASEG       909 
USBPWRCTL_L         ABS    CONST UNTYP.           ASEG       908 
USBSTABUFF          ABS    CONST UNTYP.           ASEG       1C00 
USBSUBLK            ABS    CONST UNTYP.           ASEG       2380 
USBTOPBUFF          ABS    CONST UNTYP.           ASEG       236F 
USBTSREG            ABS    CONST UNTYP.           ASEG       938 
USBTSREG_H          ABS    CONST UNTYP.           ASEG       939 
USBTSREG_L          ABS    CONST UNTYP.           ASEG       938 
USBVECINT           ABS    CONST UNTYP.           ASEG       932 
USBVECINT_H         ABS    CONST UNTYP.           ASEG       933 
USBVECINT_L         ABS    CONST UNTYP.           ASEG       932 
WDTCTL              ABS    CONST UNTYP.           ASEG       15C 
WDTCTL_H            ABS    CONST UNTYP.           ASEG       15D 
WDTCTL_L            ABS    CONST UNTYP.           ASEG       15C 
WDT_VEC             COMMON CONST UNTYP.           INTVEC     72 


##############################
#          CRC:A659          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 332         #
##############################



