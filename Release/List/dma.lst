###############################################################################
#                                                                             #
#                                                       06/Jun/2016  16:42:22 #
# IAR C/C++ Compiler V5.50.1.20465/W32, Evaluation edition for MSP430         #
# Copyright 1996-2012 IAR Systems AB.                                         #
#                                                                             #
#    __rt_version  =  3                                                       #
#    __double_size =  32                                                      #
#    __reg_r4      =  free                                                    #
#    __reg_r5      =  free                                                    #
#    __pic         =  no                                                      #
#    __core        =  430X                                                    #
#    __data_model  =  large                                                   #
#    Source file   =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Drivers\src\dma.c                                #
#    Command line  =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Drivers\src\dma.c -D NDEBUG -D RAM_VECTOR -lC    #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Release\List\ -lA C:\Users\615\Desktop\MSP430\MS #
#                     P430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Release\List\ -o        #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Release\Obj\ -D__MSP430F5529__ -e --double=32    #
#                     --dlib_config "D:\Program Files (x86)\IAR               #
#                     Systems\Embedded Workbench 6.4                          #
#                     Evaluation\430\LIB\DLIB\dl430xlfn.h" -I                 #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\ -I C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Ê #
#                     ý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\inc\ -I                       #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Drivers\src\ -I C:\Users\615\Desktop\MSP430\MSP4 #
#                     30F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\src\USB\ -I       #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Drivers\src\USB\USB_config\ -I                   #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Drivers\src\USB\USB_User\ -I                     #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Drivers\srcUSB\USB_API\USB_CDC_API\ -I           #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Drivers\src\USB\USB_API\USB_HID_API\ -I          #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Drivers\src\USB\USB_API\USB_MSC_API\ -I          #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\HardWare\KEY\ -I C:\Users\615\Desktop\MSP430\MSP #
#                     430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\HardWare\LED\ -I         #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\HardWare\12864\ -I C:\Users\615\Desktop\MSP430\M #
#                     SP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\HardWare\oled\ -I      #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\HardWare\mpu6050\inc\ -I                         #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\HardWare\mpu6050\src\ -I                         #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\HardWare\nokia5110\inc\ -I                       #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\HardWare\nokia5110\src\ -I                       #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\HardWare\LQ_1.8_TFT\ -I                          #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\HardWare\LCD_API\ -I                             #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\HardWare\2.2TFT\ -I                              #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\HardWare\delay\ -I C:\Users\615\Desktop\MSP430\M #
#                     SP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\System\ -I             #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\System\inc\ -I C:\Users\615\Desktop\MSP430\MSP43 #
#                     0F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\System\src\ -I             #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\User\ -I C:\Users\615\Desktop\MSP430\MSP430F5529 #
#                     ¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\User\USER\ -I                    #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Lib\UCOSII\CONFIG\ -I                            #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Lib\uCOSII\App\ -I C:\Users\615\Desktop\MSP430\M #
#                     SP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Lib\uCOSII\CONFIHG\    #
#                     -I C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ #
#                     \¹¤³ÌÄ£°å\Lib\uCOSII\PORT\ -I                           #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Lib\UCOSII\CORE\ -I                              #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Lib\FatFs\ -I C:\Users\615\Desktop\MSP430\MSP430 #
#                     F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Lib\FatFs\option\           #
#                     --core=430X --data_model=large -Oh --multiplier=32      #
#                     --multiplier_location=4C0 --hw_workaround=CPU40         #
#    List file     =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Release\List\dma.lst                             #
#    Object file   =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤ #
#                     ³ÌÄ£°å\Release\Obj\dma.r43                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\src\dma.c
      1          #include "dma.h"

   \                                 In  segment DATA16_AN, at 0x500
   \   union <unnamed> __data16 _A_DMACTL0_L
   \                     _A_DMACTL0_L:
   \   000000                DS8 2
      2          

   \                                 In  segment DATA20_C, align 2, align-sorted
      3          const DMA_MemMapPtr      DMAX = DMA_BASE_PTR;
   \                     DMAX:
   \   000000   00050000     DC32 500H
      4          /*******************************************************************************
      5          *  º¯ÊýÃû³Æ£ºDMA_Init(DMA_CHn dma_ch, void *SADDR, void *DADDR, DMA_Trigger Trigger, uint16_t count, uint16_t config)
      6          *  ¹¦ÄÜËµÃ÷£º³õÊ¼»¯Ò»¸öDMAÍ¨µÀ
      7          *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch             :DMAÍ¨µÀ
      8                       void *SADDR                :DMA´«ÊäÔ´µØÖ·
      9                       void *DADDR                :DMA´«ÊäÄ¿µÄµØÖ·
     10                       DMA_Trigger Trigger        :DMA´«Êä´¥·¢Ìõ¼þ
     11                       uint16_t count               :DMA´«Êä´ÎÊý
     12                       uint16_t config              :DMA´«ÊäÅäÖÃ
     13          *  º¯Êý·µ»Ø£ºÎÞ
     14          *  Ê¹ÓÃÊ¾Àý£º DMA_Init(DMA_CH2, &Sdata, &DData,DMATSEL_DMA_REQ,255,  DMA_SRCAddr_KeepOn|DMA_DSTAddr_KeepOn|DMA_WORD|DMA_Single|DMA_Edge);
     15                                 //Í¨µÀ2£¬Ô´µØÖ·£¬Ä¿µÄµØÖ·£¬´¥·¢Ô´£¬´«Êä255¸ö×Ö£¬Ô´µØÖ·²»±ä£¬Ä¿µÄµØÖ·²»±ä£¬×Ö´«Êä£¬µ¥´Î´¥·¢£¬±ßÑØ´¥·¢
     16          ********************************************************************************/

   \                                 In  segment CODE, align 2
     17          void DMA_Init(DMA_CHn dma_ch, void *SADDR, void *DADDR, DMA_Trigger Trigger, uint16_t count, uint16_t config)
   \                     DMA_Init:
     18          { 
   \   000000   5B14         PUSHM.A #0x6, R11
   \   000002   16411C00     MOV.W   0x1c(SP), R6
   \   000006   1A411E00     MOV.W   0x1e(SP), R10
     19            DMAX->CHX[dma_ch].EN = RESET;                          //¹Ø±ÕDMAÄ£¿é
   \   00000A   484C         MOV.B   R12, R8
   \   00000C   480E         RLAM.A  #0x4, R8
   \   00000E   CB08         MOVA    R8, R11
   \   000010   A8000005     ADDA    #0x500, R8
   \   000014   B8C010001000 BIC.W   #0x10, 0x10(R8)
     20            DMAX->CHX[dma_ch].DA = (uint32_t)DADDR;                  //ÉèÖÃÄ¿µÄµØÖ·
   \   00001A   0E14         PUSHM.A #0x1, R14
   \   00001C   1817         POPM.W  #0x2, R9
   \   00001E   CE0B         MOVA    R11, R14
   \   000020   AE000005     ADDA    #0x500, R14
   \   000024   8E481600     MOV.W   R8, 0x16(R14)
   \   000028   8E491800     MOV.W   R9, 0x18(R14)
     21            DMAX->CHX[dma_ch].SA = (uint32_t)SADDR;                  //ÉèÖÃÔ´µØÖ·
   \   00002C   0D14         PUSHM.A #0x1, R13
   \   00002E   1817         POPM.W  #0x2, R9
   \   000030   CE0B         MOVA    R11, R14
   \   000032   AE000005     ADDA    #0x500, R14
   \   000036   8E481200     MOV.W   R8, 0x12(R14)
   \   00003A   8E491400     MOV.W   R9, 0x14(R14)
     22            DMAX->CHX[dma_ch].SZ = count;                          //ÉèÖÃÐ´ÈëÊý¾Ý´óÐ¡
   \   00003E   CE0B         MOVA    R11, R14
   \   000040   AE000005     ADDA    #0x500, R14
   \   000044   8E461A00     MOV.W   R6, 0x1a(R14)
     23            
     24            //DMAX->TSSEL[dma_ch] = Trigger;                         //ÕâÑùÐ´»áÓÐÎÊÌâ£¬²»ÖªµÀÎªÊ²Ã´£¡
     25            if((dma_ch%2) == 0)
   \   000048   4E4C         MOV.B   R12, R14
   \   00004A   5E03         RRUM.W  #0x1, R14
   \   00004C   0E5E         RLA.W   R14
   \   00004E   5CB3         BIT.B   #0x1, R12
   \   000050   052C         JC      ??DMA_Init_0
     26            {
     27             *(&DMACTL0 + (dma_ch/2)) &= 0xFF00;      //ÏÈÇå³ý´¥·¢Ô´
   \   000052   BEF000FF0005 AND.W   #0xff00, 0x500(R14)
     28             *(&DMACTL0 + (dma_ch/2)) |= Trigger;     //ÔÙÉèÖÃ´¥·¢Ô´
   \   000058   4F4F         MOV.B   R15, R15
   \   00005A   053C         JMP     ??DMA_Init_1
     29            }
     30            else
     31            {
     32              *(&DMACTL0 + (dma_ch/2)) &= 0x00FF;
   \                     ??DMA_Init_0:
   \   00005C   BEF0FF000005 AND.W   #0xff, 0x500(R14)
     33              *(&DMACTL0 + (dma_ch/2)) |= Trigger<<8;
   \   000062   4F4F         MOV.B   R15, R15
   \   000064   8F10         SWPB    R15
   \                     ??DMA_Init_1:
   \   000066   8EDF0005     BIS.W   R15, 0x500(R14)
     34            }
     35            DMAX->CHX[dma_ch].CTL = config;                       //ÅäÖÃDMAÄ£¿é
   \   00006A   CF0B         MOVA    R11, R15
   \   00006C   AF000005     ADDA    #0x500, R15
   \   000070   8F4A1000     MOV.W   R10, 0x10(R15)
     36            DMAX->CHX[dma_ch].EN = SET;                           //Ê¹ÄÜDMAÄ£¿é
   \   000074   AB000005     ADDA    #0x500, R11
   \   000078   BBD010001000 BIS.W   #0x10, 0x10(R11)
     37          }
   \   00007E   5616         POPM.A  #0x6, R11
   \   000080   1001         RETA
   \   000082                REQUIRE _A_DMACTL0_L
     38          /*******************************************************************************
     39          *  º¯ÊýÃû³Æ£ºDMA_Cmd  (DMA_CHn dma_ch,BOOL State)
     40          *  ¹¦ÄÜËµÃ÷£ºDMAÊ¹ÄÜ»ò½ûÖ¹
     41          *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch     :DMA´«ÊäÍ¨µÀ
     42                       STATUS State       :DMAÊÇ·ñÊ¹ÄÜ
     43          *  º¯Êý·µ»Ø£ºÎÞ
     44          *  Ê¹ÓÃÊ¾Àý£ºDMA_Cmd  (DMA_CH1,ENABLE);  //Ê¹ÄÜDMAÍ¨µÀ1
     45          ********************************************************************************/

   \                                 In  segment CODE, align 2
   \                     ?Subroutine0:
   \   000000   4C4C         MOV.B   R12, R12
   \   000002   4C0E         RLAM.A  #0x4, R12
   \   000004   AC000005     ADDA    #0x500, R12
   \   000008   1001         RETA

   \                                 In  segment CODE, align 2
     46          void DMA_Cmd  (DMA_CHn dma_ch,STATUS State)
   \                     DMA_Cmd:
     47          {
     48            DMAX->CHX[dma_ch].EN = State; 
   \   000000   4D4D         MOV.B   R13, R13
   \   000002   ........     CALLA   #?Subroutine0
   \                     ??CrossCallReturnLabel_2:
   \   000006   1DB3         BIT.W   #0x1, R13
   \   000008   042C         JC      ??DMA_Cmd_0
   \   00000A   BCC010001000 BIC.W   #0x10, 0x10(R12)
   \   000010   1001         RETA
   \                     ??DMA_Cmd_0:
   \   000012   BCD010001000 BIS.W   #0x10, 0x10(R12)
     49          }
   \   000018   1001         RETA
     50          /*******************************************************************************
     51          *  º¯ÊýÃû³Æ£ºDMA_Software_Trigger(DMA_CHn dma_ch)
     52          *  ¹¦ÄÜËµÃ÷£ºÈí¼þ´¥·¢Ò»´ÎDMA´«Êä
     53          *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch     :DMA´«ÊäÍ¨µÀ
     54          *  º¯Êý·µ»Ø£ºÎÞ
     55          *  Ê¹ÓÃÊ¾Àý£ºDMA_Software_Trigger(DMA_CH1);  //Èí¼þ´¥·¢Ò»´ÎDMAÍ¨µÀ1´«Êä
     56          ********************************************************************************/

   \                                 In  segment CODE, align 2
     57          void DMA_Software_Trigger(DMA_CHn dma_ch)
   \                     DMA_Software_Trigger:
     58          {    
     59            DMAX->CHX[dma_ch].REQ = RESET; 
   \   000000   ........     CALLA   #?Subroutine1
   \                     ??CrossCallReturnLabel_4:
   \   000004   9EC31000     BIC.W   #0x1, 0x10(R14)
     60            DMAX->CHX[dma_ch].REQ = SET; 
   \   000008   AF000005     ADDA    #0x500, R15
   \   00000C   9FD31000     BIS.W   #0x1, 0x10(R15)
     61          }
   \   000010   1001         RETA

   \                                 In  segment CODE, align 2
   \                     ?Subroutine1:
   \   000000   4C4C         MOV.B   R12, R12
   \   000002   4C0E         RLAM.A  #0x4, R12
   \   000004   CF0C         MOVA    R12, R15
   \   000006   CE0C         MOVA    R12, R14
   \   000008   AE000005     ADDA    #0x500, R14
   \   00000C   1001         RETA
     62          /*******************************************************************************
     63          *  º¯ÊýÃû³Æ£ºDMA_ITConfig (DMA_CHn dma_ch,STATUS ITState)
     64          *  ¹¦ÄÜËµÃ÷£ºÉèÖÃÊÇ·ñÊ¹ÄÜDMAÄ³Ò»Í¨µÀÍê³ÉÖÐ¶Ï
     65          *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch     :DMA´«ÊäÍ¨µÀ
     66                       BOOL ITState       :ÊÇ·ñÊ¹ÄÜDMA´«ÊäÍê³ÉÖÐ¶Ï
     67          *  º¯Êý·µ»Ø£ºÎÞ
     68          *  Ê¹ÓÃÊ¾Àý£ºDMA_ITConfig (DMA_CH0,ENABLE);  //Ê¹ÄÜDMAÍ¨µÀ1´«ÊäÍê³ÉÖÐ¶Ï
     69          ********************************************************************************/

   \                                 In  segment CODE, align 2
     70          void DMA_ITConfig (DMA_CHn dma_ch,STATUS ITState)
   \                     DMA_ITConfig:
     71          {
     72            DMAX->CHX[dma_ch].IFG = RESET;
   \   000000   ........     CALLA   #?Subroutine1
   \                     ??CrossCallReturnLabel_3:
   \   000004   BEC21000     BIC.W   #0x8, 0x10(R14)
     73            DMAX->CHX[dma_ch].IE = ITState; 
   \   000008   4D4D         MOV.B   R13, R13
   \   00000A   AF000005     ADDA    #0x500, R15
   \   00000E   1DB3         BIT.W   #0x1, R13
   \   000010   032C         JC      ??DMA_ITConfig_0
   \   000012   AFC21000     BIC.W   #0x4, 0x10(R15)
   \   000016   1001         RETA
   \                     ??DMA_ITConfig_0:
   \   000018   AFD21000     BIS.W   #0x4, 0x10(R15)
     74          }
   \   00001C   1001         RETA
     75          /*******************************************************************************
     76          *  º¯ÊýÃû³Æ£ºDMA_GetITStatus(DMA_CHn dma_ch)
     77          *  ¹¦ÄÜËµÃ÷£ºÅÐ¶ÏÄ³Ò»¸öÍ¨µÀÖÐ¶Ï±êÖ¾Î»×´Ì¬
     78          *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch     :DMA´«ÊäÍ¨µÀ
     79          *  º¯Êý·µ»Ø£ºSTATUS  :TRUE ÖÐ¶ÏÊÂ¼þ·¢Éú FALSE ÖÐ¶ÏÊÂ¼þÎ´·¢Éú
     80          *  Ê¹ÓÃÊ¾Àý£ºif(TRUE == DMA_GetITStatus(DMA_CH0)){...}  //ÅÐ¶ÏDMAÍ¨µÀ1ÊÇ·ñ·¢Éú´«ÊäÍê³ÉÖÐ¶Ï
     81          ********************************************************************************/

   \                                 In  segment CODE, align 2
     82          STATUS DMA_GetITStatus(DMA_CHn dma_ch)
   \                     DMA_GetITStatus:
     83          {
     84            return ((DMAX->CHX[dma_ch].IFG) ? TRUE : FALSE);
   \   000000   ........     CALLA   #?Subroutine0
   \                     ??CrossCallReturnLabel_1:
   \   000004   BCB21000     BIT.W   #0x8, 0x10(R12)
   \   000008   4C7C         SUBC.B  R12, R12
   \   00000A   5C53         ADD.B   #0x1, R12
   \   00000C   1001         RETA
     85          }
     86          /*******************************************************************************
     87          *  º¯ÊýÃû³Æ£ºDMA_ClearITPendingBit(DMA_CHn dma_ch)
     88          *  ¹¦ÄÜËµÃ÷£ºDMAÇå³ýÄ³Ò»Í¨µÀÖÐ¶Ï±êÖ¾
     89          *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch     :DMA´«ÊäÍ¨µÀ
     90          *  º¯Êý·µ»Ø£ºÎÞ
     91          *  Ê¹ÓÃÊ¾Àý£ºDMA_ClearITPendingBit(DMA_CH0);  //Çå³ýDMAÍ¨µÀ1´«ÊäÍê³ÉÖÐ¶Ï±êÖ¾Î»
     92          ********************************************************************************/

   \                                 In  segment CODE, align 2
     93          void DMA_ClearITPendingBit(DMA_CHn dma_ch)
   \                     DMA_ClearITPendingBit:
     94          {
     95            DMAX->CHX[dma_ch].IFG = RESET;
   \   000000   ........     CALLA   #?Subroutine0
   \                     ??CrossCallReturnLabel_0:
   \   000004   BCC21000     BIC.W   #0x8, 0x10(R12)
     96          }
   \   000008   1001         RETA

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
       4  DMA_ClearITPendingBit
       4  DMA_Cmd
       4  DMA_GetITStatus
       4  DMA_ITConfig
      28  DMA_Init
       4  DMA_Software_Trigger


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      10  ?Subroutine0
      14  ?Subroutine1
       4  DMAX
      10  DMA_ClearITPendingBit
      26  DMA_Cmd
      14  DMA_GetITStatus
      30  DMA_ITConfig
     130  DMA_Init
      18  DMA_Software_Trigger
       2  _A_DMACTL0_L

 
 252 bytes in segment CODE
   2 bytes in segment DATA16_AN
   4 bytes in segment DATA20_C
 
 252 bytes of CODE  memory
   4 bytes of CONST memory
   0 bytes of DATA  memory (+ 2 bytes shared)

Errors: none
Warnings: none
