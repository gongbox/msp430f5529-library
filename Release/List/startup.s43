///////////////////////////////////////////////////////////////////////////////
//                                                                            /
//                                                      06/Jun/2016  16:42:35 /
// IAR C/C++ Compiler V5.50.1.20465/W32, Evaluation edition for MSP430        /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    __rt_version  =  3                                                      /
//    __double_size =  32                                                     /
//    __reg_r4      =  free                                                   /
//    __reg_r5      =  free                                                   /
//    __pic         =  no                                                     /
//    __core        =  430X                                                   /
//    __data_model  =  large                                                  /
//    Source file   =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\System\src\startup.c                           /
//    Command line  =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\System\src\startup.c -D NDEBUG -D RAM_VECTOR   /
//                     -lC C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C /
//                     °æ\¹¤³ÌÄ£°å\Release\List\ -lA                          /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Release\List\ -o C:\Users\615\Desktop\MSP430\M /
//                     SP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Release\Obj\          /
//                     -D__MSP430F5529__ -e --double=32 --dlib_config         /
//                     "D:\Program Files (x86)\IAR Systems\Embedded           /
//                     Workbench 6.4 Evaluation\430\LIB\DLIB\dl430xlfn.h" -I  /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\ -I C:\Users\615\Desktop\MSP430\MSP430F5529¿âº /
//                     ¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\inc\ -I                    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\ -I C:\Users\615\Desktop\MSP430\MS /
//                     P430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\src\USB\ -I    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_config\ -I                 /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_User\ -I                   /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\srcUSB\USB_API\USB_CDC_API\ -I         /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_API\USB_HID_API\ -I        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_API\USB_MSC_API\ -I        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\KEY\ -I C:\Users\615\Desktop\MSP430\M /
//                     SP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\HardWare\LED\ -I      /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\12864\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\oled\ -I C:\Users\615\Desktop\MSP430\ /
//                     MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\HardWare\mpu6050\inc /
//                     \ -I C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\ /
//                     C°æ\¹¤³ÌÄ£°å\HardWare\mpu6050\src\ -I                  /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\nokia5110\inc\ -I                     /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\nokia5110\src\ -I                     /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\LQ_1.8_TFT\ -I                        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\LCD_API\ -I                           /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\2.2TFT\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\delay\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\System\ -I C:\Users\615\Desktop\MSP430\MSP430F /
//                     5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\System\inc\ -I              /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\System\src\ -I C:\Users\615\Desktop\MSP430\MSP /
//                     430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\User\ -I                /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\User\USER\ -I C:\Users\615\Desktop\MSP430\MSP4 /
//                     30F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Lib\UCOSII\CONFIG\ -I    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\App\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\CONFIHG\ -I                         /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\PORT\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\UCOSII\CORE\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\FatFs\ -I C:\Users\615\Desktop\MSP430\MSP4 /
//                     30F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Lib\FatFs\option\        /
//                     --core=430X --data_model=large -Oh --multiplier=32     /
//                     --multiplier_location=4C0 --hw_workaround=CPU40        /
//    List file     =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Release\List\startup.s43                       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME startup

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__core", "430X"
        RTMODEL "__data_model", "large"
        RTMODEL "__double_size", "32"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CODE_I:DATA:REORDER:NOROOT(0)
        RSEG CODE_ID:DATA:REORDER:NOROOT(0)
        RSEG CSTACK:DATA:SORT:NOROOT(0)
        RSEG DATA16_I:DATA:REORDER:NOROOT(0)
        RSEG DATA16_ID:DATA:REORDER:NOROOT(0)
        RSEG DATA16_Z:DATA:REORDER:NOROOT(0)
        RSEG DATA20_I:DATA:REORDER:NOROOT(0)
        RSEG DATA20_ID:DATA:REORDER:NOROOT(0)
        RSEG DATA20_Z:DATA:REORDER:NOROOT(0)
        RSEG INTVEC:DATA:REORDER:NOROOT(0)
        RSEG TLS16_I:DATA:REORDER:NOROOT(0)
        RSEG TLS16_ID:DATA:REORDER:NOROOT(0)

        EXTERN ?cstart_call_low_level_init
        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        FUNCTION RAM_data_Init,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 8, STACK
        PUBLIC __low_level_init
        FUNCTION __low_level_init,031203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:20, SP:20, SR:16, R4L:16, R4H:4, R4:20, R5L:16, R5H:4
          CFI Resource R5:20, R6L:16, R6H:4, R6:20, R7L:16, R7H:4, R7:20, R8L:16
          CFI Resource R8H:4, R8:20, R9L:16, R9H:4, R9:20, R10L:16, R10H:4
          CFI Resource R10:20, R11L:16, R11H:4, R11:20, R12L:16, R12H:4, R12:20
          CFI Resource R13L:16, R13H:4, R13:20, R14L:16, R14H:4, R14:20, R15L:16
          CFI Resource R15H:4, R15:20
          CFI ResourceParts R4 R4H, R4L
          CFI ResourceParts R5 R5H, R5L
          CFI ResourceParts R6 R6H, R6L
          CFI ResourceParts R7 R7H, R7L
          CFI ResourceParts R8 R8H, R8L
          CFI ResourceParts R9 R9H, R9L
          CFI ResourceParts R10 R10H, R10L
          CFI ResourceParts R11 R11H, R11L
          CFI ResourceParts R12 R12H, R12L
          CFI ResourceParts R13 R13H, R13L
          CFI ResourceParts R14 R14H, R14L
          CFI ResourceParts R15 R15H, R15L
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L Undefined
          CFI R12H Undefined
          CFI R12 Undefined
          CFI R13L Undefined
          CFI R13H Undefined
          CFI R13 Undefined
          CFI R14L Undefined
          CFI R14H Undefined
          CFI R14 Undefined
          CFI R15L Undefined
          CFI R15H Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L SameValue
          CFI R12H SameValue
          CFI R12 Concat
          CFI R13L SameValue
          CFI R13H SameValue
          CFI R13 Concat
          CFI R14L SameValue
          CFI R14H SameValue
          CFI R14 Concat
          CFI R15L SameValue
          CFI R15H SameValue
          CFI R15 Concat
          CFI EndCommon cfiCommon1
        
        EXTERN __VECTOR_RAM
        EXTERN default_isr
        FUNCTION default_isr,0612H
        EXTERN DisableWatchDog
        FUNCTION DisableWatchDog,0202H
        EXTERN Set_VectorTable_To_RAM
        FUNCTION Set_VectorTable_To_RAM,0202H
        EXTERN DCO_PLLConfig
        FUNCTION DCO_PLLConfig,0202H
        EXTERN CLOCK_MCLK_Config
        FUNCTION CLOCK_MCLK_Config,0202H
        EXTERN CLOCK_SMCLK_Config
        FUNCTION CLOCK_SMCLK_Config,0202H
        EXTERN CLOCK_ACLK_Config
        FUNCTION CLOCK_ACLK_Config,0202H

// C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\System\src\startup.c
//    1 #include "system.h"
//    2 #include "include.h"
//    3 #include "intrinsics.h"
//    4 
//    5 static void RAM_data_Init(void);
//    6 static void SystemInit(void);
//    7 #ifdef DEBUG
//    8 static void Start_Show(void);
//    9 #endif
//   10 #if 0
//   11 /*******************************************************************************
//   12 *  º¯ÊýÃû³Æ£ºReset_Handler(void)
//   13 *  ¹¦ÄÜËµÃ÷£º¸´Î»ÖÐ¶Ï·þÎñº¯Êý
//   14 *  ²ÎÊýËµÃ÷£ºÎÞ
//   15 *  º¯Êý·µ»Ø£ºÎÞ
//   16 *  Ê¹ÓÃÊ¾Àý£ºÎÞ
//   17 *  ×¢ÒâÊÂÏî£ºÐèÒªÐÞ¸Ä¹¤³ÌÅäÖÃ£¬¹´Ñ¡linkerÄ¿Â¼ÏÂµÄoverride default program,²¢Ñ¡ÔñDefined by ApplicatÑ¡Ïî
//   18 ********************************************************************************/
//   19 extern void main();
//   20 #pragma vector=RESET_VECTOR
//   21 __interrupt void Reset_Handler(void)
//   22 {
//   23   SystemInit();
//   24   main();
//   25   while(1);
//   26 }
//   27 #else
//   28 /*******************************************************************************
//   29 *  º¯ÊýÃû³Æ£º__low_level_init(void)
//   30 *  ¹¦ÄÜËµÃ÷£ºÆô¶¯º¯Êý£¬ÔÚÖ÷º¯ÊýÖ®Ç°µ÷ÓÃ
//   31 *  ²ÎÊýËµÃ÷£ºÎÞ
//   32 *  º¯Êý·µ»Ø£ºÎÞ
//   33 *  Ê¹ÓÃÊ¾Àý£ºÎÞ
//   34 ********************************************************************************/

        RSEG CODE:CODE:REORDER:ROOT(1)
//   35 __intrinsic int __low_level_init(void)
__low_level_init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function __low_level_init
        FUNCALL __low_level_init, DisableWatchDog
        LOCFRAME CSTACK, 4, STACK
        FUNCALL __low_level_init, Set_VectorTable_To_RAM
        LOCFRAME CSTACK, 4, STACK
        FUNCALL __low_level_init, RAM_data_Init
        LOCFRAME CSTACK, 4, STACK
        FUNCALL __low_level_init, DCO_PLLConfig
        LOCFRAME CSTACK, 4, STACK
        FUNCALL __low_level_init, CLOCK_MCLK_Config
        LOCFRAME CSTACK, 4, STACK
        FUNCALL __low_level_init, CLOCK_SMCLK_Config
        LOCFRAME CSTACK, 4, STACK
        FUNCALL __low_level_init, CLOCK_ACLK_Config
        LOCFRAME CSTACK, 4, STACK
        REQUIRE ?cstart_call_low_level_init
//   36 {
//   37     SystemInit();
        CALLA   #DisableWatchDog
        CALLA   #Set_VectorTable_To_RAM
        CALLA   #RAM_data_Init
        MOV.W   #0x4240, R14
        MOV.W   #0xf, R15
        MOV.B   #0x0, R13
        MOV.B   #0x2, R12
        CALLA   #DCO_PLLConfig
        MOV.B   #0x0, R13
        MOV.B   #0x3, R12
        CALLA   #CLOCK_MCLK_Config
        MOV.B   #0x0, R13
        MOV.B   #0x3, R12
        CALLA   #CLOCK_SMCLK_Config
        MOV.B   #0x0, R13
        MOV.B   #0x2, R12
        CALLA   #CLOCK_ACLK_Config
//   38     return 0;//0-²»³õÊ¼»¯²ÎÊý,1-³õÊ¼»¯²ÎÊý
        MOV.W   #0x0, R12
        RETA
          CFI EndBlock cfiBlock0
//   39 }
//   40 #endif
//   41 /*******************************************************************************
//   42 *  º¯ÊýÃû³Æ£ºSystemInit (void)
//   43 *  ¹¦ÄÜËµÃ÷£ºÆô¶¯º¯Êý£¬ÔÚÖ÷º¯ÊýÖ®Ç°µ÷ÓÃ
//   44 *  ²ÎÊýËµÃ÷£ºÎÞ
//   45 *  º¯Êý·µ»Ø£ºÎÞ
//   46 *  Ê¹ÓÃÊ¾Àý£ºÎÞ
//   47 ********************************************************************************/
//   48 void SystemInit (void)
//   49 {   
//   50     DisableWatchDog();            //¹Ø±Õ¿´ÃÅ¹·
//   51 #ifdef RAM_VECTOR
//   52     Set_VectorTable_To_RAM();     //ÉèÖÃÖÐ¶ÏÏòÁ¿Ó³Éäµ½RAMÇøÓò
//   53 #else
//   54     Set_VectorTable_To_FLASH();   //ÉèÖÃÖÐ¶ÏÏòÁ¿Ó³Éäµ½FLASHÇøÓò
//   55 #endif
//   56     RAM_data_Init();              //³õÊ¼»¯Êý¾Ý  
//   57     /*******************************Ê±ÖÓ³õÊ¼»¯*********************************/
//   58     DCO_PLLConfig(FLL_REF,FLLREF_DIV,DCO_CLK_HZ);             //³õÊ¼»¯DCOÆµÂÊ
//   59     CLOCK_MCLK_Config (MCLK_SOURCE , MCLK_DIV);               //ÉèÖÃÊ±ÖÓÔ´¼°Ê±ÖÓ·ÖÆµ
//   60     CLOCK_SMCLK_Config(SMCLK_SOURCE, SMCLK_DIV);              //ÉèÖÃÊ±ÖÓÔ´¼°Ê±ÖÓ·ÖÆµ
//   61     CLOCK_ACLK_Config (ACLK_SOURCE , ACLK_DIV);               //ÉèÖÃÊ±ÖÓÔ´¼°Ê±ÖÓ·ÖÆµ
//   62     /**************************************************************************/
//   63 #if(defined(DEBUG))
//   64 #if(defined(DEBUG_UART_PRINT))
//   65     UART_Init(Print_UART, Print_Baud);          //µ÷ÊÔÄ£Ê½ÏÂ£¬Èç¹ûÑ¡ÔñÊ¹ÓÃ´®¿Ú×÷ÎªÐÅÏ¢´òÓ¡Ôò³õÊ¼»¯UARTÄ£¿é
//   66 #endif
//   67     Start_Show();
//   68 #endif
//   69 }
//   70 //Æô¶¯ºó´òÓ¡ÌáÊ¾ÐÅÏ¢
//   71 #ifdef DEBUG
//   72 void Start_Show()
//   73 {
//   74     DEBUG_PRINTF("\nMSP430F5529 ²âÊÔ³ÌÐò!\n");  //µ÷ÊÔÄ£Ê½ÏÂ´òÓ¡ÐÅÏ¢
//   75     DEBUG_PRINTF("\n MCLK ÆµÂÊ:%ld HZ\n",g_sClock.MCLK.CLK_HZ);
//   76     DEBUG_PRINTF("SMCLK ÆµÂÊ:%ld HZ\n",g_sClock.SMCLK.CLK_HZ);
//   77     DEBUG_PRINTF(" ACLK ÆµÂÊ:%ld HZ\n",g_sClock.ACLK.CLK_HZ);  
//   78 #ifdef DELAY_TIMER
//   79     DEBUG_PRINTF("\nÊ¹ÓÃ¶¨Ê±Æ÷ÑÓÊ±,¶¨Ê±Æ÷:%s\n",TOSTRING(DELAY_TIMER));
//   80 #else
//   81     DEBUG_PRINTF("\nÊ¹ÓÃÈí¼þÄ£ÄâÑÓÊ±\n%s\n",TOSTRING(DELAY_MS(ms)));
//   82 #endif
//   83 }
//   84 #endif
//   85 /*******************************************************************************
//   86 *  º¯ÊýÃû³Æ£ºRAM_data_Init(void)
//   87 *  ¹¦ÄÜËµÃ÷£º¸´ÖÆÖÐ¶ÏÏòÁ¿±í ºÍ ±ØÒªµÄÊý¾Ýµ½ RAMÀï
//   88 *  ²ÎÊýËµÃ÷£ºÎÞ
//   89 *  º¯Êý·µ»Ø£ºÎÞ
//   90 *  Ê¹ÓÃÊ¾Àý£ºÎÞ
//   91 ********************************************************************************/
//   92 #pragma section = "DATA16_I"
//   93 #pragma section = "DATA20_I"
//   94 #pragma section = "DATA16_ID"
//   95 #pragma section = "DATA20_ID"
//   96 #pragma section = "DATA16_Z"
//   97 #pragma section = "DATA20_Z"
//   98 #pragma section = "TLS16_I"
//   99 #pragma section = "TLS16_ID"
//  100 #pragma section = "CODE_I"
//  101 #pragma section = "CODE_ID"
//  102 #pragma section = "INTVEC"

        RSEG CODE:CODE:REORDER:NOROOT(1)
//  103 void RAM_data_Init(void)
RAM_data_Init:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function RAM_data_Init
//  104 {
        PUSHM.A #0x1, R10
          CFI R10L Frame(CFA, -8)
          CFI R10H Frame(CFA, -6)
          CFI CFA SP+8
//  105     uint32_t n;
//  106     //³õÊ¼»¯ÖÐ¶ÏÏòÁ¿±í
//  107     extern ISR_TYPE __VECTOR_RAM[64];
//  108     ISR_TYPE *vector_ram = __section_begin("INTVEC");
        MOVA    #SFB(INTVEC), R15
//  109     for(int i=0;i < VECTOR_SIZE;i++)
        MOVA    #__VECTOR_RAM, R14
//  110     { //¸´ÖÆÖÐ¶ÏÏòÁ¿±í£¬¶ÔÃ»ÓÐ¶¨ÒåµÄÖÐ¶ÏÏòÁ¿¸³ÖµÎªdefault_isr£¨Ä¬ÈÏÖÐ¶Ï·þÎñº¯Êý£©
//  111       __VECTOR_RAM[i] = (0 == *vector_ram || (ISR_TYPE)0xFFFF == *vector_ram) ? (ISR_TYPE)default_isr : *vector_ram;  
??RAM_data_Init_0:
        MOV.W   @R15, R13
        CMP.W   #0x0, R13
        JEQ     ??RAM_data_Init_14
        CMP.W   #0xffff, R13
        JNE     ??RAM_data_Init_7
??RAM_data_Init_14:
        MOV.W   #LWRD(default_isr), R13
??RAM_data_Init_7:
        MOV.W   R13, 0(R14)
//  112       vector_ram++;
        ADDA    #0x2, R15
//  113     }
        ADDA    #0x2, R14
        CMPA    #__VECTOR_RAM + 128, R14
        JNE     ??RAM_data_Init_0
//  114     /* °ÑÒÑ¸³³õÖµµÄ±äÁ¿´ÓROMÀï¸´ÖÆÊý¾Ýµ½RAMÀï */
//  115     uint8_t *data_ram = __section_begin("DATA16_I");            //ÒÑ¸³³õÖµµÄ±äÁ¿µÄµØÖ·ÔÚRAMÀï
        MOVA    #SFB(DATA16_I), R15
        MOVA    #SFB(DATA16_ID), R14
//  116     uint8_t *data_rom = __section_begin("DATA16_ID");       //ÒÑ¸³³õÖµµÄ±äÁ¿µÄÊý¾Ý´æ·ÅÔÚROMÀï£¬ÐèÒª¸³Öµµ½RAMÀï
//  117     uint8_t *data_rom_end = __section_end("DATA16_ID");
//  118     n = data_rom_end - data_rom;
        MOV.W   #LWRD((SFE(DATA16_ID) & 0xfffff) - (SFB(DATA16_ID) & 0xfffff)), R12
        MOV.W   #LWRD((SFE(DATA16_ID) & 0xfffff) - (SFB(DATA16_ID) & 0xfffff) >> 16), R13
        CALLA   #?Subroutine0
//  119 
//  120     /* ¸´ÖÆ³õÊ¼»¯Êý¾Ýµ½RAMÀï */
//  121     while (n--)
//  122     {
//  123         *data_ram++ = *data_rom++; 
//  124     }
//  125     /* °ÑÒÑ¸³³õÖµµÄ±äÁ¿´ÓROMÀï¸´ÖÆÊý¾Ýµ½RAMÀï */
//  126     data_ram = __section_begin("DATA20_I");            //ÒÑ¸³³õÖµµÄ±äÁ¿µÄµØÖ·ÔÚRAMÀï
??CrossCallReturnLabel_0:
        MOVA    #SFB(DATA20_I), R15
        MOVA    #SFB(DATA20_ID), R14
//  127     data_rom = __section_begin("DATA20_ID");       //ÒÑ¸³³õÖµµÄ±äÁ¿µÄÊý¾Ý´æ·ÅÔÚROMÀï£¬ÐèÒª¸³Öµµ½RAMÀï
//  128     data_rom_end = __section_end("DATA20_ID");
//  129     n = data_rom_end - data_rom;
        MOV.W   #LWRD((SFE(DATA20_ID) & 0xfffff) - (SFB(DATA20_ID) & 0xfffff)), R12
        MOV.W   #LWRD((SFE(DATA20_ID) & 0xfffff) - (SFB(DATA20_ID) & 0xfffff) >> 16), R13
        CALLA   #?Subroutine0
//  130 
//  131     /* ¸´ÖÆ³õÊ¼»¯Êý¾Ýµ½RAMÀï */
//  132     while (n--)
??CrossCallReturnLabel_1:
        MOVA    #SFB(DATA16_Z), R15
//  133     {
//  134         *data_ram++ = *data_rom++;
//  135     }
//  136     
//  137     /* Ã»¸³³õÖµ»òÕß³õÖµÎª0µÄ±äÁ¿£¬ÐèÒªÇå³ýÆäRAMÀïµÄÊý¾Ý£¬È·±£ÖµÎª0 */
//  138     uint8_t *bss_start = __section_begin("DATA16_Z");
//  139     uint8_t *bss_end = __section_end("DATA16_Z");
//  140 
//  141     /* Çå³ýÃ»¸³³õÖµ»òÕß³õÖµÎª0µÄ±äÁ¿Êý¾ÝÖµ */
//  142     n = bss_end - bss_start;
        MOV.W   #LWRD((SFE(DATA16_Z) & 0xfffff) - (SFB(DATA16_Z) & 0xfffff)), R12
        MOV.W   #LWRD((SFE(DATA16_Z) & 0xfffff) - (SFB(DATA16_Z) & 0xfffff) >> 16), R13
        CALLA   #?Subroutine1
//  143     while(n--)
??CrossCallReturnLabel_4:
        MOVA    #SFB(DATA20_Z), R15
//  144     {
//  145         *bss_start++ = 0;
//  146     }
//  147     /* Ã»¸³³õÖµ»òÕß³õÖµÎª0µÄ±äÁ¿£¬ÐèÒªÇå³ýÆäRAMÀïµÄÊý¾Ý£¬È·±£ÖµÎª0 */
//  148     bss_start = __section_begin("DATA20_Z");
//  149     bss_end = __section_end("DATA20_Z");
//  150 
//  151     /* Çå³ýÃ»¸³³õÖµ»òÕß³õÖµÎª0µÄ±äÁ¿Êý¾ÝÖµ */
//  152     n = bss_end - bss_start;
        MOV.W   #LWRD((SFE(DATA20_Z) & 0xfffff) - (SFB(DATA20_Z) & 0xfffff)), R12
        MOV.W   #LWRD((SFE(DATA20_Z) & 0xfffff) - (SFB(DATA20_Z) & 0xfffff) >> 16), R13
        CALLA   #?Subroutine1
//  153     while(n--)
//  154     {
//  155         *bss_start++ = 0;
//  156     }
//  157    
//  158      /* ¸³ÖµÓÃ __ramfunc ÉùÃ÷µÄº¯ÊýµÄµÄ´úÂë¶Îµ½ RAM£¬¿ÉÒÔ¼Ó¿ì´úÂëµÄÔËÐÐ        */
//  159     uint8_t *code_relocate_ram = __section_begin("CODE_I");
??CrossCallReturnLabel_5:
        MOVA    #SFB(CODE_I), R15
        MOVA    #SFB(CODE_ID), R14
//  160     uint8_t *code_relocate = __section_begin("CODE_ID");
//  161     uint8_t *code_relocate_end = __section_end("CODE_ID");
//  162 
//  163     /* ´ÓROMÀï¸´ÖÆº¯Êý´úÂëµ½RAMÀï */
//  164     n = code_relocate_end - code_relocate;
        MOV.W   #LWRD((SFE(CODE_ID) & 0xfffff) - (SFB(CODE_ID) & 0xfffff)), R12
        MOV.W   #LWRD((SFE(CODE_ID) & 0xfffff) - (SFB(CODE_ID) & 0xfffff) >> 16), R13
        CALLA   #?Subroutine0
//  165     while (n--)
//  166     {
//  167         *code_relocate_ram++ = *code_relocate++;
//  168     }
//  169     
//  170     /* ¸³Öµ Thread-local storage for main thread(require custom runtime library)µ½RAM*/
//  171     uint8_t *tls_ram = __section_begin("TLS16_I");
??CrossCallReturnLabel_2:
        MOVA    #SFB(TLS16_I), R15
        MOVA    #SFB(TLS16_ID), R14
//  172     uint8_t *tls_start = __section_begin("TLS16_ID");
//  173     uint8_t *tls_end   = __section_end("TLS16_ID");
//  174 
//  175     /* ´ÓROMÀï¸´ÖÆº¯Êý´úÂëµ½RAMÀï */
//  176     n = tls_end - tls_start;
        MOV.W   #LWRD((SFE(TLS16_ID) & 0xfffff) - (SFB(TLS16_ID) & 0xfffff)), R12
        MOV.W   #LWRD((SFE(TLS16_ID) & 0xfffff) - (SFB(TLS16_ID) & 0xfffff) >> 16), R13
        CALLA   #?Subroutine0
//  177     while (n--)
//  178     {
//  179         *tls_ram++ = *tls_start++;
//  180     }
//  181 }
??CrossCallReturnLabel_3:
        POPM.A  #0x1, R10
          CFI R10H SameValue
          CFI R10L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock1

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine1:
          CFI Block cfiCond2 Using cfiCommon0
          CFI Function RAM_data_Init
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R10L Frame(CFA, -8)
          CFI R10H Frame(CFA, -6)
          CFI CFA SP+12
          CFI Block cfiCond3 Using cfiCommon0
          CFI (cfiCond3) Function RAM_data_Init
          CFI (cfiCond3) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond3) R10L Frame(CFA, -8)
          CFI (cfiCond3) R10H Frame(CFA, -6)
          CFI (cfiCond3) CFA SP+12
          CFI Block cfiPicker4 Using cfiCommon1
          CFI (cfiPicker4) NoFunction
          CFI (cfiPicker4) Picker
        MOV.W   R12, R14
        BIS.W   R13, R14
        CMP.W   #0x0, R14
        JEQ     ??RAM_data_Init_12
??RAM_data_Init_3:
        MOV.B   #0x0, 0(R15)
        ADDA    #0x1, R15
        ADD.W   #0xffff, R12
        ADDC.W  #0xffff, R13
        MOV.W   R12, R14
        BIS.W   R13, R14
        CMP.W   #0x0, R14
        JNE     ??RAM_data_Init_3
??RAM_data_Init_12:
        RETA
          CFI EndBlock cfiCond2
          CFI EndBlock cfiCond3
          CFI EndBlock cfiPicker4

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine0:
          CFI Block cfiCond5 Using cfiCommon0
          CFI Function RAM_data_Init
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R10L Frame(CFA, -8)
          CFI R10H Frame(CFA, -6)
          CFI CFA SP+12
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function RAM_data_Init
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond6) R10L Frame(CFA, -8)
          CFI (cfiCond6) R10H Frame(CFA, -6)
          CFI (cfiCond6) CFA SP+12
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function RAM_data_Init
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond7) R10L Frame(CFA, -8)
          CFI (cfiCond7) R10H Frame(CFA, -6)
          CFI (cfiCond7) CFA SP+12
          CFI Block cfiCond8 Using cfiCommon0
          CFI (cfiCond8) Function RAM_data_Init
          CFI (cfiCond8) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond8) R10L Frame(CFA, -8)
          CFI (cfiCond8) R10H Frame(CFA, -6)
          CFI (cfiCond8) CFA SP+12
          CFI Block cfiPicker9 Using cfiCommon1
          CFI (cfiPicker9) NoFunction
          CFI (cfiPicker9) Picker
        MOV.W   R12, R10
        BIS.W   R13, R10
        CMP.W   #0x0, R10
        JEQ     ??RAM_data_Init_8
??RAM_data_Init_1:
        MOV.B   @R14+, 0(R15)
        ADDA    #0x1, R15
        ADD.W   #0xffff, R12
        ADDC.W  #0xffff, R13
        MOV.W   R12, R10
        BIS.W   R13, R10
        CMP.W   #0x0, R10
        JNE     ??RAM_data_Init_1
??RAM_data_Init_8:
        RETA
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiCond8
          CFI EndBlock cfiPicker9

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        RSEG CODE_I:DATA:REORDER:NOROOT(0)

        RSEG CODE_ID:DATA:REORDER:NOROOT(0)

        RSEG DATA16_I:DATA:REORDER:NOROOT(0)

        RSEG DATA16_ID:DATA:REORDER:NOROOT(0)

        RSEG DATA16_Z:DATA:REORDER:NOROOT(0)

        RSEG DATA20_I:DATA:REORDER:NOROOT(0)

        RSEG DATA20_ID:DATA:REORDER:NOROOT(0)

        RSEG DATA20_Z:DATA:REORDER:NOROOT(0)

        RSEG INTVEC:DATA:REORDER:NOROOT(0)

        RSEG TLS16_I:DATA:REORDER:NOROOT(0)

        RSEG TLS16_ID:DATA:REORDER:NOROOT(0)

        END
// 
// 274 bytes in segment CODE
// 
// 274 bytes of CODE memory
//
//Errors: none
//Warnings: 1
