///////////////////////////////////////////////////////////////////////////////
//                                                                            /
//                                                      06/Jun/2016  16:42:20 /
// IAR C/C++ Compiler V5.50.1.20465/W32, Evaluation edition for MSP430        /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    __rt_version  =  3                                                      /
//    __double_size =  32                                                     /
//    __reg_r4      =  free                                                   /
//    __reg_r5      =  free                                                   /
//    __pic         =  no                                                     /
//    __core        =  430X                                                   /
//    __data_model  =  large                                                  /
//    Source file   =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\User\USER\PID.c                                /
//    Command line  =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\User\USER\PID.c -D NDEBUG -D RAM_VECTOR -lC    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Release\List\ -lA C:\Users\615\Desktop\MSP430\ /
//                     MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Release\List\ -o     /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Release\Obj\ -D__MSP430F5529__ -e --double=32  /
//                     --dlib_config "D:\Program Files (x86)\IAR              /
//                     Systems\Embedded Workbench 6.4                         /
//                     Evaluation\430\LIB\DLIB\dl430xlfn.h" -I                /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\ -I C:\Users\615\Desktop\MSP430\MSP430F5529¿âº /
//                     ¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\inc\ -I                    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\ -I C:\Users\615\Desktop\MSP430\MS /
//                     P430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\src\USB\ -I    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_config\ -I                 /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_User\ -I                   /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\srcUSB\USB_API\USB_CDC_API\ -I         /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_API\USB_HID_API\ -I        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_API\USB_MSC_API\ -I        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\KEY\ -I C:\Users\615\Desktop\MSP430\M /
//                     SP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\HardWare\LED\ -I      /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\12864\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\oled\ -I C:\Users\615\Desktop\MSP430\ /
//                     MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\HardWare\mpu6050\inc /
//                     \ -I C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\ /
//                     C°æ\¹¤³ÌÄ£°å\HardWare\mpu6050\src\ -I                  /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\nokia5110\inc\ -I                     /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\nokia5110\src\ -I                     /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\LQ_1.8_TFT\ -I                        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\LCD_API\ -I                           /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\2.2TFT\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\delay\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\System\ -I C:\Users\615\Desktop\MSP430\MSP430F /
//                     5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\System\inc\ -I              /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\System\src\ -I C:\Users\615\Desktop\MSP430\MSP /
//                     430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\User\ -I                /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\User\USER\ -I C:\Users\615\Desktop\MSP430\MSP4 /
//                     30F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Lib\UCOSII\CONFIG\ -I    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\App\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\CONFIHG\ -I                         /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\PORT\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\UCOSII\CORE\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\FatFs\ -I C:\Users\615\Desktop\MSP430\MSP4 /
//                     30F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Lib\FatFs\option\        /
//                     --core=430X --data_model=large -Oh --multiplier=32     /
//                     --multiplier_location=4C0 --hw_workaround=CPU40        /
//    List file     =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Release\List\PID.s43                           /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME PID

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__core", "430X"
        RTMODEL "__data_model", "large"
        RTMODEL "__double_size", "32"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBLIC Increment_PID_Cal
        FUNCTION Increment_PID_Cal,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 44, STACK
        PUBLIC PID_Cal
        FUNCTION PID_Cal,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 40, STACK
        PUBLIC PID_Parameter_Init
        FUNCTION PID_Parameter_Init,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 28, STACK
        PUBLIC PID_SetPoint
        FUNCTION PID_SetPoint,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC Position_PID_Cal
        FUNCTION Position_PID_Cal,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 40, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:20, SP:20, SR:16, R4L:16, R4H:4, R4:20, R5L:16, R5H:4
          CFI Resource R5:20, R6L:16, R6H:4, R6:20, R7L:16, R7H:4, R7:20, R8L:16
          CFI Resource R8H:4, R8:20, R9L:16, R9H:4, R9:20, R10L:16, R10H:4
          CFI Resource R10:20, R11L:16, R11H:4, R11:20, R12L:16, R12H:4, R12:20
          CFI Resource R13L:16, R13H:4, R13:20, R14L:16, R14H:4, R14:20, R15L:16
          CFI Resource R15H:4, R15:20
          CFI ResourceParts R4 R4H, R4L
          CFI ResourceParts R5 R5H, R5L
          CFI ResourceParts R6 R6H, R6L
          CFI ResourceParts R7 R7H, R7L
          CFI ResourceParts R8 R8H, R8L
          CFI ResourceParts R9 R9H, R9L
          CFI ResourceParts R10 R10H, R10L
          CFI ResourceParts R11 R11H, R11L
          CFI ResourceParts R12 R12H, R12L
          CFI ResourceParts R13 R13H, R13L
          CFI ResourceParts R14 R14H, R14L
          CFI ResourceParts R15 R15H, R15L
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L Undefined
          CFI R12H Undefined
          CFI R12 Undefined
          CFI R13L Undefined
          CFI R13H Undefined
          CFI R13 Undefined
          CFI R14L Undefined
          CFI R14H Undefined
          CFI R14 Undefined
          CFI R15L Undefined
          CFI R15H Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L SameValue
          CFI R12H SameValue
          CFI R12 Concat
          CFI R13L SameValue
          CFI R13H SameValue
          CFI R13 Concat
          CFI R14L SameValue
          CFI R14H SameValue
          CFI R14 Concat
          CFI R15L SameValue
          CFI R15H SameValue
          CFI R15 Concat
          CFI EndCommon cfiCommon1
        
        EXTERN _Sub32f
        FUNCTION _Sub32f,0202H
        EXTERN _Add32f
        FUNCTION _Add32f,0202H
        EXTERN _Mul32f
        FUNCTION _Mul32f,0202H

// C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\User\USER\PID.c
//    1 #include"PID.h"
//    2 
//    3 #include"math.h"
//    4 //³õÊ¼»¯PID½á¹¹Ìå²ÎÊý

        RSEG CODE:CODE:REORDER:NOROOT(1)
//    5 void PID_Parameter_Init(PID * s_PID,float set_point,float Proportion,float Integral, float Derivative)
PID_Parameter_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function PID_Parameter_Init
//    6 {
        PUSHM.A #0x6, R11
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+28
        MOV.W   0x1c(SP), R10
        MOV.W   0x1e(SP), R11
        MOV.W   0x20(SP), R8
        MOV.W   0x22(SP), R9
        MOV.W   0x24(SP), R6
        MOV.W   0x26(SP), R7
//    7    s_PID->SetPoint = set_point;
        MOV.W   R14, 0(R12)
        MOV.W   R15, 0x2(R12)
//    8    s_PID->Proportion = Proportion;
        MOV.W   R10, 0x4(R12)
        MOV.W   R11, 0x6(R12)
//    9    s_PID->Integral = Integral;
        MOV.W   R8, 0x8(R12)
        MOV.W   R9, 0xa(R12)
//   10    s_PID->Derivative = Derivative;
        MOV.W   R6, 0xc(R12)
        MOV.W   R7, 0xe(R12)
//   11    s_PID->LastError = 0;
        MOV.W   #0x0, 0x14(R12)
        MOV.W   #0x0, 0x16(R12)
//   12    s_PID->PrevError = 0;
        MOV.W   #0x0, 0x18(R12)
        MOV.W   #0x0, 0x1a(R12)
//   13    s_PID->SumError = 0;
        MOV.W   #0x0, 0x10(R12)
        MOV.W   #0x0, 0x12(R12)
//   14    s_PID->LastResult = 0;
        MOV.W   #0x0, 0x1c(R12)
        MOV.W   #0x0, 0x1e(R12)
//   15    s_PID->Result = 0;
        MOV.W   #0x0, 0x20(R12)
        MOV.W   #0x0, 0x22(R12)
//   16 }
        POPM.A  #0x6, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R6H SameValue
          CFI R7H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R6L SameValue
          CFI R7L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock0
//   17 //ÉèÖÃÄ¿±êÖµ

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   18 void  PID_SetPoint     (PID * s_PID, float set_point)    
PID_SetPoint:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function PID_SetPoint
//   19 {
//   20    s_PID->SetPoint = set_point;
        MOV.W   R14, 0(R12)
        MOV.W   R15, 0x2(R12)
//   21 }
        RETA
          CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(1)
?Subroutine2:
          CFI Block cfiCond2 Using cfiCommon0
          CFI Function PID_Cal
          CFI Conditional ??CrossCallReturnLabel_9
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+44
          CFI Block cfiCond3 Using cfiCommon0
          CFI (cfiCond3) Function Position_PID_Cal
          CFI (cfiCond3) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond3) R4L Frame(CFA, -36)
          CFI (cfiCond3) R4H Frame(CFA, -34)
          CFI (cfiCond3) R5L Frame(CFA, -32)
          CFI (cfiCond3) R5H Frame(CFA, -30)
          CFI (cfiCond3) R6L Frame(CFA, -28)
          CFI (cfiCond3) R6H Frame(CFA, -26)
          CFI (cfiCond3) R7L Frame(CFA, -24)
          CFI (cfiCond3) R7H Frame(CFA, -22)
          CFI (cfiCond3) R8L Frame(CFA, -20)
          CFI (cfiCond3) R8H Frame(CFA, -18)
          CFI (cfiCond3) R9L Frame(CFA, -16)
          CFI (cfiCond3) R9H Frame(CFA, -14)
          CFI (cfiCond3) R10L Frame(CFA, -12)
          CFI (cfiCond3) R10H Frame(CFA, -10)
          CFI (cfiCond3) R11L Frame(CFA, -8)
          CFI (cfiCond3) R11H Frame(CFA, -6)
          CFI (cfiCond3) CFA SP+44
          CFI Block cfiPicker4 Using cfiCommon1
          CFI (cfiPicker4) NoFunction
          CFI (cfiPicker4) Picker
        MOV.W   R10, R12
        MOV.W   R11, R13
        CALLA   #_Sub32f
          CFI EndBlock cfiCond2
          CFI EndBlock cfiCond3
          CFI EndBlock cfiPicker4
        REQUIRE ?Subroutine6
        // Fall through to label ?Subroutine6
//   22 //ÔöÁ¿Ê½PID¼ÆËã

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine6:
          CFI Block cfiCond5 Using cfiCommon0
          CFI Function PID_Cal
          CFI Conditional ??CrossCallReturnLabel_9
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+44
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function Position_PID_Cal
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond6) R4L Frame(CFA, -36)
          CFI (cfiCond6) R4H Frame(CFA, -34)
          CFI (cfiCond6) R5L Frame(CFA, -32)
          CFI (cfiCond6) R5H Frame(CFA, -30)
          CFI (cfiCond6) R6L Frame(CFA, -28)
          CFI (cfiCond6) R6H Frame(CFA, -26)
          CFI (cfiCond6) R7L Frame(CFA, -24)
          CFI (cfiCond6) R7H Frame(CFA, -22)
          CFI (cfiCond6) R8L Frame(CFA, -20)
          CFI (cfiCond6) R8H Frame(CFA, -18)
          CFI (cfiCond6) R9L Frame(CFA, -16)
          CFI (cfiCond6) R9H Frame(CFA, -14)
          CFI (cfiCond6) R10L Frame(CFA, -12)
          CFI (cfiCond6) R10H Frame(CFA, -10)
          CFI (cfiCond6) R11L Frame(CFA, -8)
          CFI (cfiCond6) R11H Frame(CFA, -6)
          CFI (cfiCond6) CFA SP+44
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function Increment_PID_Cal
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond7) R4L Frame(CFA, -36)
          CFI (cfiCond7) R4H Frame(CFA, -34)
          CFI (cfiCond7) R5L Frame(CFA, -32)
          CFI (cfiCond7) R5H Frame(CFA, -30)
          CFI (cfiCond7) R6L Frame(CFA, -28)
          CFI (cfiCond7) R6H Frame(CFA, -26)
          CFI (cfiCond7) R7L Frame(CFA, -24)
          CFI (cfiCond7) R7H Frame(CFA, -22)
          CFI (cfiCond7) R8L Frame(CFA, -20)
          CFI (cfiCond7) R8H Frame(CFA, -18)
          CFI (cfiCond7) R9L Frame(CFA, -16)
          CFI (cfiCond7) R9H Frame(CFA, -14)
          CFI (cfiCond7) R10L Frame(CFA, -12)
          CFI (cfiCond7) R10H Frame(CFA, -10)
          CFI (cfiCond7) R11L Frame(CFA, -8)
          CFI (cfiCond7) R11H Frame(CFA, -6)
          CFI (cfiCond7) CFA SP+48
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        MOV.W   0xc(R8), R14
        MOV.W   0xe(R8), R15
        BRA     #_Mul32f
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   23 float Increment_PID_Cal(PID * s_PID,float now_point)
Increment_PID_Cal:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function Increment_PID_Cal
//   24 {
        FUNCALL Increment_PID_Cal, _Sub32f
        LOCFRAME CSTACK, 44, STACK
        FUNCALL Increment_PID_Cal, _Sub32f
        LOCFRAME CSTACK, 44, STACK
        FUNCALL Increment_PID_Cal, _Mul32f
        LOCFRAME CSTACK, 44, STACK
        FUNCALL Increment_PID_Cal, _Mul32f
        LOCFRAME CSTACK, 44, STACK
        FUNCALL Increment_PID_Cal, _Add32f
        LOCFRAME CSTACK, 44, STACK
        FUNCALL Increment_PID_Cal, _Mul32f
        LOCFRAME CSTACK, 44, STACK
        FUNCALL Increment_PID_Cal, _Sub32f
        LOCFRAME CSTACK, 44, STACK
        FUNCALL Increment_PID_Cal, _Add32f
        LOCFRAME CSTACK, 44, STACK
        FUNCALL Increment_PID_Cal, _Mul32f
        LOCFRAME CSTACK, 44, STACK
        FUNCALL Increment_PID_Cal, _Add32f
        LOCFRAME CSTACK, 44, STACK
        FUNCALL Increment_PID_Cal, _Add32f
        LOCFRAME CSTACK, 44, STACK
        PUSHM.A #0x8, R11
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+36
        SUB.W   #0x8, SP
          CFI CFA SP+44
        CALLA   #?Subroutine7
//   25   //PID¼ÆËã   
//   26     float Error = s_PID->SetPoint - now_point;
??CrossCallReturnLabel_11:
        MOV.W   R12, R6
        MOV.W   R13, R7
        MOV.W   0x14(R8), R14
        MOV.W   0x16(R8), R15
        CALLA   #_Sub32f
        MOV.W   R12, 0(SP)
        MOV.W   R13, 0x2(SP)
        CALLA   #?Subroutine5
??CrossCallReturnLabel_7:
        MOV.W   R12, R10
        MOV.W   R13, R11
        MOV.W   R6, R14
        MOV.W   R7, R15
        CALLA   #?Subroutine3
??CrossCallReturnLabel_3:
        MOV.W   0x1c(R8), R14
        MOV.W   0x1e(R8), R15
        MOV.W   R10, R12
        MOV.W   R11, R13
        CALLA   #_Add32f
        MOV.W   R12, 0x4(SP)
        MOV.W   R13, 0x6(SP)
        MOV.W   #0x0, R14
        MOV.W   #0x4000, R15
        MOV.W   0x14(R8), R12
        MOV.W   0x16(R8), R13
        CALLA   #_Mul32f
        MOV.W   R12, R14
        MOV.W   R13, R15
        MOV.W   R6, R12
        MOV.W   R7, R13
        CALLA   #_Sub32f
        MOV.W   0x18(R8), R14
        MOV.W   0x1a(R8), R15
        CALLA   #_Add32f
        CALLA   #?Subroutine6
??CrossCallReturnLabel_8:
        MOV.W   R12, R4
        MOV.W   R13, R5
        MOV.W   @SP, R14
        MOV.W   0x2(SP), R15
        MOV.W   0x4(SP), R12
        MOV.W   0x6(SP), R13
        CALLA   #_Add32f
        MOV.W   R4, R14
        MOV.W   R5, R15
        CALLA   #?Subroutine4
//   27     
//   28     s_PID->Result = s_PID->LastResult 
//   29 	      +(float)s_PID->Proportion  * (Error - s_PID->LastError)                          // ±ÈÀýÏî
//   30 	      +(float)s_PID->Integral    *  Error	                                       // »ý·ÖÏî 
//   31               +(float)s_PID->Derivative  * (Error - 2*(s_PID->LastError) + s_PID->PrevError);  // Î¢·ÖÏî
//   32    
//   33     s_PID->PrevError = s_PID->LastError;		               // ¼òµ¥¸³ÖµÔËËã
??CrossCallReturnLabel_5:
        MOV.W   0x14(R8), 0x18(R8)
        MOV.W   0x16(R8), 0x1a(R8)
//   34     s_PID->LastError = Error; 				       // ¼òµ¥¸³ÖµÔËËã
        MOV.W   R6, 0x14(R8)
        MOV.W   R7, 0x16(R8)
//   35     s_PID->LastResult = s_PID->Result;					       // ¼òµ¥¸³ÖµÔËËã	     
        MOV.W   R12, 0x1c(R8)
        MOV.W   R13, 0x1e(R8)
//   36     return s_PID->Result;	
        ADD.W   #0x8, SP
          CFI CFA SP+36
        POPM.A  #0x8, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R4H SameValue
          CFI R5H SameValue
          CFI R6H SameValue
          CFI R7H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R4L SameValue
          CFI R5L SameValue
          CFI R6L SameValue
          CFI R7L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock9
//   37 }

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine7:
          CFI Block cfiCond10 Using cfiCommon0
          CFI Function PID_Cal
          CFI Conditional ??CrossCallReturnLabel_12, ??CrossCallReturnLabel_0
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+48
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function Position_PID_Cal
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_12, ??CrossCallReturnLabel_1
          CFI (cfiCond11) R4L Frame(CFA, -36)
          CFI (cfiCond11) R4H Frame(CFA, -34)
          CFI (cfiCond11) R5L Frame(CFA, -32)
          CFI (cfiCond11) R5H Frame(CFA, -30)
          CFI (cfiCond11) R6L Frame(CFA, -28)
          CFI (cfiCond11) R6H Frame(CFA, -26)
          CFI (cfiCond11) R7L Frame(CFA, -24)
          CFI (cfiCond11) R7H Frame(CFA, -22)
          CFI (cfiCond11) R8L Frame(CFA, -20)
          CFI (cfiCond11) R8H Frame(CFA, -18)
          CFI (cfiCond11) R9L Frame(CFA, -16)
          CFI (cfiCond11) R9H Frame(CFA, -14)
          CFI (cfiCond11) R10L Frame(CFA, -12)
          CFI (cfiCond11) R10H Frame(CFA, -10)
          CFI (cfiCond11) R11L Frame(CFA, -8)
          CFI (cfiCond11) R11H Frame(CFA, -6)
          CFI (cfiCond11) CFA SP+48
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function Increment_PID_Cal
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond12) R4L Frame(CFA, -36)
          CFI (cfiCond12) R4H Frame(CFA, -34)
          CFI (cfiCond12) R5L Frame(CFA, -32)
          CFI (cfiCond12) R5H Frame(CFA, -30)
          CFI (cfiCond12) R6L Frame(CFA, -28)
          CFI (cfiCond12) R6H Frame(CFA, -26)
          CFI (cfiCond12) R7L Frame(CFA, -24)
          CFI (cfiCond12) R7H Frame(CFA, -22)
          CFI (cfiCond12) R8L Frame(CFA, -20)
          CFI (cfiCond12) R8H Frame(CFA, -18)
          CFI (cfiCond12) R9L Frame(CFA, -16)
          CFI (cfiCond12) R9H Frame(CFA, -14)
          CFI (cfiCond12) R10L Frame(CFA, -12)
          CFI (cfiCond12) R10H Frame(CFA, -10)
          CFI (cfiCond12) R11L Frame(CFA, -8)
          CFI (cfiCond12) R11H Frame(CFA, -6)
          CFI (cfiCond12) CFA SP+48
          CFI Block cfiPicker13 Using cfiCommon1
          CFI (cfiPicker13) NoFunction
          CFI (cfiPicker13) Picker
//   38 //Î»ÖÃÊ½PID¼ÆËã
//   39 float Position_PID_Cal(PID * s_PID,float now_point)
//   40 {
        MOVA    R12, R8
//   41   //PID¼ÆËã   
//   42     float Error = s_PID->SetPoint - now_point;
        MOV.W   @R8, R12
        MOV.W   0x2(R8), R13
        BRA     #_Sub32f
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiPicker13

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine5:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function PID_Cal
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+44
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function Increment_PID_Cal
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond15) R4L Frame(CFA, -36)
          CFI (cfiCond15) R4H Frame(CFA, -34)
          CFI (cfiCond15) R5L Frame(CFA, -32)
          CFI (cfiCond15) R5H Frame(CFA, -30)
          CFI (cfiCond15) R6L Frame(CFA, -28)
          CFI (cfiCond15) R6H Frame(CFA, -26)
          CFI (cfiCond15) R7L Frame(CFA, -24)
          CFI (cfiCond15) R7H Frame(CFA, -22)
          CFI (cfiCond15) R8L Frame(CFA, -20)
          CFI (cfiCond15) R8H Frame(CFA, -18)
          CFI (cfiCond15) R9L Frame(CFA, -16)
          CFI (cfiCond15) R9H Frame(CFA, -14)
          CFI (cfiCond15) R10L Frame(CFA, -12)
          CFI (cfiCond15) R10H Frame(CFA, -10)
          CFI (cfiCond15) R11L Frame(CFA, -8)
          CFI (cfiCond15) R11H Frame(CFA, -6)
          CFI (cfiCond15) CFA SP+48
          CFI Block cfiPicker16 Using cfiCommon1
          CFI (cfiPicker16) NoFunction
          CFI (cfiPicker16) Picker
        MOV.W   0x4(R8), R14
        MOV.W   0x6(R8), R15
        BRA     #_Mul32f
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiPicker16

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine4:
          CFI Block cfiCond17 Using cfiCommon0
          CFI Function Position_PID_Cal
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+44
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function Increment_PID_Cal
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond18) R4L Frame(CFA, -36)
          CFI (cfiCond18) R4H Frame(CFA, -34)
          CFI (cfiCond18) R5L Frame(CFA, -32)
          CFI (cfiCond18) R5H Frame(CFA, -30)
          CFI (cfiCond18) R6L Frame(CFA, -28)
          CFI (cfiCond18) R6H Frame(CFA, -26)
          CFI (cfiCond18) R7L Frame(CFA, -24)
          CFI (cfiCond18) R7H Frame(CFA, -22)
          CFI (cfiCond18) R8L Frame(CFA, -20)
          CFI (cfiCond18) R8H Frame(CFA, -18)
          CFI (cfiCond18) R9L Frame(CFA, -16)
          CFI (cfiCond18) R9H Frame(CFA, -14)
          CFI (cfiCond18) R10L Frame(CFA, -12)
          CFI (cfiCond18) R10H Frame(CFA, -10)
          CFI (cfiCond18) R11L Frame(CFA, -8)
          CFI (cfiCond18) R11H Frame(CFA, -6)
          CFI (cfiCond18) CFA SP+48
          CFI Block cfiPicker19 Using cfiCommon1
          CFI (cfiPicker19) NoFunction
          CFI (cfiPicker19) Picker
//   43     
//   44     s_PID->SumError += Error;                            //»ý·ÖÎó²îÀÛ¼Ó
//   45     
//   46     s_PID->Result = (float)s_PID->Proportion  *  Error                          // ±ÈÀýÏî
//   47                    +(float)s_PID->Integral    *  s_PID->SumError	        // »ý·ÖÏî 
//   48                    +(float)s_PID->Derivative  * (Error - s_PID->LastError);     // Î¢·ÖÏî
        CALLA   #_Add32f
        MOV.W   R12, 0x20(R8)
        MOV.W   R13, 0x22(R8)
        RETA
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiPicker19

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine3:
          CFI Block cfiCond20 Using cfiCommon0
          CFI Function Position_PID_Cal
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+44
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function Increment_PID_Cal
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond21) R4L Frame(CFA, -36)
          CFI (cfiCond21) R4H Frame(CFA, -34)
          CFI (cfiCond21) R5L Frame(CFA, -32)
          CFI (cfiCond21) R5H Frame(CFA, -30)
          CFI (cfiCond21) R6L Frame(CFA, -28)
          CFI (cfiCond21) R6H Frame(CFA, -26)
          CFI (cfiCond21) R7L Frame(CFA, -24)
          CFI (cfiCond21) R7H Frame(CFA, -22)
          CFI (cfiCond21) R8L Frame(CFA, -20)
          CFI (cfiCond21) R8H Frame(CFA, -18)
          CFI (cfiCond21) R9L Frame(CFA, -16)
          CFI (cfiCond21) R9H Frame(CFA, -14)
          CFI (cfiCond21) R10L Frame(CFA, -12)
          CFI (cfiCond21) R10H Frame(CFA, -10)
          CFI (cfiCond21) R11L Frame(CFA, -8)
          CFI (cfiCond21) R11H Frame(CFA, -6)
          CFI (cfiCond21) CFA SP+48
          CFI Block cfiPicker22 Using cfiCommon1
          CFI (cfiPicker22) NoFunction
          CFI (cfiPicker22) Picker
        MOV.W   0x8(R8), R12
        MOV.W   0xa(R8), R13
        CALLA   #_Mul32f
        MOV.W   R12, 0x4(SP)
        MOV.W   R13, 0x6(SP)
        RETA
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiPicker22

        RSEG CODE:CODE:NOROOT(1)
PID_Cal:
          CFI Block cfiBlock23 Using cfiCommon0
          CFI Function PID_Cal
        FUNCALL PID_Cal, _Sub32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL PID_Cal, _Add32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL PID_Cal, _Mul32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL PID_Cal, _Sub32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL PID_Cal, _Mul32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL PID_Cal, _Add32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL PID_Cal, _Add32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL PID_Cal, _Mul32f
        LOCFRAME CSTACK, 40, STACK
        PUSHM.A #0x8, R11
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+36
        SUB.W   #0x4, SP
          CFI CFA SP+40
        CALLA   #?Subroutine1
??CrossCallReturnLabel_0:
        MOV.W   0x14(R8), R4
        MOV.W   0x16(R8), R5
        MOV.W   R12, R14
        MOV.W   R13, R15
        MOV.W   0x8(R8), R12
        MOV.W   0xa(R8), R13
        CALLA   #_Mul32f
        MOV.W   R12, R6
        MOV.W   R13, R7
        MOV.W   R4, R14
        MOV.W   R5, R15
        CALLA   #?Subroutine2
??CrossCallReturnLabel_9:
        MOV.W   R12, 0(SP)
        MOV.W   R13, 0x2(SP)
        MOV.W   R10, R14
        MOV.W   R11, R15
        MOV.W   R6, R12
        MOV.W   R7, R13
        CALLA   #_Add32f
        MOV.W   @SP, R14
        MOV.W   0x2(SP), R15
        CALLA   #_Add32f
        CALLA   #?Subroutine5
??CrossCallReturnLabel_6:
        MOV.W   R12, 0x20(R8)
        MOV.W   R13, 0x22(R8)
        MOV.W   R4, 0x18(R8)
        MOV.W   R5, 0x1a(R8)
        MOV.W   R10, 0x14(R8)
        MOV.W   R11, 0x16(R8)
        MOV.W   0x20(R8), 0x1c(R8)
        MOV.W   0x22(R8), 0x1e(R8)
          CFI EndBlock cfiBlock23
        REQUIRE ?Subroutine0
        // Fall through to label ?Subroutine0

        RSEG CODE:CODE:NOROOT(1)
?Subroutine0:
          CFI Block cfiBlock24 Using cfiCommon0
          CFI NoFunction
          CFI CFA SP+40
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
        MOV.W   0x20(R8), R12
        MOV.W   0x22(R8), R13
        ADD.W   #0x4, SP
          CFI CFA SP+36
        POPM.A  #0x8, R11
          CFI CFA SP+4
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R11L SameValue
          CFI R11H SameValue
        RETA
          CFI EndBlock cfiBlock24

        RSEG CODE:CODE:REORDER:NOROOT(1)
Position_PID_Cal:
          CFI Block cfiBlock25 Using cfiCommon0
          CFI Function Position_PID_Cal
        FUNCALL Position_PID_Cal, _Sub32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL Position_PID_Cal, _Add32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL Position_PID_Cal, _Mul32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL Position_PID_Cal, _Mul32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL Position_PID_Cal, _Sub32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL Position_PID_Cal, _Mul32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL Position_PID_Cal, _Add32f
        LOCFRAME CSTACK, 40, STACK
        FUNCALL Position_PID_Cal, _Add32f
        LOCFRAME CSTACK, 40, STACK
        PUSHM.A #0x8, R11
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+36
        SUB.W   #0x4, SP
          CFI CFA SP+40
        CALLA   #?Subroutine1
??CrossCallReturnLabel_1:
        MOV.W   R12, R14
        MOV.W   R13, R15
        CALLA   #?Subroutine3
??CrossCallReturnLabel_2:
        MOV.W   R10, R14
        MOV.W   R11, R15
        MOV.W   0x4(R8), R12
        MOV.W   0x6(R8), R13
        CALLA   #_Mul32f
        MOV.W   R12, R4
        MOV.W   R13, R5
        MOV.W   0x14(R8), R14
        MOV.W   0x16(R8), R15
        CALLA   #?Subroutine2
??CrossCallReturnLabel_10:
        MOV.W   R12, R6
        MOV.W   R13, R7
        MOV.W   @SP, R14
        MOV.W   0x2(SP), R15
        MOV.W   R4, R12
        MOV.W   R5, R13
        CALLA   #_Add32f
        MOV.W   R6, R14
        MOV.W   R7, R15
        CALLA   #?Subroutine4
//   49    
//   50     s_PID->LastError = Error; 				       // ¼òµ¥¸³ÖµÔËËã
??CrossCallReturnLabel_4:
        MOV.W   R10, 0x14(R8)
        MOV.W   R11, 0x16(R8)
//   51     s_PID->LastResult = s_PID->Result;			       // ¼òµ¥¸³ÖµÔËËã	     
        MOV.W   R12, 0x1c(R8)
        MOV.W   R13, 0x1e(R8)
//   52     return s_PID->Result;	
        JMP     ?Subroutine0
        NOP
          CFI EndBlock cfiBlock25
//   53 }

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine1:
          CFI Block cfiCond26 Using cfiCommon0
          CFI Function PID_Cal
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+44
          CFI Block cfiCond27 Using cfiCommon0
          CFI (cfiCond27) Function Position_PID_Cal
          CFI (cfiCond27) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond27) R4L Frame(CFA, -36)
          CFI (cfiCond27) R4H Frame(CFA, -34)
          CFI (cfiCond27) R5L Frame(CFA, -32)
          CFI (cfiCond27) R5H Frame(CFA, -30)
          CFI (cfiCond27) R6L Frame(CFA, -28)
          CFI (cfiCond27) R6H Frame(CFA, -26)
          CFI (cfiCond27) R7L Frame(CFA, -24)
          CFI (cfiCond27) R7H Frame(CFA, -22)
          CFI (cfiCond27) R8L Frame(CFA, -20)
          CFI (cfiCond27) R8H Frame(CFA, -18)
          CFI (cfiCond27) R9L Frame(CFA, -16)
          CFI (cfiCond27) R9H Frame(CFA, -14)
          CFI (cfiCond27) R10L Frame(CFA, -12)
          CFI (cfiCond27) R10H Frame(CFA, -10)
          CFI (cfiCond27) R11L Frame(CFA, -8)
          CFI (cfiCond27) R11H Frame(CFA, -6)
          CFI (cfiCond27) CFA SP+44
          CFI Block cfiPicker28 Using cfiCommon1
          CFI (cfiPicker28) NoFunction
          CFI (cfiPicker28) Picker
//   54 //±ÈÀýÍâÖÃÊ½PID
//   55 float PID_Cal(PID * s_PID,float now_point)
//   56 {  
        CALLA   #?Subroutine7
//   57     float Error = s_PID->SetPoint - now_point;
??CrossCallReturnLabel_12:
        MOV.W   R12, R10
        MOV.W   R13, R11
        MOV.W   R12, R14
        MOV.W   R13, R15
        MOV.W   0x10(R8), R12
        MOV.W   0x12(R8), R13
        CALLA   #_Add32f
        MOV.W   R12, 0x10(R8)
        MOV.W   R13, 0x12(R8)
        RETA
          CFI EndBlock cfiCond26
          CFI EndBlock cfiCond27
          CFI EndBlock cfiPicker28

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
//   58     s_PID->SumError += Error;
//   59     s_PID->Result = s_PID->Proportion *
//   60        (Error + s_PID->Integral * s_PID->SumError + s_PID->Derivative * (Error - s_PID->LastError) );
//   61    
//   62     s_PID->PrevError =s_PID->LastError;		               // ¼òµ¥¸³ÖµÔËËã
//   63     s_PID->LastError = Error; 				       // ¼òµ¥¸³ÖµÔËËã
//   64     s_PID->LastResult = s_PID->Result;			       // ¼òµ¥¸³ÖµÔËËã	     
//   65     return s_PID->Result;
//   66 }
// 
// 630 bytes in segment CODE
// 
// 630 bytes of CODE memory
//
//Errors: none
//Warnings: none
