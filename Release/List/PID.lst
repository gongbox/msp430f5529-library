###############################################################################
#                                                                             #
#                                                       06/Jun/2016  16:42:20 #
# IAR C/C++ Compiler V5.50.1.20465/W32, Evaluation edition for MSP430         #
# Copyright 1996-2012 IAR Systems AB.                                         #
#                                                                             #
#    __rt_version  =  3                                                       #
#    __double_size =  32                                                      #
#    __reg_r4      =  free                                                    #
#    __reg_r5      =  free                                                    #
#    __pic         =  no                                                      #
#    __core        =  430X                                                    #
#    __data_model  =  large                                                   #
#    Source file   =  C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\User\USER\PID.c                                  #
#    Command line  =  C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\User\USER\PID.c -D NDEBUG -D RAM_VECTOR -lC      #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Release\List\ -lA C:\Users\615\Desktop\MSP430\MS #
#                     P430F5529ø‚∫Ø ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\Release\List\ -o        #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Release\Obj\ -D__MSP430F5529__ -e --double=32    #
#                     --dlib_config "D:\Program Files (x86)\IAR               #
#                     Systems\Embedded Workbench 6.4                          #
#                     Evaluation\430\LIB\DLIB\dl430xlfn.h" -I                 #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\ -I C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø  #
#                     ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\Drivers\inc\ -I                       #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Drivers\src\ -I C:\Users\615\Desktop\MSP430\MSP4 #
#                     30F5529ø‚∫Ø ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\Drivers\src\USB\ -I       #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Drivers\src\USB\USB_config\ -I                   #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Drivers\src\USB\USB_User\ -I                     #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Drivers\srcUSB\USB_API\USB_CDC_API\ -I           #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Drivers\src\USB\USB_API\USB_HID_API\ -I          #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Drivers\src\USB\USB_API\USB_MSC_API\ -I          #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\HardWare\KEY\ -I C:\Users\615\Desktop\MSP430\MSP #
#                     430F5529ø‚∫Ø ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\HardWare\LED\ -I         #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\HardWare\12864\ -I C:\Users\615\Desktop\MSP430\M #
#                     SP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\HardWare\oled\ -I      #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\HardWare\mpu6050\inc\ -I                         #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\HardWare\mpu6050\src\ -I                         #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\HardWare\nokia5110\inc\ -I                       #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\HardWare\nokia5110\src\ -I                       #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\HardWare\LQ_1.8_TFT\ -I                          #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\HardWare\LCD_API\ -I                             #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\HardWare\2.2TFT\ -I                              #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\HardWare\delay\ -I C:\Users\615\Desktop\MSP430\M #
#                     SP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\System\ -I             #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\System\inc\ -I C:\Users\615\Desktop\MSP430\MSP43 #
#                     0F5529ø‚∫Ø ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\System\src\ -I             #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\User\ -I C:\Users\615\Desktop\MSP430\MSP430F5529 #
#                     ø‚∫Ø ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\User\USER\ -I                    #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Lib\UCOSII\CONFIG\ -I                            #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Lib\uCOSII\App\ -I C:\Users\615\Desktop\MSP430\M #
#                     SP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\Lib\uCOSII\CONFIHG\    #
#                     -I C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê #
#                     \π§≥Ãƒ£∞Â\Lib\uCOSII\PORT\ -I                           #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Lib\UCOSII\CORE\ -I                              #
#                     C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Lib\FatFs\ -I C:\Users\615\Desktop\MSP430\MSP430 #
#                     F5529ø‚∫Ø ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\Lib\FatFs\option\           #
#                     --core=430X --data_model=large -Oh --multiplier=32      #
#                     --multiplier_location=4C0 --hw_workaround=CPU40         #
#    List file     =  C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Release\List\PID.lst                             #
#    Object file   =  C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§ #
#                     ≥Ãƒ£∞Â\Release\Obj\PID.r43                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\615\Desktop\MSP430\MSP430F5529ø‚∫Ø ˝2.5\C∞Ê\π§≥Ãƒ£∞Â\User\USER\PID.c
      1          #include"PID.h"
      2          
      3          #include"math.h"
      4          //≥ı ºªØPIDΩ·ππÃÂ≤Œ ˝

   \                                 In  segment CODE, align 2
      5          void PID_Parameter_Init(PID * s_PID,float set_point,float Proportion,float Integral, float Derivative)
   \                     PID_Parameter_Init:
      6          {
   \   000000   5B14         PUSHM.A #0x6, R11
   \   000002   1A411C00     MOV.W   0x1c(SP), R10
   \   000006   1B411E00     MOV.W   0x1e(SP), R11
   \   00000A   18412000     MOV.W   0x20(SP), R8
   \   00000E   19412200     MOV.W   0x22(SP), R9
   \   000012   16412400     MOV.W   0x24(SP), R6
   \   000016   17412600     MOV.W   0x26(SP), R7
      7             s_PID->SetPoint = set_point;
   \   00001A   8C4E0000     MOV.W   R14, 0(R12)
   \   00001E   8C4F0200     MOV.W   R15, 0x2(R12)
      8             s_PID->Proportion = Proportion;
   \   000022   8C4A0400     MOV.W   R10, 0x4(R12)
   \   000026   8C4B0600     MOV.W   R11, 0x6(R12)
      9             s_PID->Integral = Integral;
   \   00002A   8C480800     MOV.W   R8, 0x8(R12)
   \   00002E   8C490A00     MOV.W   R9, 0xa(R12)
     10             s_PID->Derivative = Derivative;
   \   000032   8C460C00     MOV.W   R6, 0xc(R12)
   \   000036   8C470E00     MOV.W   R7, 0xe(R12)
     11             s_PID->LastError = 0;
   \   00003A   8C431400     MOV.W   #0x0, 0x14(R12)
   \   00003E   8C431600     MOV.W   #0x0, 0x16(R12)
     12             s_PID->PrevError = 0;
   \   000042   8C431800     MOV.W   #0x0, 0x18(R12)
   \   000046   8C431A00     MOV.W   #0x0, 0x1a(R12)
     13             s_PID->SumError = 0;
   \   00004A   8C431000     MOV.W   #0x0, 0x10(R12)
   \   00004E   8C431200     MOV.W   #0x0, 0x12(R12)
     14             s_PID->LastResult = 0;
   \   000052   8C431C00     MOV.W   #0x0, 0x1c(R12)
   \   000056   8C431E00     MOV.W   #0x0, 0x1e(R12)
     15             s_PID->Result = 0;
   \   00005A   8C432000     MOV.W   #0x0, 0x20(R12)
   \   00005E   8C432200     MOV.W   #0x0, 0x22(R12)
     16          }
   \   000062   5616         POPM.A  #0x6, R11
   \   000064   1001         RETA
     17          //…Ë÷√ƒø±Í÷µ

   \                                 In  segment CODE, align 2
     18          void  PID_SetPoint     (PID * s_PID, float set_point)    
   \                     PID_SetPoint:
     19          {
     20             s_PID->SetPoint = set_point;
   \   000000   8C4E0000     MOV.W   R14, 0(R12)
   \   000004   8C4F0200     MOV.W   R15, 0x2(R12)
     21          }
   \   000008   1001         RETA
     22          //‘ˆ¡ø ΩPIDº∆À„

   \                                 In  segment CODE, align 2
   \                     ?Subroutine6:
   \   000000   1E480C00     MOV.W   0xc(R8), R14
   \   000004   1F480E00     MOV.W   0xe(R8), R15
   \   000008   ........     BRA     #_Mul32f

   \                                 In  segment CODE, align 2
     23          float Increment_PID_Cal(PID * s_PID,float now_point)
   \                     Increment_PID_Cal:
     24          {
   \   000000   7B14         PUSHM.A #0x8, R11
   \   000002   3182         SUB.W   #0x8, SP
   \   000004   ........     CALLA   #?Subroutine7
     25            //PIDº∆À„   
     26              float Error = s_PID->SetPoint - now_point;
   \                     ??CrossCallReturnLabel_11:
   \   000008   064C         MOV.W   R12, R6
   \   00000A   074D         MOV.W   R13, R7
   \   00000C   1E481400     MOV.W   0x14(R8), R14
   \   000010   1F481600     MOV.W   0x16(R8), R15
   \   000014   ........     CALLA   #_Sub32f
   \   000018   814C0000     MOV.W   R12, 0(SP)
   \   00001C   814D0200     MOV.W   R13, 0x2(SP)
   \   000020   ........     CALLA   #?Subroutine5
   \                     ??CrossCallReturnLabel_7:
   \   000024   0A4C         MOV.W   R12, R10
   \   000026   0B4D         MOV.W   R13, R11
   \   000028   0E46         MOV.W   R6, R14
   \   00002A   0F47         MOV.W   R7, R15
   \   00002C   ........     CALLA   #?Subroutine3
   \                     ??CrossCallReturnLabel_3:
   \   000030   1E481C00     MOV.W   0x1c(R8), R14
   \   000034   1F481E00     MOV.W   0x1e(R8), R15
   \   000038   0C4A         MOV.W   R10, R12
   \   00003A   0D4B         MOV.W   R11, R13
   \   00003C   ........     CALLA   #_Add32f
   \   000040   814C0400     MOV.W   R12, 0x4(SP)
   \   000044   814D0600     MOV.W   R13, 0x6(SP)
   \   000048   0E43         MOV.W   #0x0, R14
   \   00004A   3F400040     MOV.W   #0x4000, R15
   \   00004E   1C481400     MOV.W   0x14(R8), R12
   \   000052   1D481600     MOV.W   0x16(R8), R13
   \   000056   ........     CALLA   #_Mul32f
   \   00005A   0E4C         MOV.W   R12, R14
   \   00005C   0F4D         MOV.W   R13, R15
   \   00005E   0C46         MOV.W   R6, R12
   \   000060   0D47         MOV.W   R7, R13
   \   000062   ........     CALLA   #_Sub32f
   \   000066   1E481800     MOV.W   0x18(R8), R14
   \   00006A   1F481A00     MOV.W   0x1a(R8), R15
   \   00006E   ........     CALLA   #_Add32f
   \   000072   ........     CALLA   #?Subroutine6
   \                     ??CrossCallReturnLabel_8:
   \   000076   044C         MOV.W   R12, R4
   \   000078   054D         MOV.W   R13, R5
   \   00007A   2E41         MOV.W   @SP, R14
   \   00007C   1F410200     MOV.W   0x2(SP), R15
   \   000080   1C410400     MOV.W   0x4(SP), R12
   \   000084   1D410600     MOV.W   0x6(SP), R13
   \   000088   ........     CALLA   #_Add32f
   \   00008C   0E44         MOV.W   R4, R14
   \   00008E   0F45         MOV.W   R5, R15
   \   000090   ........     CALLA   #?Subroutine4
     27              
     28              s_PID->Result = s_PID->LastResult 
     29          	      +(float)s_PID->Proportion  * (Error - s_PID->LastError)                          // ±»¿˝œÓ
     30          	      +(float)s_PID->Integral    *  Error	                                       // ª˝∑÷œÓ 
     31                        +(float)s_PID->Derivative  * (Error - 2*(s_PID->LastError) + s_PID->PrevError);  // Œ¢∑÷œÓ
     32             
     33              s_PID->PrevError = s_PID->LastError;		               // ºÚµ•∏≥÷µ‘ÀÀ„
   \                     ??CrossCallReturnLabel_5:
   \   000094   984814001800 MOV.W   0x14(R8), 0x18(R8)
   \   00009A   984816001A00 MOV.W   0x16(R8), 0x1a(R8)
     34              s_PID->LastError = Error; 				       // ºÚµ•∏≥÷µ‘ÀÀ„
   \   0000A0   88461400     MOV.W   R6, 0x14(R8)
   \   0000A4   88471600     MOV.W   R7, 0x16(R8)
     35              s_PID->LastResult = s_PID->Result;					       // ºÚµ•∏≥÷µ‘ÀÀ„	     
   \   0000A8   884C1C00     MOV.W   R12, 0x1c(R8)
   \   0000AC   884D1E00     MOV.W   R13, 0x1e(R8)
     36              return s_PID->Result;	
   \   0000B0   3152         ADD.W   #0x8, SP
   \   0000B2   7416         POPM.A  #0x8, R11
   \   0000B4   1001         RETA
     37          }

   \                                 In  segment CODE, align 2
   \                     ?Subroutine7:
   \   000000   C80C         MOVA    R12, R8
   \   000002   2C48         MOV.W   @R8, R12
   \   000004   1D480200     MOV.W   0x2(R8), R13
   \   000008   ........     BRA     #_Sub32f

   \                                 In  segment CODE, align 2
   \                     ?Subroutine5:
   \   000000   1E480400     MOV.W   0x4(R8), R14
   \   000004   1F480600     MOV.W   0x6(R8), R15
   \   000008   ........     BRA     #_Mul32f

   \                                 In  segment CODE, align 2
   \                     ?Subroutine4:
   \   000000   ........     CALLA   #_Add32f
   \   000004   884C2000     MOV.W   R12, 0x20(R8)
   \   000008   884D2200     MOV.W   R13, 0x22(R8)
   \   00000C   1001         RETA

   \                                 In  segment CODE, align 2
   \                     ?Subroutine3:
   \   000000   1C480800     MOV.W   0x8(R8), R12
   \   000004   1D480A00     MOV.W   0xa(R8), R13
   \   000008   ........     CALLA   #_Mul32f
   \   00000C   814C0400     MOV.W   R12, 0x4(SP)
   \   000010   814D0600     MOV.W   R13, 0x6(SP)
   \   000014   1001         RETA
     38          //Œª÷√ ΩPIDº∆À„

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine2:
   \   000000   0C4A         MOV.W   R10, R12
   \   000002   0D4B         MOV.W   R11, R13
   \   000004   ........     CALLA   #_Sub32f
   \   000008                REQUIRE ?Subroutine6
   \   000008                // Fall through to label ?Subroutine6

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine0:
   \   000000   1C482000     MOV.W   0x20(R8), R12
   \   000004   1D482200     MOV.W   0x22(R8), R13
   \   000008   2152         ADD.W   #0x4, SP
   \   00000A   7416         POPM.A  #0x8, R11
   \   00000C   1001         RETA

   \                                 In  segment CODE, align 2
     39          float Position_PID_Cal(PID * s_PID,float now_point)
   \                     Position_PID_Cal:
     40          {
   \   000000   7B14         PUSHM.A #0x8, R11
   \   000002   2182         SUB.W   #0x4, SP
   \   000004   ........     CALLA   #?Subroutine1
     41            //PIDº∆À„   
     42              float Error = s_PID->SetPoint - now_point;
     43              
     44              s_PID->SumError += Error;                            //ª˝∑÷ŒÛ≤Ó¿€º”
     45              
     46              s_PID->Result = (float)s_PID->Proportion  *  Error                          // ±»¿˝œÓ
     47                             +(float)s_PID->Integral    *  s_PID->SumError	        // ª˝∑÷œÓ 
     48                             +(float)s_PID->Derivative  * (Error - s_PID->LastError);     // Œ¢∑÷œÓ
   \                     ??CrossCallReturnLabel_1:
   \   000008   0E4C         MOV.W   R12, R14
   \   00000A   0F4D         MOV.W   R13, R15
   \   00000C   ........     CALLA   #?Subroutine3
   \                     ??CrossCallReturnLabel_2:
   \   000010   0E4A         MOV.W   R10, R14
   \   000012   0F4B         MOV.W   R11, R15
   \   000014   1C480400     MOV.W   0x4(R8), R12
   \   000018   1D480600     MOV.W   0x6(R8), R13
   \   00001C   ........     CALLA   #_Mul32f
   \   000020   044C         MOV.W   R12, R4
   \   000022   054D         MOV.W   R13, R5
   \   000024   1E481400     MOV.W   0x14(R8), R14
   \   000028   1F481600     MOV.W   0x16(R8), R15
   \   00002C   ........     CALLA   #?Subroutine2
   \                     ??CrossCallReturnLabel_10:
   \   000030   064C         MOV.W   R12, R6
   \   000032   074D         MOV.W   R13, R7
   \   000034   2E41         MOV.W   @SP, R14
   \   000036   1F410200     MOV.W   0x2(SP), R15
   \   00003A   0C44         MOV.W   R4, R12
   \   00003C   0D45         MOV.W   R5, R13
   \   00003E   ........     CALLA   #_Add32f
   \   000042   0E46         MOV.W   R6, R14
   \   000044   0F47         MOV.W   R7, R15
   \   000046   ........     CALLA   #?Subroutine4
     49             
     50              s_PID->LastError = Error; 				       // ºÚµ•∏≥÷µ‘ÀÀ„
   \                     ??CrossCallReturnLabel_4:
   \   00004A   884A1400     MOV.W   R10, 0x14(R8)
   \   00004E   884B1600     MOV.W   R11, 0x16(R8)
     51              s_PID->LastResult = s_PID->Result;			       // ºÚµ•∏≥÷µ‘ÀÀ„	     
   \   000052   884C1C00     MOV.W   R12, 0x1c(R8)
   \   000056   884D1E00     MOV.W   R13, 0x1e(R8)
     52              return s_PID->Result;	
   \   00005A   ....         JMP     ?Subroutine0
   \   00005C   0343         NOP
     53          }

   \                                 In  segment CODE, align 2
   \                     ?Subroutine1:
   \   000000   ........     CALLA   #?Subroutine7
   \                     ??CrossCallReturnLabel_12:
   \   000004   0A4C         MOV.W   R12, R10
   \   000006   0B4D         MOV.W   R13, R11
   \   000008   0E4C         MOV.W   R12, R14
   \   00000A   0F4D         MOV.W   R13, R15
   \   00000C   1C481000     MOV.W   0x10(R8), R12
   \   000010   1D481200     MOV.W   0x12(R8), R13
   \   000014   ........     CALLA   #_Add32f
   \   000018   884C1000     MOV.W   R12, 0x10(R8)
   \   00001C   884D1200     MOV.W   R13, 0x12(R8)
   \   000020   1001         RETA
     54          //±»¿˝Õ‚÷√ ΩPID

   \                                 In  segment CODE, align 2, keep-with-next
     55          float PID_Cal(PID * s_PID,float now_point)
   \                     PID_Cal:
     56          {  
   \   000000   7B14         PUSHM.A #0x8, R11
   \   000002   2182         SUB.W   #0x4, SP
   \   000004   ........     CALLA   #?Subroutine1
     57              float Error = s_PID->SetPoint - now_point;
     58              s_PID->SumError += Error;
     59              s_PID->Result = s_PID->Proportion *
     60                 (Error + s_PID->Integral * s_PID->SumError + s_PID->Derivative * (Error - s_PID->LastError) );
   \                     ??CrossCallReturnLabel_0:
   \   000008   14481400     MOV.W   0x14(R8), R4
   \   00000C   15481600     MOV.W   0x16(R8), R5
   \   000010   0E4C         MOV.W   R12, R14
   \   000012   0F4D         MOV.W   R13, R15
   \   000014   1C480800     MOV.W   0x8(R8), R12
   \   000018   1D480A00     MOV.W   0xa(R8), R13
   \   00001C   ........     CALLA   #_Mul32f
   \   000020   064C         MOV.W   R12, R6
   \   000022   074D         MOV.W   R13, R7
   \   000024   0E44         MOV.W   R4, R14
   \   000026   0F45         MOV.W   R5, R15
   \   000028   ........     CALLA   #?Subroutine2
   \                     ??CrossCallReturnLabel_9:
   \   00002C   814C0000     MOV.W   R12, 0(SP)
   \   000030   814D0200     MOV.W   R13, 0x2(SP)
   \   000034   0E4A         MOV.W   R10, R14
   \   000036   0F4B         MOV.W   R11, R15
   \   000038   0C46         MOV.W   R6, R12
   \   00003A   0D47         MOV.W   R7, R13
   \   00003C   ........     CALLA   #_Add32f
   \   000040   2E41         MOV.W   @SP, R14
   \   000042   1F410200     MOV.W   0x2(SP), R15
   \   000046   ........     CALLA   #_Add32f
   \   00004A   ........     CALLA   #?Subroutine5
   \                     ??CrossCallReturnLabel_6:
   \   00004E   884C2000     MOV.W   R12, 0x20(R8)
   \   000052   884D2200     MOV.W   R13, 0x22(R8)
     61             
     62              s_PID->PrevError =s_PID->LastError;		               // ºÚµ•∏≥÷µ‘ÀÀ„
   \   000056   88441800     MOV.W   R4, 0x18(R8)
   \   00005A   88451A00     MOV.W   R5, 0x1a(R8)
     63              s_PID->LastError = Error; 				       // ºÚµ•∏≥÷µ‘ÀÀ„
   \   00005E   884A1400     MOV.W   R10, 0x14(R8)
   \   000062   884B1600     MOV.W   R11, 0x16(R8)
     64              s_PID->LastResult = s_PID->Result;			       // ºÚµ•∏≥÷µ‘ÀÀ„	     
   \   000066   984820001C00 MOV.W   0x20(R8), 0x1c(R8)
   \   00006C   984822001E00 MOV.W   0x22(R8), 0x1e(R8)
     65              return s_PID->Result;
   \   000072                REQUIRE ?Subroutine0
   \   000072                // Fall through to label ?Subroutine0
     66          }

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      44  Increment_PID_Cal
            44 -> _Add32f
            44 -> _Mul32f
            44 -> _Sub32f
      40  PID_Cal
            40 -> _Add32f
            40 -> _Mul32f
            40 -> _Sub32f
      28  PID_Parameter_Init
       4  PID_SetPoint
      40  Position_PID_Cal
            40 -> _Add32f
            40 -> _Mul32f
            40 -> _Sub32f


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      14  ?Subroutine0
      34  ?Subroutine1
       8  ?Subroutine2
      22  ?Subroutine3
      14  ?Subroutine4
      12  ?Subroutine5
      12  ?Subroutine6
      12  ?Subroutine7
     182  Increment_PID_Cal
     114  PID_Cal
     102  PID_Parameter_Init
      10  PID_SetPoint
      94  Position_PID_Cal

 
 630 bytes in segment CODE
 
 630 bytes of CODE memory

Errors: none
Warnings: none
