///////////////////////////////////////////////////////////////////////////////
//                                                                            /
//                                                      06/Jun/2016  16:42:36 /
// IAR C/C++ Compiler V5.50.1.20465/W32, Evaluation edition for MSP430        /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    __rt_version  =  3                                                      /
//    __double_size =  32                                                     /
//    __reg_r4      =  free                                                   /
//    __reg_r5      =  free                                                   /
//    __pic         =  no                                                     /
//    __core        =  430X                                                   /
//    __data_model  =  large                                                  /
//    Source file   =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\uart.c                             /
//    Command line  =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\uart.c -D NDEBUG -D RAM_VECTOR     /
//                     -lC C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C /
//                     °æ\¹¤³ÌÄ£°å\Release\List\ -lA                          /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Release\List\ -o C:\Users\615\Desktop\MSP430\M /
//                     SP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Release\Obj\          /
//                     -D__MSP430F5529__ -e --double=32 --dlib_config         /
//                     "D:\Program Files (x86)\IAR Systems\Embedded           /
//                     Workbench 6.4 Evaluation\430\LIB\DLIB\dl430xlfn.h" -I  /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\ -I C:\Users\615\Desktop\MSP430\MSP430F5529¿âº /
//                     ¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\inc\ -I                    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\ -I C:\Users\615\Desktop\MSP430\MS /
//                     P430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\src\USB\ -I    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_config\ -I                 /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_User\ -I                   /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\srcUSB\USB_API\USB_CDC_API\ -I         /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_API\USB_HID_API\ -I        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_API\USB_MSC_API\ -I        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\KEY\ -I C:\Users\615\Desktop\MSP430\M /
//                     SP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\HardWare\LED\ -I      /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\12864\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\oled\ -I C:\Users\615\Desktop\MSP430\ /
//                     MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\HardWare\mpu6050\inc /
//                     \ -I C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\ /
//                     C°æ\¹¤³ÌÄ£°å\HardWare\mpu6050\src\ -I                  /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\nokia5110\inc\ -I                     /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\nokia5110\src\ -I                     /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\LQ_1.8_TFT\ -I                        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\LCD_API\ -I                           /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\2.2TFT\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\delay\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\System\ -I C:\Users\615\Desktop\MSP430\MSP430F /
//                     5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\System\inc\ -I              /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\System\src\ -I C:\Users\615\Desktop\MSP430\MSP /
//                     430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\User\ -I                /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\User\USER\ -I C:\Users\615\Desktop\MSP430\MSP4 /
//                     30F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Lib\UCOSII\CONFIG\ -I    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\App\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\CONFIHG\ -I                         /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\PORT\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\UCOSII\CORE\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\FatFs\ -I C:\Users\615\Desktop\MSP430\MSP4 /
//                     30F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Lib\FatFs\option\        /
//                     --core=430X --data_model=large -Oh --multiplier=32     /
//                     --multiplier_location=4C0 --hw_workaround=CPU40        /
//    List file     =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Release\List\uart.s43                          /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME uart

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__core", "430X"
        RTMODEL "__data_model", "large"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__double_size", "32"
        RTMODEL "__iar_require _Printf", "unknown"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBLIC UART_ClearITPendingBit
        FUNCTION UART_ClearITPendingBit,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC UART_GetChar
        FUNCTION UART_GetChar,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC UART_GetITStatus
        FUNCTION UART_GetITStatus,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC UART_ITConfig
        FUNCTION UART_ITConfig,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC UART_Init
        FUNCTION UART_Init,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 20, STACK
        PUBLIC UART_PIN
        PUBLIC UART_Printf
        FUNCTION UART_Printf,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 148, STACK
        PUBLIC UART_PutChar
        FUNCTION UART_PutChar,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC UART_PutNChar
        FUNCTION UART_PutNChar,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 20, STACK
        PUBLIC UART_PutString
        FUNCTION UART_PutString,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 8, STACK
        PUBLIC UART_SetBaudRate
        FUNCTION UART_SetBaudRate,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 28, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:20, SP:20, SR:16, R4L:16, R4H:4, R4:20, R5L:16, R5H:4
          CFI Resource R5:20, R6L:16, R6H:4, R6:20, R7L:16, R7H:4, R7:20, R8L:16
          CFI Resource R8H:4, R8:20, R9L:16, R9H:4, R9:20, R10L:16, R10H:4
          CFI Resource R10:20, R11L:16, R11H:4, R11:20, R12L:16, R12H:4, R12:20
          CFI Resource R13L:16, R13H:4, R13:20, R14L:16, R14H:4, R14:20, R15L:16
          CFI Resource R15H:4, R15:20
          CFI ResourceParts R4 R4H, R4L
          CFI ResourceParts R5 R5H, R5L
          CFI ResourceParts R6 R6H, R6L
          CFI ResourceParts R7 R7H, R7L
          CFI ResourceParts R8 R8H, R8L
          CFI ResourceParts R9 R9H, R9L
          CFI ResourceParts R10 R10H, R10L
          CFI ResourceParts R11 R11H, R11L
          CFI ResourceParts R12 R12H, R12L
          CFI ResourceParts R13 R13H, R13L
          CFI ResourceParts R14 R14H, R14L
          CFI ResourceParts R15 R15H, R15L
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L Undefined
          CFI R12H Undefined
          CFI R12 Undefined
          CFI R13L Undefined
          CFI R13H Undefined
          CFI R13 Undefined
          CFI R14L Undefined
          CFI R14H Undefined
          CFI R14 Undefined
          CFI R15L Undefined
          CFI R15H Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L SameValue
          CFI R12H SameValue
          CFI R12 Concat
          CFI R13L SameValue
          CFI R13H SameValue
          CFI R13 Concat
          CFI R14L SameValue
          CFI R14H SameValue
          CFI R14 Concat
          CFI R15L SameValue
          CFI R15H SameValue
          CFI R15 Concat
          CFI EndCommon cfiCommon1
        
        EXTERN USCIX
        EXTERN vsprintf
        FUNCTION vsprintf,010202H
        EXTERN _Cast32uto32f
        FUNCTION _Cast32uto32f,0202H
        EXTERN g_sClock
        EXTERN _Div32f
        FUNCTION _Div32f,0202H
        EXTERN _Cast32fto32u
        FUNCTION _Cast32fto32u,0202H
        EXTERN _Sub32f
        FUNCTION _Sub32f,0202H
        EXTERN _Mul32f
        FUNCTION _Mul32f,0202H
        EXTERN GPIO_MultiBits_Init
        FUNCTION GPIO_MultiBits_Init,0202H

// C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\src\uart.c
//    1 #include "uart.h"
//    2 #include "clock.h"
//    3 #include "system.h"
//    4 #include "gpio.h"
//    5 #include <stdio.h>
//    6 #include <stdarg.h>
//    7 const struct
//    8 {
//    9   IO_PIN TX;
//   10   IO_PIN RX;

        RSEG DATA20_C:CONST:SORT:NOROOT(0)
//   11 }UART_PIN[]=
UART_PIN:
        DC8 2, 3, 2, 4, 3, 4, 3, 5
//   12 {
//   13   /*UART0*/{.TX={P3,3},.RX={P3,4}},        
//   14   /*UART1*/{.TX={P4,4},.RX={P4,5}}
//   15 }; //Òý½ÅÊý×é
//   16 /*******************************************************************************
//   17 *  º¯ÊýÃû³Æ£ºUART_Init(UARTn uartn,uint32_t BaudRate)
//   18 *  ¹¦ÄÜËµÃ÷£º³õÊ¼»¯´®¿Ú£¬ÉèÖÃ²¨ÌØÂÊ
//   19 *  ²ÎÊýËµÃ÷£ºUARTn uartn       Ä£¿éºÅ£¨UART0~UART1£©
//   20              uint32_t BaudRate : ²¨ÌØÂÊ£¬Èç9600¡¢19200¡¢115200µÈ
//   21 *  º¯Êý·µ»Ø£º²»³É¹¦Ôò·µ»ØERROR£¬³É¹¦Ôò·µ»ØSUCCEED
//   22 *  Ê¹ÓÃÊ¾Àý£ºUART_Init(UART0,115200);   //³õÊ¼»¯Ò»¸öUARTÄ£¿é£¬²¨ÌØÂÊÎª115200
//   23 *******************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   24 STATUS UART_Init(UARTn uartn,uint32_t BaudRate)
UART_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function UART_Init
//   25 {      
        FUNCALL UART_Init, GPIO_MultiBits_Init
        LOCFRAME CSTACK, 20, STACK
        FUNCALL UART_Init, GPIO_MultiBits_Init
        LOCFRAME CSTACK, 20, STACK
        FUNCALL UART_Init, UART_SetBaudRate
        LOCFRAME CSTACK, 20, STACK
        PUSHM.A #0x4, R11
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+20
        MOV.B   R12, R9
        MOV.W   R14, R10
        MOV.W   R15, R11
//   26   //Òý½Å³õÊ¼»¯
//   27   GPIO_Init(UART_PIN[uartn].TX.Port,UART_PIN[uartn].TX.Pin,SEL);
        MOV.B   R12, R8
        RLAM.A  #0x2, R8
        MOV.W   #0x100, R14
        MOV.W   #0x1, R13
        MOVX.B  UART_PIN + 1(R8), R15
        SUB.B   #0x1, R15
        JN      ??UART_Init_0
        RPT     R15
        RLAX.W  R13
??UART_Init_0:
        MOVX.B  UART_PIN(R8), R12
        CALLA   #GPIO_MultiBits_Init
//   28   GPIO_Init(UART_PIN[uartn].RX.Port,UART_PIN[uartn].RX.Pin,SEL);
        MOV.W   #0x100, R14
        MOV.W   #0x1, R13
        MOVX.B  UART_PIN + 3(R8), R15
        SUB.B   #0x1, R15
        JN      ??UART_Init_1
        RPT     R15
        RLAX.W  R13
??UART_Init_1:
        MOVX.B  UART_PIN + 2(R8), R12
        CALLA   #GPIO_MultiBits_Init
//   29   
//   30   UART_SetBaudRate (uartn, BaudRate);                            //ÉèÖÃ´®¿Ú²¨ÌØÂÊ
        MOV.W   R10, R14
        MOV.W   R11, R15
        MOV.B   R9, R12
        CALLA   #UART_SetBaudRate
//   31   
//   32   USCIX[uartn]->IE = 0u;                                         //¹Ø±ÕËùÓÐÖÐ¶Ï
        MOVX.A  USCIX(R8), R11
        MOV.B   #0x0, 0x1c(R11)
//   33   USCIX[uartn]->RXIFG = RESET;                                   //Çå³ý½ÓÊÕÊý¾Ý±êÖ¾
        BIC.B   #0x1, 0x1d(R11)
//   34   USCIX[uartn]->TXIFG = SET;                                     //ÖÃÎ»·¢ËÍ»º³åÇøÎª¿Õ±êÖ¾
        BIS.B   #0x2, 0x1d(R11)
//   35   
//   36   return SUCCEED;
        MOV.B   #0x1, R12
        POPM.A  #0x4, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock0
//   37 }
//   38 /*******************************************************************************
//   39 *  º¯ÊýÃû³Æ£ºUART_SetBaudRate (UARTn uartn, uint32_t BaudRate)
//   40 *  ¹¦ÄÜËµÃ÷£ºÉèÖÃ´®¿Ú²¨ÌØÂÊ
//   41 *  ²ÎÊýËµÃ÷£ºUARTn uartn       Ä£¿éºÅ£¨UART0~UART1£©
//   42              uint32_t BaudRate : ²¨ÌØÂÊ£¬Èç9600¡¢19200¡¢115200µÈ
//   43 *  º¯Êý·µ»Ø£ºÎÞ
//   44 *******************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   45 void UART_SetBaudRate (UARTn uartn, uint32_t BaudRate)
UART_SetBaudRate:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function UART_SetBaudRate
//   46 {
        FUNCALL UART_SetBaudRate, _Cast32uto32f
        LOCFRAME CSTACK, 28, STACK
        FUNCALL UART_SetBaudRate, _Cast32uto32f
        LOCFRAME CSTACK, 28, STACK
        FUNCALL UART_SetBaudRate, _Div32f
        LOCFRAME CSTACK, 28, STACK
        FUNCALL UART_SetBaudRate, _Cast32fto32u
        LOCFRAME CSTACK, 28, STACK
        FUNCALL UART_SetBaudRate, _Cast32uto32f
        LOCFRAME CSTACK, 28, STACK
        FUNCALL UART_SetBaudRate, _Sub32f
        LOCFRAME CSTACK, 28, STACK
        FUNCALL UART_SetBaudRate, _Mul32f
        LOCFRAME CSTACK, 28, STACK
        FUNCALL UART_SetBaudRate, _Cast32fto32u
        LOCFRAME CSTACK, 28, STACK
        PUSHM.A #0x6, R11
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+28
        MOV.B   R12, R8
//   47   float BRTemp = (float)g_sClock.SMCLK.CLK_HZ/(float)BaudRate;
        MOV.W   R14, R12
        MOV.W   R15, R13
        CALLA   #_Cast32uto32f
        MOV.W   R12, R10
        MOV.W   R13, R11
        MOVX.W  &g_sClock + 12, R12
        MOVX.W  &g_sClock + 14, R13
        CALLA   #_Cast32uto32f
        MOV.W   R10, R14
        MOV.W   R11, R15
        CALLA   #_Div32f
        MOV.W   R12, R6
        MOV.W   R13, R7
//   48   
//   49   USCIX[uartn]->CTL1 = UCSSEL__SMCLK + UCSWRST;                //ÉèÖÃÊ±ÖÓÔ´
        RLAM.A  #0x2, R8
        MOVX.A  USCIX(R8), R8
        MOV.B   #0x81, 0(R8)
//   50  
//   51   USCIX[uartn]->BRW = (uint16_t)BRTemp;                                 //ÉèÖÃ²¨ÌØÂÊ
        CALLA   #_Cast32fto32u
        MOV.W   R12, 0x6(R8)
//   52   USCIX[uartn]->BRS = (uint16_t)((BRTemp-(uint16_t)(BRTemp))*8.0);        //ÉèÖÃµ÷Õû²¨ÌØÂÊ
        MOV.W   #0x0, R13
        CALLA   #_Cast32uto32f
        MOV.W   R12, R14
        MOV.W   R13, R15
        MOV.W   R6, R12
        MOV.W   R7, R13
        CALLA   #_Sub32f
        MOV.W   #0x0, R14
        MOV.W   #0x4100, R15
        CALLA   #_Mul32f
        CALLA   #_Cast32fto32u
        RLA.B   R12
        AND.B   #0xe, R12
        MOV.B   0x8(R8), R14
        AND.B   #0xf1, R14
        BIS.B   R12, R14
        MOV.B   R14, 0x8(R8)
//   53   USCIX[uartn]->BRF = 0u;
        AND.B   #0xf, 0x8(R8)
//   54   
//   55   //¹ý²ÉÑùÄ£Ê½
//   56   /*
//   57   USCIX[uartn]->BRW =(uint16_t)(BRTemp/16);                                 //ÉèÖÃ²¨ÌØÂÊ
//   58   USCIX[uartn]->BRS = 0u;
//   59   USCIX[uartn]->BRF =(uint16_t)((BRTemp/16.0-(uint16_t)(BRTemp/16.0))*16.0);  //ÉèÖÃµ÷Õû²¨ÌØÂÊ
//   60   */
//   61   USCIX[uartn]->CTL1 &= ~UCSWRST;       
        BIC.B   #0x1, 0(R8)
//   62 }
        POPM.A  #0x6, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R6H SameValue
          CFI R7H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R6L SameValue
          CFI R7L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock1
//   63 /*******************************************************************************
//   64 *  º¯ÊýÃû³Æ£ºUART_GetChar    (UARTn uartn)
//   65 *  ¹¦ÄÜËµÃ÷£ºÎÞÏÞÊ±¼äµÈ´ý´®¿Ú½ÓÊÜÒ»¸ö×Ö½Ú
//   66 *  ²ÎÊýËµÃ÷£ºUARTn uartn     Ä£¿éºÅ£¨UART0~UART1£©
//   67 *  º¯Êý·µ»Ø£º½ÓÊÕµ½µÄ×Ö½ÚÊý¾Ý
//   68 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   69 char UART_GetChar    (UARTn uartn)
UART_GetChar:
??UART_GetChar_0:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function UART_GetChar
//   70 {
//   71   while(USCIX[uartn]->RXIFG == RESET);               //µÈ´ý½ÓÊÕµ½Êý¾Ý
        MOV.B   R12, R15
        RLAM.A  #0x2, R15
        MOVX.A  USCIX(R15), R15
        BIT.B   #0x1, 0x1d(R15)
        JNC     ??UART_GetChar_0
//   72   return (USCIX[uartn]->RXBUF);
        MOV.B   0xc(R15), R12
        RETA
          CFI EndBlock cfiBlock2
//   73 }
//   74 /*************************************************************************
//   75 *  º¯ÊýÃû³Æ£ºUART_PutChar
//   76 *  ¹¦ÄÜËµÃ÷£º´®¿Ú·¢ËÍÒ»¸ö×Ö½Ú
//   77 *  ²ÎÊýËµÃ÷£ºUARTn uartn      Ä£¿éºÅ£¨UART0~UART1£©
//   78 *  º¯Êý·µ»Ø£ºÎÞ
//   79 *  Ê¹ÓÃÊ¾Àý£ºUART_PutChar(UART0,0x02);   //·¢ËÍÒ»×Ö½ÚÊý¾Ý
//   80 *************************************************************************/  

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine0:
          CFI Block cfiCond3 Using cfiCommon0
          CFI Function UART_ClearITPendingBit
          CFI Conditional ??CrossCallReturnLabel_0
          CFI CFA SP+8
          CFI Block cfiCond4 Using cfiCommon0
          CFI (cfiCond4) Function UART_GetITStatus
          CFI (cfiCond4) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond4) CFA SP+8
          CFI Block cfiCond5 Using cfiCommon0
          CFI (cfiCond5) Function UART_ITConfig
          CFI (cfiCond5) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond5) CFA SP+8
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function UART_PutChar
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond6) CFA SP+8
          CFI Block cfiPicker7 Using cfiCommon1
          CFI (cfiPicker7) NoFunction
          CFI (cfiPicker7) Picker
        MOV.B   R12, R12
        RLAM.A  #0x2, R12
        MOVX.A  USCIX(R12), R15
        RETA
          CFI EndBlock cfiCond3
          CFI EndBlock cfiCond4
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiPicker7

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   81 void UART_PutChar(UARTn uartn,char data)
UART_PutChar:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI Function UART_PutChar
//   82 {
//   83     if(data == '\n')
        CALLA   #?Subroutine0
??CrossCallReturnLabel_3:
        CMP.B   #0xa, R13
        JNE     ??UART_PutChar_1
//   84     {
//   85       while (USCIX[uartn]->TXIFG == RESET);          //µÈ´ý·¢ËÍ»º³åÇøÎª¿Õ
??UART_PutChar_0:
        BIT.B   #0x2, 0x1d(R15)
        JNC     ??UART_PutChar_0
//   86       USCIX[uartn]->TXBUF = '\r';                    // 
        MOV.B   #0xd, 0xe(R15)
//   87     }
//   88     while (USCIX[uartn]->TXIFG == RESET);            //µÈ´ý·¢ËÍ»º³åÇøÎª¿Õ
??UART_PutChar_1:
        BIT.B   #0x2, 0x1d(R15)
        JNC     ??UART_PutChar_1
//   89     USCIX[uartn]->TXBUF = data;                      // 
        MOV.B   R13, 0xe(R15)
//   90 }
        RETA
          CFI EndBlock cfiBlock8
//   91 /*************************************************************************
//   92 *  º¯ÊýÃû³Æ£ºUart_PutNChar
//   93 *  ¹¦ÄÜËµÃ÷£º´®¿Ú·¢ËÍÖ¸¶¨³¤¶È¸ö×Ö½ÚÊý¾Ý
//   94 *  ²ÎÊýËµÃ÷£ºUARTn uartn      Ä£¿éºÅ£¨UART0~UART1£©
//   95 *  º¯Êý·µ»Ø£ºÎÞ
//   96 *  Ê¹ÓÃÊ¾Àý£ºchar Buff[10];UART_PutNChar(UART0,&Buff[0],5);   //·¢ËÍÒ»¸ö×Ö·û´®µÄÇ°5¸ö×Ö½Ú
//   97 *************************************************************************/ 

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   98 void UART_PutNChar(UARTn uartn,char * data,uint16_t Length)
UART_PutNChar:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function UART_PutNChar
//   99 {
        FUNCALL UART_PutNChar, UART_PutChar
        LOCFRAME CSTACK, 20, STACK
        PUSHM.A #0x4, R11
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+20
        MOV.B   R12, R10
        MOVA    R13, R11
//  100   for(int i=0; i < Length; i++)
        MOV.W   #0x0, R8
        JMP     ??UART_PutNChar_1
//  101   {
//  102     UART_PutChar(uartn,*data++);
??UART_PutNChar_0:
        MOV.B   @R11+, R13
        MOV.B   R10, R12
        CALLA   #UART_PutChar
//  103   }
        ADD.W   #0x1, R8
??UART_PutNChar_1:
        CMP.W   R14, R8
        JNC     ??UART_PutNChar_0
//  104 }
        POPM.A  #0x4, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock9
//  105 /*************************************************************************
//  106 *  º¯ÊýÃû³Æ£ºUart_PutString
//  107 *  ¹¦ÄÜËµÃ÷£º´®¿Ú·¢ËÍ×Ö·û´®
//  108 *  ²ÎÊýËµÃ÷£ºUARTn uartn       Ä£¿éºÅ£¨UART0~UART1£©
//  109 *  º¯Êý·µ»Ø£ºÎÞ
//  110 *  Ê¹ÓÃÊ¾Àý£ºUART_PutString  (UART0 ,"Hello!");  //·¢ËÍÒ»¸ö×Ö·û´®
//  111 *************************************************************************/  

        RSEG CODE:CODE:REORDER:NOROOT(1)
//  112 void UART_PutString  (UARTn uartn ,const char * str)
UART_PutString:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function UART_PutString
//  113 {
        FUNCALL UART_PutString, UART_PutChar
        LOCFRAME CSTACK, 8, STACK
        PUSHM.A #0x1, R10
          CFI R10L Frame(CFA, -8)
          CFI R10H Frame(CFA, -6)
          CFI CFA SP+8
        MOV.B   R12, R14
        MOVA    R13, R10
        JMP     ??UART_PutString_1
//  114     while(*str != '\0')
//  115     {
//  116       UART_PutChar(uartn,*str++);
??UART_PutString_0:
        MOV.B   @R10+, R13
        MOV.B   R14, R12
        CALLA   #UART_PutChar
//  117     }
??UART_PutString_1:
        CMP.B   #0x0, 0(R10)
        JNE     ??UART_PutString_0
//  118 }
        POPM.A  #0x1, R10
          CFI R10H SameValue
          CFI R10L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock10
//  119 /*************************************************************************
//  120 *  º¯ÊýÃû³Æ£ºUART_Printf
//  121 *  ¹¦ÄÜËµÃ÷£º´®¿Ú·¢ËÍ×Ö·û´®
//  122 *  ²ÎÊýËµÃ÷£ºUARTn uartn     Ä£¿éºÅ£¨UART0~UART1£©
//  123 *  º¯Êý·µ»Ø£ºÎÞ
//  124 *  Ê¹ÓÃÊ¾Àý£ºUART_Printf(UART0 ,"Hello!:i=%d,J=%f",i,1.0);  //·¢ËÍÒ»¸ö×Ö·û´®
//  125 *************************************************************************/ 

        RSEG CODE:CODE:REORDER:NOROOT(1)
//  126 void UART_Printf(UARTn uartn ,const char * fmt,...)
UART_Printf:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI Function UART_Printf
//  127 {
        FUNCALL UART_Printf, vsprintf
        LOCFRAME CSTACK, 148, STACK
        FUNCALL UART_Printf, UART_PutString
        LOCFRAME CSTACK, 148, STACK
        PUSHM.A #0x2, R11
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+12
        SUB.W   #0x84, SP
          CFI CFA SP+144
        MOV.B   R12, R10
//  128   char UART_String[128];
//  129   va_list ap;
//  130   va_start(ap,fmt);
        MOV.W   SP, R15
        ADD.W   #0x90, R15
        MOVA    R15, 0(SP)
        MOV.W   SP, R11
        ADD.W   #0x4, R11
        PUSH.W  #0x0
          CFI CFA SP+146
        PUSH.W  R15
          CFI CFA SP+148
        MOVA    R11, R12
//  131   vsprintf(UART_String,fmt,ap);
        CALLA   #vsprintf
//  132   UART_PutString  (uartn ,UART_String);
        MOVA    R11, R13
        MOV.B   R10, R12
        CALLA   #UART_PutString
//  133   va_end(ap);
//  134 }
        ADD.W   #0x88, SP
          CFI CFA SP+12
        POPM.A  #0x2, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock11
//  135 /*************************************************************************
//  136 *  º¯ÊýÃû³Æ£ºUART_ITConfig      (UARTn uartn,UART_IRQn irqn,STATUS ITState)
//  137 *  ¹¦ÄÜËµÃ÷£ºÉèÖÃ´®¿ÚÖÐ¶Ï
//  138 *  ²ÎÊýËµÃ÷£ºUARTn uartn       Ä£¿éºÅ£¨UART0~UART1£©
//  139              UART_IRQn irqn   £ºÖÐ¶ÏÊÂ¼þ
//  140              STATUS ITState   £ºÊÇ·ñÊ¹ÄÜÖÐ¶Ï
//  141 *  º¯Êý·µ»Ø£ºÎÞ
//  142 *  Ê¹ÓÃÊ¾Àý£ºUART_ITConfig      (UART0,UART_RX_IRQn,ENABLE);  //ÉèÖÃUART0½ÓÊÕÖÐ¶ÏÔÊÐí
//  143 *************************************************************************/ 

        RSEG CODE:CODE:REORDER:NOROOT(1)
//  144 void  UART_ITConfig      (UARTn uartn,UART_IRQn irqn,STATUS ITState)
UART_ITConfig:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI Function UART_ITConfig
//  145 {
//  146   if(ITState != DISABLE)
        CALLA   #?Subroutine0
??CrossCallReturnLabel_2:
        CMP.B   #0x0, R14
        JEQ     ??UART_ITConfig_0
//  147   {
//  148     USCIX[uartn]->IE |= irqn;
        BIS.B   R13, 0x1c(R15)
        RETA
//  149   }
//  150   else
//  151   {
//  152     USCIX[uartn]->IE &=~irqn;
??UART_ITConfig_0:
        BIC.B   R13, 0x1c(R15)
//  153   }
//  154 }
        RETA
          CFI EndBlock cfiBlock12
//  155 /*************************************************************************
//  156 *  º¯ÊýÃû³Æ£ºUART_GetITStatus  (UARTn uartn,UART_IRQn irqn)
//  157 *  ¹¦ÄÜËµÃ÷£ºÇå³ý´®¿ÚÄ³Ò»¸öÖÐ¶Ï±êÖ¾
//  158 *  ²ÎÊýËµÃ÷£ºUARTn uartn      Ä£¿éºÅ£¨UART0~UART1£©
//  159              UART_IRQn irqn  £ºÖÐ¶ÏÊÂ¼þ
//  160 *  º¯Êý·µ»Ø£ºSTATUS : TRUE-ÖÐ¶ÏÊÂ¼þ·¢Éú FALSE-ÖÐ¶ÏÊÂ¼þÎ´·¢Éú
//  161 *  Ê¹ÓÃÊ¾Àý£ºif(TRUE == UART_GetITStatus  (UART0,UART_RX_IRQn)){...} //ÅÐ¶ÏUART0½ÓÊÕÖÐ¶ÏÊÂ¼þÊÇ·ñ·¢Éú
//  162 *************************************************************************/ 

        RSEG CODE:CODE:REORDER:NOROOT(1)
//  163 STATUS UART_GetITStatus  (UARTn uartn,UART_IRQn irqn)
UART_GetITStatus:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI Function UART_GetITStatus
//  164 {
//  165   return ((USCIX[uartn]->IFG & irqn) ? TRUE : FALSE);
        CALLA   #?Subroutine0
??CrossCallReturnLabel_1:
        BIT.B   R13, 0x1d(R15)
        JNE     ??UART_GetITStatus_0
        MOV.B   #0x0, R12
        RETA
??UART_GetITStatus_0:
        MOV.B   #0x1, R12
        RETA
          CFI EndBlock cfiBlock13
//  166 }
//  167 /*************************************************************************
//  168 *  º¯ÊýÃû³Æ£ºUART_ClearITPendingBit(UARTn uartn,UART_IRQn irqn)
//  169 *  ¹¦ÄÜËµÃ÷£ºÇå³ý´®¿ÚÄ³Ò»¸öÖÐ¶Ï±êÖ¾
//  170 *  ²ÎÊýËµÃ÷£ºUARTn uartn      Ä£¿éºÅ£¨UART0~UART1£©
//  171              UART_IRQn irqn  £ºÖÐ¶ÏÊÂ¼þ
//  172 *  º¯Êý·µ»Ø£ºÎÞ
//  173 *  Ê¹ÓÃÊ¾Àý£ºUART_ClearITPendingBit(UART0,UART_RX_IRQn);  //Çå³ýUART0½ÓÊÕÖÐ¶Ï±êÖ¾Î»
//  174 *************************************************************************/ 

        RSEG CODE:CODE:REORDER:NOROOT(1)
//  175 void  UART_ClearITPendingBit(UARTn uartn,UART_IRQn irqn)
UART_ClearITPendingBit:
          CFI Block cfiBlock14 Using cfiCommon0
          CFI Function UART_ClearITPendingBit
//  176 {
//  177   USCIX[uartn]->IFG &=~ irqn;
        CALLA   #?Subroutine0
??CrossCallReturnLabel_0:
        BIC.B   R13, 0x1d(R15)
//  178 }
        RETA
          CFI EndBlock cfiBlock14

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
//  179 
//  180 #if defined(DEBUG)&&defined(DEBUG_UART_PRINT)
//  181 
//  182 #ifdef __GNUC__
//  183   /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
//  184      set to 'Yes') calls __io_putchar() */
//  185   #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
//  186 #else
//  187   #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
//  188 #endif /* __GNUC__ */
//  189 
//  190 PUTCHAR_PROTOTYPE
//  191 {
//  192   UART_PutChar(Print_UART,(char)ch);
//  193   return ch;
//  194 }
//  195  
//  196 #endif
// 
// 456 bytes in segment CODE
//   8 bytes in segment DATA20_C
// 
// 456 bytes of CODE  memory
//   8 bytes of CONST memory
//
//Errors: none
//Warnings: none
