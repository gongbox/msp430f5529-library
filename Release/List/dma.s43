///////////////////////////////////////////////////////////////////////////////
//                                                                            /
//                                                      06/Jun/2016  16:42:22 /
// IAR C/C++ Compiler V5.50.1.20465/W32, Evaluation edition for MSP430        /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    __rt_version  =  3                                                      /
//    __double_size =  32                                                     /
//    __reg_r4      =  free                                                   /
//    __reg_r5      =  free                                                   /
//    __pic         =  no                                                     /
//    __core        =  430X                                                   /
//    __data_model  =  large                                                  /
//    Source file   =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\dma.c                              /
//    Command line  =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\dma.c -D NDEBUG -D RAM_VECTOR -lC  /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Release\List\ -lA C:\Users\615\Desktop\MSP430\ /
//                     MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Release\List\ -o     /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Release\Obj\ -D__MSP430F5529__ -e --double=32  /
//                     --dlib_config "D:\Program Files (x86)\IAR              /
//                     Systems\Embedded Workbench 6.4                         /
//                     Evaluation\430\LIB\DLIB\dl430xlfn.h" -I                /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\ -I C:\Users\615\Desktop\MSP430\MSP430F5529¿âº /
//                     ¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\inc\ -I                    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\ -I C:\Users\615\Desktop\MSP430\MS /
//                     P430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\src\USB\ -I    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_config\ -I                 /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_User\ -I                   /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\srcUSB\USB_API\USB_CDC_API\ -I         /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_API\USB_HID_API\ -I        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Drivers\src\USB\USB_API\USB_MSC_API\ -I        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\KEY\ -I C:\Users\615\Desktop\MSP430\M /
//                     SP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\HardWare\LED\ -I      /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\12864\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\oled\ -I C:\Users\615\Desktop\MSP430\ /
//                     MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\HardWare\mpu6050\inc /
//                     \ -I C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\ /
//                     C°æ\¹¤³ÌÄ£°å\HardWare\mpu6050\src\ -I                  /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\nokia5110\inc\ -I                     /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\nokia5110\src\ -I                     /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\LQ_1.8_TFT\ -I                        /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\LCD_API\ -I                           /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\2.2TFT\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\HardWare\delay\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\System\ -I C:\Users\615\Desktop\MSP430\MSP430F /
//                     5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\System\inc\ -I              /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\System\src\ -I C:\Users\615\Desktop\MSP430\MSP /
//                     430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\User\ -I                /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\User\USER\ -I C:\Users\615\Desktop\MSP430\MSP4 /
//                     30F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Lib\UCOSII\CONFIG\ -I    /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\App\ -I                             /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\CONFIHG\ -I                         /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\uCOSII\PORT\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\UCOSII\CORE\ -I                            /
//                     C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Lib\FatFs\ -I C:\Users\615\Desktop\MSP430\MSP4 /
//                     30F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Lib\FatFs\option\        /
//                     --core=430X --data_model=large -Oh --multiplier=32     /
//                     --multiplier_location=4C0 --hw_workaround=CPU40        /
//    List file     =  C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹ /
//                     ¤³ÌÄ£°å\Release\List\dma.s43                           /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME dma

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__core", "430X"
        RTMODEL "__data_model", "large"
        RTMODEL "__double_size", "32"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBLIC DMAX
        PUBLIC DMA_ClearITPendingBit
        FUNCTION DMA_ClearITPendingBit,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC DMA_Cmd
        FUNCTION DMA_Cmd,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC DMA_GetITStatus
        FUNCTION DMA_GetITStatus,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC DMA_ITConfig
        FUNCTION DMA_ITConfig,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC DMA_Init
        FUNCTION DMA_Init,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 28, STACK
        PUBLIC DMA_Software_Trigger
        FUNCTION DMA_Software_Trigger,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBWEAK _A_DMACTL0_L
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:20, SP:20, SR:16, R4L:16, R4H:4, R4:20, R5L:16, R5H:4
          CFI Resource R5:20, R6L:16, R6H:4, R6:20, R7L:16, R7H:4, R7:20, R8L:16
          CFI Resource R8H:4, R8:20, R9L:16, R9H:4, R9:20, R10L:16, R10H:4
          CFI Resource R10:20, R11L:16, R11H:4, R11:20, R12L:16, R12H:4, R12:20
          CFI Resource R13L:16, R13H:4, R13:20, R14L:16, R14H:4, R14:20, R15L:16
          CFI Resource R15H:4, R15:20
          CFI ResourceParts R4 R4H, R4L
          CFI ResourceParts R5 R5H, R5L
          CFI ResourceParts R6 R6H, R6L
          CFI ResourceParts R7 R7H, R7L
          CFI ResourceParts R8 R8H, R8L
          CFI ResourceParts R9 R9H, R9L
          CFI ResourceParts R10 R10H, R10L
          CFI ResourceParts R11 R11H, R11L
          CFI ResourceParts R12 R12H, R12L
          CFI ResourceParts R13 R13H, R13L
          CFI ResourceParts R14 R14H, R14L
          CFI ResourceParts R15 R15H, R15L
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L Undefined
          CFI R12H Undefined
          CFI R12 Undefined
          CFI R13L Undefined
          CFI R13H Undefined
          CFI R13 Undefined
          CFI R14L Undefined
          CFI R14H Undefined
          CFI R14 Undefined
          CFI R15L Undefined
          CFI R15H Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L SameValue
          CFI R12H SameValue
          CFI R12 Concat
          CFI R13L SameValue
          CFI R13H SameValue
          CFI R13 Concat
          CFI R14L SameValue
          CFI R14H SameValue
          CFI R14 Concat
          CFI R15L SameValue
          CFI R15H SameValue
          CFI R15 Concat
          CFI EndCommon cfiCommon1
        
// C:\Users\615\Desktop\MSP430\MSP430F5529¿âº¯Êý2.5\C°æ\¹¤³ÌÄ£°å\Drivers\src\dma.c
//    1 #include "dma.h"

        ASEGN DATA16_AN:DATA:NOROOT,0500H
// union <unnamed> __data16 _A_DMACTL0_L
_A_DMACTL0_L:
        DS8 2
//    2 

        RSEG DATA20_C:CONST:SORT:NOROOT(1)
//    3 const DMA_MemMapPtr      DMAX = DMA_BASE_PTR;
DMAX:
        DC32 500H
//    4 /*******************************************************************************
//    5 *  º¯ÊýÃû³Æ£ºDMA_Init(DMA_CHn dma_ch, void *SADDR, void *DADDR, DMA_Trigger Trigger, uint16_t count, uint16_t config)
//    6 *  ¹¦ÄÜËµÃ÷£º³õÊ¼»¯Ò»¸öDMAÍ¨µÀ
//    7 *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch             :DMAÍ¨µÀ
//    8              void *SADDR                :DMA´«ÊäÔ´µØÖ·
//    9              void *DADDR                :DMA´«ÊäÄ¿µÄµØÖ·
//   10              DMA_Trigger Trigger        :DMA´«Êä´¥·¢Ìõ¼þ
//   11              uint16_t count               :DMA´«Êä´ÎÊý
//   12              uint16_t config              :DMA´«ÊäÅäÖÃ
//   13 *  º¯Êý·µ»Ø£ºÎÞ
//   14 *  Ê¹ÓÃÊ¾Àý£º DMA_Init(DMA_CH2, &Sdata, &DData,DMATSEL_DMA_REQ,255,  DMA_SRCAddr_KeepOn|DMA_DSTAddr_KeepOn|DMA_WORD|DMA_Single|DMA_Edge);
//   15                        //Í¨µÀ2£¬Ô´µØÖ·£¬Ä¿µÄµØÖ·£¬´¥·¢Ô´£¬´«Êä255¸ö×Ö£¬Ô´µØÖ·²»±ä£¬Ä¿µÄµØÖ·²»±ä£¬×Ö´«Êä£¬µ¥´Î´¥·¢£¬±ßÑØ´¥·¢
//   16 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   17 void DMA_Init(DMA_CHn dma_ch, void *SADDR, void *DADDR, DMA_Trigger Trigger, uint16_t count, uint16_t config)
DMA_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function DMA_Init
//   18 { 
        PUSHM.A #0x6, R11
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+28
        MOV.W   0x1c(SP), R6
        MOV.W   0x1e(SP), R10
//   19   DMAX->CHX[dma_ch].EN = RESET;                          //¹Ø±ÕDMAÄ£¿é
        MOV.B   R12, R8
        RLAM.A  #0x4, R8
        MOVA    R8, R11
        ADDA    #0x500, R8
        BIC.W   #0x10, 0x10(R8)
//   20   DMAX->CHX[dma_ch].DA = (uint32_t)DADDR;                  //ÉèÖÃÄ¿µÄµØÖ·
        PUSHM.A #0x1, R14
          CFI CFA SP+32
        POPM.W  #0x2, R9
          CFI CFA SP+28
        MOVA    R11, R14
        ADDA    #0x500, R14
        MOV.W   R8, 0x16(R14)
        MOV.W   R9, 0x18(R14)
//   21   DMAX->CHX[dma_ch].SA = (uint32_t)SADDR;                  //ÉèÖÃÔ´µØÖ·
        PUSHM.A #0x1, R13
          CFI CFA SP+32
        POPM.W  #0x2, R9
          CFI CFA SP+28
        MOVA    R11, R14
        ADDA    #0x500, R14
        MOV.W   R8, 0x12(R14)
        MOV.W   R9, 0x14(R14)
//   22   DMAX->CHX[dma_ch].SZ = count;                          //ÉèÖÃÐ´ÈëÊý¾Ý´óÐ¡
        MOVA    R11, R14
        ADDA    #0x500, R14
        MOV.W   R6, 0x1a(R14)
//   23   
//   24   //DMAX->TSSEL[dma_ch] = Trigger;                         //ÕâÑùÐ´»áÓÐÎÊÌâ£¬²»ÖªµÀÎªÊ²Ã´£¡
//   25   if((dma_ch%2) == 0)
        MOV.B   R12, R14
        RRUM.W  #0x1, R14
        RLA.W   R14
        BIT.B   #0x1, R12
        JC      ??DMA_Init_0
//   26   {
//   27    *(&DMACTL0 + (dma_ch/2)) &= 0xFF00;      //ÏÈÇå³ý´¥·¢Ô´
        AND.W   #0xff00, 0x500(R14)
//   28    *(&DMACTL0 + (dma_ch/2)) |= Trigger;     //ÔÙÉèÖÃ´¥·¢Ô´
        MOV.B   R15, R15
        JMP     ??DMA_Init_1
//   29   }
//   30   else
//   31   {
//   32     *(&DMACTL0 + (dma_ch/2)) &= 0x00FF;
??DMA_Init_0:
        AND.W   #0xff, 0x500(R14)
//   33     *(&DMACTL0 + (dma_ch/2)) |= Trigger<<8;
        MOV.B   R15, R15
        SWPB    R15
??DMA_Init_1:
        BIS.W   R15, 0x500(R14)
//   34   }
//   35   DMAX->CHX[dma_ch].CTL = config;                       //ÅäÖÃDMAÄ£¿é
        MOVA    R11, R15
        ADDA    #0x500, R15
        MOV.W   R10, 0x10(R15)
//   36   DMAX->CHX[dma_ch].EN = SET;                           //Ê¹ÄÜDMAÄ£¿é
        ADDA    #0x500, R11
        BIS.W   #0x10, 0x10(R11)
//   37 }
        POPM.A  #0x6, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R6H SameValue
          CFI R7H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R6L SameValue
          CFI R7L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock0
        REQUIRE _A_DMACTL0_L
//   38 /*******************************************************************************
//   39 *  º¯ÊýÃû³Æ£ºDMA_Cmd  (DMA_CHn dma_ch,BOOL State)
//   40 *  ¹¦ÄÜËµÃ÷£ºDMAÊ¹ÄÜ»ò½ûÖ¹
//   41 *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch     :DMA´«ÊäÍ¨µÀ
//   42              STATUS State       :DMAÊÇ·ñÊ¹ÄÜ
//   43 *  º¯Êý·µ»Ø£ºÎÞ
//   44 *  Ê¹ÓÃÊ¾Àý£ºDMA_Cmd  (DMA_CH1,ENABLE);  //Ê¹ÄÜDMAÍ¨µÀ1
//   45 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine0:
          CFI Block cfiCond1 Using cfiCommon0
          CFI Function DMA_ClearITPendingBit
          CFI Conditional ??CrossCallReturnLabel_0
          CFI CFA SP+8
          CFI Block cfiCond2 Using cfiCommon0
          CFI (cfiCond2) Function DMA_GetITStatus
          CFI (cfiCond2) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond2) CFA SP+8
          CFI Block cfiCond3 Using cfiCommon0
          CFI (cfiCond3) Function DMA_Cmd
          CFI (cfiCond3) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond3) CFA SP+8
          CFI Block cfiPicker4 Using cfiCommon1
          CFI (cfiPicker4) NoFunction
          CFI (cfiPicker4) Picker
        MOV.B   R12, R12
        RLAM.A  #0x4, R12
        ADDA    #0x500, R12
        RETA
          CFI EndBlock cfiCond1
          CFI EndBlock cfiCond2
          CFI EndBlock cfiCond3
          CFI EndBlock cfiPicker4

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   46 void DMA_Cmd  (DMA_CHn dma_ch,STATUS State)
DMA_Cmd:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function DMA_Cmd
//   47 {
//   48   DMAX->CHX[dma_ch].EN = State; 
        MOV.B   R13, R13
        CALLA   #?Subroutine0
??CrossCallReturnLabel_2:
        BIT.W   #0x1, R13
        JC      ??DMA_Cmd_0
        BIC.W   #0x10, 0x10(R12)
        RETA
??DMA_Cmd_0:
        BIS.W   #0x10, 0x10(R12)
//   49 }
        RETA
          CFI EndBlock cfiBlock5
//   50 /*******************************************************************************
//   51 *  º¯ÊýÃû³Æ£ºDMA_Software_Trigger(DMA_CHn dma_ch)
//   52 *  ¹¦ÄÜËµÃ÷£ºÈí¼þ´¥·¢Ò»´ÎDMA´«Êä
//   53 *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch     :DMA´«ÊäÍ¨µÀ
//   54 *  º¯Êý·µ»Ø£ºÎÞ
//   55 *  Ê¹ÓÃÊ¾Àý£ºDMA_Software_Trigger(DMA_CH1);  //Èí¼þ´¥·¢Ò»´ÎDMAÍ¨µÀ1´«Êä
//   56 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   57 void DMA_Software_Trigger(DMA_CHn dma_ch)
DMA_Software_Trigger:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function DMA_Software_Trigger
//   58 {    
//   59   DMAX->CHX[dma_ch].REQ = RESET; 
        CALLA   #?Subroutine1
??CrossCallReturnLabel_4:
        BIC.W   #0x1, 0x10(R14)
//   60   DMAX->CHX[dma_ch].REQ = SET; 
        ADDA    #0x500, R15
        BIS.W   #0x1, 0x10(R15)
//   61 }
        RETA
          CFI EndBlock cfiBlock6

        RSEG CODE:CODE:REORDER:NOROOT(1)
?Subroutine1:
          CFI Block cfiCond7 Using cfiCommon0
          CFI Function DMA_ITConfig
          CFI Conditional ??CrossCallReturnLabel_3
          CFI CFA SP+8
          CFI Block cfiCond8 Using cfiCommon0
          CFI (cfiCond8) Function DMA_Software_Trigger
          CFI (cfiCond8) Conditional ??CrossCallReturnLabel_4
          CFI (cfiCond8) CFA SP+8
          CFI Block cfiPicker9 Using cfiCommon1
          CFI (cfiPicker9) NoFunction
          CFI (cfiPicker9) Picker
        MOV.B   R12, R12
        RLAM.A  #0x4, R12
        MOVA    R12, R15
        MOVA    R12, R14
        ADDA    #0x500, R14
        RETA
          CFI EndBlock cfiCond7
          CFI EndBlock cfiCond8
          CFI EndBlock cfiPicker9
//   62 /*******************************************************************************
//   63 *  º¯ÊýÃû³Æ£ºDMA_ITConfig (DMA_CHn dma_ch,STATUS ITState)
//   64 *  ¹¦ÄÜËµÃ÷£ºÉèÖÃÊÇ·ñÊ¹ÄÜDMAÄ³Ò»Í¨µÀÍê³ÉÖÐ¶Ï
//   65 *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch     :DMA´«ÊäÍ¨µÀ
//   66              BOOL ITState       :ÊÇ·ñÊ¹ÄÜDMA´«ÊäÍê³ÉÖÐ¶Ï
//   67 *  º¯Êý·µ»Ø£ºÎÞ
//   68 *  Ê¹ÓÃÊ¾Àý£ºDMA_ITConfig (DMA_CH0,ENABLE);  //Ê¹ÄÜDMAÍ¨µÀ1´«ÊäÍê³ÉÖÐ¶Ï
//   69 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   70 void DMA_ITConfig (DMA_CHn dma_ch,STATUS ITState)
DMA_ITConfig:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function DMA_ITConfig
//   71 {
//   72   DMAX->CHX[dma_ch].IFG = RESET;
        CALLA   #?Subroutine1
??CrossCallReturnLabel_3:
        BIC.W   #0x8, 0x10(R14)
//   73   DMAX->CHX[dma_ch].IE = ITState; 
        MOV.B   R13, R13
        ADDA    #0x500, R15
        BIT.W   #0x1, R13
        JC      ??DMA_ITConfig_0
        BIC.W   #0x4, 0x10(R15)
        RETA
??DMA_ITConfig_0:
        BIS.W   #0x4, 0x10(R15)
//   74 }
        RETA
          CFI EndBlock cfiBlock10
//   75 /*******************************************************************************
//   76 *  º¯ÊýÃû³Æ£ºDMA_GetITStatus(DMA_CHn dma_ch)
//   77 *  ¹¦ÄÜËµÃ÷£ºÅÐ¶ÏÄ³Ò»¸öÍ¨µÀÖÐ¶Ï±êÖ¾Î»×´Ì¬
//   78 *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch     :DMA´«ÊäÍ¨µÀ
//   79 *  º¯Êý·µ»Ø£ºSTATUS  :TRUE ÖÐ¶ÏÊÂ¼þ·¢Éú FALSE ÖÐ¶ÏÊÂ¼þÎ´·¢Éú
//   80 *  Ê¹ÓÃÊ¾Àý£ºif(TRUE == DMA_GetITStatus(DMA_CH0)){...}  //ÅÐ¶ÏDMAÍ¨µÀ1ÊÇ·ñ·¢Éú´«ÊäÍê³ÉÖÐ¶Ï
//   81 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   82 STATUS DMA_GetITStatus(DMA_CHn dma_ch)
DMA_GetITStatus:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI Function DMA_GetITStatus
//   83 {
//   84   return ((DMAX->CHX[dma_ch].IFG) ? TRUE : FALSE);
        CALLA   #?Subroutine0
??CrossCallReturnLabel_1:
        BIT.W   #0x8, 0x10(R12)
        SUBC.B  R12, R12
        ADD.B   #0x1, R12
        RETA
          CFI EndBlock cfiBlock11
//   85 }
//   86 /*******************************************************************************
//   87 *  º¯ÊýÃû³Æ£ºDMA_ClearITPendingBit(DMA_CHn dma_ch)
//   88 *  ¹¦ÄÜËµÃ÷£ºDMAÇå³ýÄ³Ò»Í¨µÀÖÐ¶Ï±êÖ¾
//   89 *  ²ÎÊýËµÃ÷£ºDMA_CHn dma_ch     :DMA´«ÊäÍ¨µÀ
//   90 *  º¯Êý·µ»Ø£ºÎÞ
//   91 *  Ê¹ÓÃÊ¾Àý£ºDMA_ClearITPendingBit(DMA_CH0);  //Çå³ýDMAÍ¨µÀ1´«ÊäÍê³ÉÖÐ¶Ï±êÖ¾Î»
//   92 ********************************************************************************/

        RSEG CODE:CODE:REORDER:NOROOT(1)
//   93 void DMA_ClearITPendingBit(DMA_CHn dma_ch)
DMA_ClearITPendingBit:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI Function DMA_ClearITPendingBit
//   94 {
//   95   DMAX->CHX[dma_ch].IFG = RESET;
        CALLA   #?Subroutine0
??CrossCallReturnLabel_0:
        BIC.W   #0x8, 0x10(R12)
//   96 }
        RETA
          CFI EndBlock cfiBlock12

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
// 
// 252 bytes in segment CODE
//   2 bytes in segment DATA16_AN
//   4 bytes in segment DATA20_C
// 
// 252 bytes of CODE  memory
//   4 bytes of CONST memory
//   0 bytes of DATA  memory (+ 2 bytes shared)
//
//Errors: none
//Warnings: none
